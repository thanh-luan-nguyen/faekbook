{"version":3,"sources":["styles/globalValues.ts","utils/Context.ts","utils/themes.ts","utils/defaultPhotos.ts","components/Navbar.tsx","reducers.ts","firebaseConfig.ts","utils/TurnOffModalButton.tsx","components/Modals/LogInModal.tsx","components/Modals/SignUpModal.tsx","utils/BlueBgLikeIcon.tsx","components/Modals/CommentModal.tsx","components/Body/Comment.tsx","components/Modals/PostModal.tsx","components/Body/Post.tsx","components/Body/WhatsOnYourMind.tsx","components/Body/MainPage.tsx","components/Body/ProfilePage.tsx","utils/useWindowSize.ts","components/Modals/DropDownMenu.tsx","components/Modals/CreatePost.tsx","components/Modals/EditPostModal.tsx","App.tsx","index.tsx"],"names":["globalValues","navbar_elements_height","navbar_column_gap","navbar_height","dropdown_menu_bdr_rds","ButtonCSS","css","InputCSS","Context","createContext","themes","light","type","bxShdw","main_bgclr","nav_btm_brdr_clr","font","font_lighter","divider_clr","hover","icon_color","theme_toggler_bgclr","theme_toggler_bgclr_active","theme_toggler_icon_active","body","like_icon_bgclr","avatar_pic_cam_icon_bgclr","whats_on_ur_mind_bgclr","dark","imageObjectSettings","defaultAvatar","rotation","keyframes","StyledNav","styled","p","theme","bxShadw","menuVisibility","Navbar","useContext","toggleState","isUserSignedIn","CUAvatarURL","currentUserInfo","dispatchToggle","dispatchDimBgModal","userProfileButton","to","uid","className","src","undefined","alt","first_name","logInButton","onClick","isDarkTheme","dropDownMenuIsVisible","e","stopPropagation","toggleReducer","state","action","authenModalReducer","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","Authen","email","password","firstName","lastName","callback","createUserWithEmailAndPassword","then","userCredential","console","log","user","newUser","last_name","short_bio","is_dark_theme","DB","setUser","signIn","catch","err","alert","code","message","signInWithEmailAndPassword","signOut","payload","setDoc","doc","updateDoc","q","setStateCallback","onSnapshot","docs","docsArray","forEach","push","data","id","liker","liked","collection","getDoc","likes","includes","splice","indexOf","Storage","setAvatarURL","setCoverImageURL","avatarRef","ref","coverImageRef","getDownloadURL","url","TurnOffModalButton","StyledSpan","span","LogInModal","useState","setEmail","setPassword","StyledDiv","value","onChange","target","placeholder","div","SignUpModal","setFirstName","setLastName","signUp","BlueBgLikeIcon","CommentModal","commentID","setIsShowingModal","isShowingModal","setCBEPostId","modalNode","useRef","useEffect","document","addEventListener","handleClick","removeEventListener","current","deleteDoc","hasLikes","isLikedByCU","Comment","commenterUID","content","date","commentAvatar","setCommentAvatar","userInfo","setUserInfo","setIsLiked","updatePhotoURL","userSnap","length","like","format","fromUnixTime","seconds","PostModal","postID","StyledSection","isShowingComments","isLikedByCurrentUser","hasComments","Post","full_name","userID","postAvatarURL","setPostAvatar","setIsShowingComments","commentInput","setCommentInput","comments","setComments","threeDotsNode","postsRef","query","where","orderBy","unsub","setSnapshotListener","renderComments","map","cmt","commenterID","onSubmit","preventDefault","newComment","Timestamp","fromDate","Date","addDoc","WhatsOnYourMind","section","MainPage","allPosts","setAllPosts","renderPosts","fullname","bgGradient","editCoverPhotoHidden","ProfilePage","setCUAvatarURL","useParams","userCoverImgURL","userAvatarURL","setUserAvatarURL","userPosts","setUserPosts","setEditCoverPhotoHidden","setBgGradient","fileRef","updatePhoto","file","files","isAvatar","fileName","deleteObject","uploadBytes","is_profile_page","size","width","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","useWindowSize","colorThief","ColorThief","img","querySelector","onload","color","getColor","toString","renderColorThief","encodeURIComponent","crossOrigin","accept","style","display","fill","DropDownMenu","history","useHistory","renderAvatar","updateUserInfo","CreatePost","setContent","textSmallSize","postButtonActivated","autoFocus","disabled","post","EditPostModal","CBEPostID","beforeEdittedContent","isLoaded","setIsLoaded","onFocus","currentTarget","setSelectionRange","Screen","authenType","createPostIsVisible","App","setIsUserSignedIn","setCurrentUserInfo","useReducer","dimBgModal","onAuthStateChanged","a","Provider","postModalIsVisible","exact","path","component","renderModal","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d7675b59.chunk.js","sourcesContent":["import { css } from 'styled-components'\r\n\r\nconst globalValues = {\r\n  navbar_elements_height: '3rem',\r\n  navbar_column_gap: '1rem',\r\n  navbar_height: '4.5rem',\r\n  dropdown_menu_bdr_rds: '10px',\r\n  ButtonCSS: css`\r\n    font-size: inherit;\r\n    border-radius: 0.5rem;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: white;\r\n    background-color: #42b72a;\r\n    width: 100%;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n  InputCSS: css`\r\n    outline: none;\r\n    border: 1px solid #dddfe2;\r\n    border-radius: 0.5rem;\r\n    width: 100%;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    &::placeholder {\r\n      color: #90949c;\r\n      font-weight: 100;\r\n    }\r\n  `,\r\n}\r\n\r\nexport default globalValues\r\n","import { createContext } from 'react'\r\n\r\n// interface ContextInterface {\r\n//   currentUserEmail: any\r\n//   setCurrentEmail: any\r\n//   currentUserInfoState: any\r\n//   setCurrentUserInfoState: any\r\n//   handleSignIn: any\r\n//   toggleState: any\r\n//   dispatchToggle: any\r\n//   isSignedIn: any\r\n//   dispatchSignInOut: any\r\n//   dimBgModal: any\r\n//   dispatchDimBgModal: any\r\n//   handleSignOut: any\r\n// }\r\n\r\nconst Context = createContext({} as any)\r\n\r\nexport default Context\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const themes = {\r\n  light: {\r\n    type: 'light',\r\n\r\n    bxShdw:\r\n      'rgba(50, 50, 93, 0.25) 0 0 5px -1px, rgba(0, 0, 0, 0.3) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#fff',\r\n    nav_btm_brdr_clr: '#fff',\r\n    // fb_icon: '#000',\r\n    font: '#050505',\r\n    font_lighter: '#65676b',\r\n    // menu\r\n    divider_clr: '#ced0d4',\r\n    hover: '#d4d4d434',\r\n    icon_color: '#1d1f23',\r\n    theme_toggler_bgclr: '#e6e8ed',\r\n    theme_toggler_bgclr_active: '#E7F3FF',\r\n    theme_toggler_icon_active: '#0571ED',\r\n\r\n    // body\r\n    body: '#f0f2f5',\r\n    like_icon_bgclr: '#fff',\r\n    avatar_pic_cam_icon_bgclr: '#e4e6eb',\r\n\r\n    whats_on_ur_mind_bgclr: '#F0F2F5',\r\n  },\r\n  dark: {\r\n    type: 'dark',\r\n\r\n    bxShdw:\r\n      'rgba(255, 255, 255) 0 0 5px -1px, rgba(255, 255, 255) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#242526',\r\n    nav_btm_brdr_clr: '#393a3b',\r\n    // fb_icon: '#fff',\r\n    font: '#e4e6eb',\r\n    font_lighter: '#b0b3b8',\r\n    // menu\r\n    divider_clr: '#3e4042',\r\n    hover: '#ffffff45',\r\n    icon_color: '#e4e6ea',\r\n    theme_toggler_bgclr: '#4e5052',\r\n    theme_toggler_bgclr_active: '#263951',\r\n    theme_toggler_icon_active: '#2D86FF',\r\n    // body\r\n    body: '#18191a',\r\n    like_icon_bgclr: '#3a3b3c',\r\n    avatar_pic_cam_icon_bgclr: '#3a3b3c',\r\n\r\n    whats_on_ur_mind_bgclr: '#3a3b3c',\r\n  },\r\n}\r\n\r\nexport const imageObjectSettings = css`\r\n  aspect-ratio: 1/1;\r\n  object-fit: cover;\r\n  object-position: 50% 20%;\r\n`\r\n","export const defaultAvatar =\r\n  'https://firebasestorage.googleapis.com/v0/b/faekbook1-aa0f8.appspot.com/o/defaults%2FdefaultAvatar.png?alt=media&token=a153e1b2-261c-4c56-a516-27a85bac7ec6'\r\nexport const defaultCoverImage =\r\n  'https://firebasestorage.googleapis.com/v0/b/faekbook1-aa0f8.appspot.com/o/defaults%2FdefaultCoverImage.gif?alt=media&token=458194b5-739b-4fd8-ae77-13ba5fb5dc13'\r\n","import styled, { keyframes } from 'styled-components'\r\nimport globalValues from '../styles/globalValues'\r\nimport { FaFacebook } from 'react-icons/fa'\r\nimport { MdArrowDropDown } from 'react-icons/md'\r\nimport Context from '../utils/Context'\r\nimport React, { useContext } from 'react'\r\n// import DropDownMenu from './Modals/DropDownMenu'\r\nimport { imageObjectSettings, themes } from '../utils/themes'\r\nimport { Link } from 'react-router-dom'\r\nimport { defaultAvatar } from '../utils/defaultPhotos'\r\n\r\nconst Navbar: React.FC<any> = () => {\r\n  const {\r\n    toggleState,\r\n    isUserSignedIn,\r\n    CUAvatarURL,\r\n    currentUserInfo,\r\n    dispatchToggle,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n\r\n  const userProfileButton = (\r\n    <Link to={`/faekbook/${currentUserInfo?.uid}`}>\r\n      <div className='user-profile-button'>\r\n        <img\r\n          src={isUserSignedIn ? CUAvatarURL || defaultAvatar : undefined}\r\n          alt='avatar'\r\n        />\r\n        {isUserSignedIn && currentUserInfo?.first_name}\r\n      </div>\r\n    </Link>\r\n  )\r\n\r\n  const logInButton = (\r\n    <div\r\n      className='log-in-button'\r\n      onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}\r\n    >\r\n      Log In\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <StyledNav\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      menuVisibility={toggleState.dropDownMenuIsVisible ? 1 : 0}\r\n    >\r\n      <div className='left'>\r\n        <Link to='/faekbook/'>\r\n          <FaFacebook className='fb-icon' />\r\n        </Link>\r\n        <Link to='/faekbook/'>\r\n          <span className='faekbook'>faekbook</span>\r\n        </Link>\r\n      </div>\r\n      <div className='right'>\r\n        {isUserSignedIn ? userProfileButton : logInButton}\r\n        <div\r\n          className='toggle-dropdown-menu'\r\n          onClick={e => {\r\n            e.stopPropagation()\r\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          }}\r\n        >\r\n          <MdArrowDropDown />\r\n        </div>\r\n      </div>\r\n      {/* {menuVisibility && <DropDownMenu />} */}\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nconst rotation = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(359deg);\r\n  }\r\n`\r\n\r\nconst StyledNav = styled('nav')<{ menuVisibility: number }>`\r\n  position: sticky;\r\n  top: 0;\r\n  background: ${p => p.theme.main_bgclr};\r\n  height: ${globalValues.navbar_height};\r\n  box-shadow: ${p => p.theme.bxShadw};\r\n  border-bottom: 1px solid ${p => p.theme.nav_btm_brdr_clr};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-inline: 1rem;\r\n  z-index: 100;\r\n  .left {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    a {\r\n      text-decoration: none;\r\n      .fb-icon,\r\n      .faekbook {\r\n        color: ${p => p.theme.font};\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .fb-icon {\r\n        height: ${globalValues.navbar_elements_height};\r\n        width: ${globalValues.navbar_elements_height};\r\n        animation: ${rotation} 2s infinite linear;\r\n      }\r\n    }\r\n  }\r\n  .right {\r\n    display: flex;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    .toggle-dropdown-menu {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      background: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_bgclr_active\r\n          : p.theme.theme_toggler_bgclr};\r\n      font-size: ${globalValues.navbar_elements_height};\r\n      color: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_icon_active\r\n          : p.theme.icon_color};\r\n      &:hover {\r\n        cursor: pointer;\r\n        filter: brightness(${p => (p.theme.type === 'light' ? '0.9' : '1.3')});\r\n      }\r\n    }\r\n    a .user-profile-button,\r\n    .log-in-button {\r\n      height: ${globalValues.navbar_elements_height};\r\n      border-radius: 50px;\r\n      display: flex;\r\n      align-items: center;\r\n      font-weight: 700;\r\n      font-size: 1.25rem;\r\n      color: ${p => p.theme.font};\r\n      &:hover {\r\n        cursor: pointer;\r\n        background: ${p =>\r\n          p.menuVisibility\r\n            ? p.theme.theme_toggler_bgclr_active\r\n            : p.theme.theme_toggler_bgclr};\r\n      }\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      .user-profile-button {\r\n        column-gap: 0.6rem;\r\n        padding-left: 0.35rem;\r\n        padding-right: 0.6rem;\r\n        img {\r\n          height: calc(${globalValues.navbar_elements_height} - 0.5rem);\r\n\r\n          background: ${p => p.theme.theme_toggler_bgclr};\r\n          ${imageObjectSettings}\r\n        }\r\n      }\r\n    }\r\n    .log-in-button {\r\n      padding-inline: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Navbar\r\n","export const toggleReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case 'DARK_THEME':\r\n      return { ...state, isDarkTheme: true }\r\n    case 'LIGHT_THEME':\r\n      return { ...state, isDarkTheme: false }\r\n    case 'TOGGLE_THEME':\r\n      return { ...state, isDarkTheme: !state.isDarkTheme }\r\n    case 'TOGGLE_DROP_DOWN_MENU':\r\n      return { ...state, dropDownMenuIsVisible: !state.dropDownMenuIsVisible }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const isSignedInReducer = (state = false, action: any) => {\r\n  switch (action.type) {\r\n    case 'SIGN_IN':\r\n      return true\r\n    case 'SIGN_OUT':\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const authenModalReducer = (\r\n  state = { action: 'close modals' },\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return { action: 'show login modal' }\r\n    case 'SIGN_UP':\r\n      return { action: 'show signup modal' }\r\n    case 'CREATE_POST':\r\n      return { action: 'show create-post modal' }\r\n    case 'EDIT_POST':\r\n      return { action: 'show edit-post' }\r\n    case 'NONE':\r\n      return { action: 'close modals' }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { DocumentData, getDoc, onSnapshot } from '@firebase/firestore'\r\nimport { initializeApp } from 'firebase/app'\r\nimport { doc, getFirestore, setDoc, updateDoc } from 'firebase/firestore'\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getStorage, ref, getDownloadURL } from 'firebase/storage'\r\nimport { User } from './interface'\r\n\r\nconst app = initializeApp({\r\n  apiKey: 'AIzaSyAowcCuiyILtMdMP96n-RzUh2QVKvrN4OQ',\r\n  authDomain: 'faekbook1-aa0f8.firebaseapp.com',\r\n  projectId: 'faekbook1-aa0f8',\r\n  storageBucket: 'faekbook1-aa0f8.appspot.com',\r\n  messagingSenderId: '989041805197',\r\n  appId: '1:989041805197:web:7661cc2571e3fb3317dfc4',\r\n})\r\n\r\nexport const auth = getAuth()\r\n\r\nexport const db = getFirestore()\r\n\r\nexport const storage = getStorage(app)\r\n\r\nexport class Authen {\r\n  static signUp(\r\n    email: string,\r\n    password: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    callback: any\r\n  ) {\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        console.log('SignUp: ', userCredential)\r\n        const uid = userCredential.user.uid\r\n        const newUser: User = {\r\n          uid: uid,\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          short_bio: 'my bio',\r\n          is_dark_theme: false,\r\n        }\r\n\r\n        DB.setUser(uid, newUser)\r\n        Authen.signIn(email, password, callback)\r\n      })\r\n      .catch(err => {\r\n        alert(`Sign up Error: ${err.code}. ${err.message}`)\r\n      })\r\n  }\r\n  static signIn(email: string, password: string, callback: any) {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        callback()\r\n        console.log(\r\n          `User with email ${userCredential.user.email} has logged in successfully`\r\n        )\r\n      })\r\n      .catch(err => alert(`Sign in Error: ${err.code}. ${err.message}`))\r\n  }\r\n  static signOut() {\r\n    signOut(auth)\r\n      .then(() => {\r\n        console.log('signed out successfully')\r\n      })\r\n      .catch(e => {\r\n        alert('Signout failed: ' + e)\r\n      })\r\n  }\r\n}\r\n\r\nexport class DB {\r\n  static setUser(uid: string, payload: any) {\r\n    setDoc(doc(db, 'users', uid), payload)\r\n  }\r\n  static updateUserInfo(uid: string, payload: any) {\r\n    updateDoc(doc(db, 'users', uid), payload)\r\n  }\r\n  static setSnapshotListener(q: any, setStateCallback: any) {\r\n    return onSnapshot(q, (docs: any) => {\r\n      const docsArray: DocumentData[] = []\r\n      docs.forEach((p: any) => docsArray.push({ ...p.data(), id: p.id }))\r\n      setStateCallback(docsArray)\r\n    })\r\n  }\r\n  static like(liker: string, liked: string, collection: string) {\r\n    getDoc(doc(db, collection, liked)).then(p => {\r\n      const likes = p.data()?.likes\r\n      likes.includes(liker)\r\n        ? likes.splice(likes.indexOf(liker), 1)\r\n        : likes.push(liker)\r\n      updateDoc(doc(db, collection, liked), { likes: likes })\r\n    })\r\n  }\r\n}\r\n\r\nexport class Storage {\r\n  static updatePhotoURL(\r\n    uid: string,\r\n    setAvatarURL: any,\r\n    setCoverImageURL?: any\r\n  ) {\r\n    const avatarRef = ref(storage, `users/${uid}/avatar`)\r\n    const coverImageRef = ref(storage, `users/${uid}/cover_image`)\r\n    getDownloadURL(avatarRef)\r\n      .then(url => {\r\n        setAvatarURL(url)\r\n      })\r\n      .catch(e => console.log(e))\r\n    setCoverImageURL &&\r\n      getDownloadURL(coverImageRef)\r\n        .then(url => setCoverImageURL(url))\r\n        .catch(e => console.log(e))\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from './Context'\r\nimport { themes } from './themes'\r\n\r\nexport default function TurnOffModalButton() {\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n  return (\r\n    <StyledSpan\r\n      id='turn-off-modal'\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      onClick={() => dispatchDimBgModal({ type: 'NONE' })}\r\n    >\r\n      +\r\n    </StyledSpan>\r\n  )\r\n}\r\n\r\nconst StyledSpan = styled.span`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1.75rem;\r\n  font-size: 3.5rem;\r\n  transform: rotate(45deg);\r\n  color: ${p => p.theme.font};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebaseConfig'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from '../../utils/TurnOffModalButton'\r\n\r\nexport default function LogInModal() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n\r\n  const handleLogIn = () => {\r\n    Authen.signIn(email, password, () => dispatchDimBgModal({ type: 'NONE' }))\r\n    \r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Welcome Back!</div>\r\n        <input\r\n          type='text'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          placeholder='Email or Phone Number'\r\n        />\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder='Password'\r\n        />\r\n        <button className='log-in-btn' onClick={handleLogIn}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>New to Faekbook?</span>\r\n        <button\r\n          className='create-new-acc-btn'\r\n          onClick={() => dispatchDimBgModal({ type: 'SIGN_UP' })}\r\n        >\r\n          Create New Account\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 40rem;\r\n  max-width: 100vw;\r\n  display: flex;\r\n  flex-flow: column;\r\n  padding: 1.5rem;\r\n  #top,\r\n  #bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-flow: column;\r\n    row-gap: 1.25rem;\r\n    font-size: 1.75rem;\r\n  }\r\n  #top {\r\n    div {\r\n      align-self: flex-start;\r\n      font-weight: 500;\r\n      font-size: 2.25rem;\r\n      color: #1c1e21;\r\n      margin: 0.5rem auto 0.75rem 1rem;\r\n    }\r\n    input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .log-in-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 100%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n    margin-block: 2rem;\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    .create-new-acc-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 60%;\r\n    }\r\n  }\r\n`\r\n","import { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebaseConfig'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from '../../utils/TurnOffModalButton'\r\n\r\nexport default function SignUpModal() {\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  // const history = useHistory()\r\n  // const returnToHomepage = () => {\r\n  //   history.push('/faekbook/')\r\n  // }\r\n  const {\r\n    toggleState,\r\n    dispatchDimBgModal,\r\n    // setCurrentUserInfoState,\r\n  } = useContext(Context)\r\n  const handleSignUp = () => {\r\n    Authen.signUp(email, password, firstName, lastName, () =>\r\n      dispatchDimBgModal({ type: 'NONE' })\r\n    )\r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Sign Up</div>\r\n        <div>It's quick and easy</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <div className='full-name'>\r\n          <input\r\n            type='text'\r\n            placeholder='First name'\r\n            value={firstName}\r\n            onChange={e => setFirstName(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Last name'\r\n            value={lastName}\r\n            onChange={e => setLastName(e.target.value)}\r\n          />\r\n        </div>\r\n        <input\r\n          type='email'\r\n          placeholder='Email'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        ></input>\r\n        <input\r\n          type='password'\r\n          placeholder='New password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button className='sign-up' onClick={handleSignUp}>\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>Already have an account?</span>\r\n        <button onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 45rem;\r\n  max-width: 100vw;\r\n  #top,\r\n  #middle,\r\n  #bottom {\r\n    padding: 1.5rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 1rem;\r\n    align-items: center;\r\n    & button {\r\n      ${globalValues.ButtonCSS};\r\n    }\r\n  }\r\n  #top {\r\n    align-items: flex-start;\r\n    div:first-of-type {\r\n      font-weight: 600;\r\n      font-size: 3rem;\r\n      color: #1c1e21;\r\n    }\r\n    div:last-of-type {\r\n      color: #6d747c;\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  #middle {\r\n    font-size: 1.5rem;\r\n    & input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .full-name {\r\n      width: 100%;\r\n      display: flex;\r\n      column-gap: 0.75rem;\r\n    }\r\n    button {\r\n      margin-top: 1.5rem;\r\n    }\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    button {\r\n      font-size: 1.5rem;\r\n      width: 50%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","export default function BlueBgLikeIcon() {\r\n  return (\r\n    <img src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 16 16'%3e%3cdefs%3e%3clinearGradient id='a' x1='50%25' x2='50%25' y1='0%25' y2='100%25'%3e%3cstop offset='0%25' stop-color='%2318AFFF'/%3e%3cstop offset='100%25' stop-color='%230062DF'/%3e%3c/linearGradient%3e%3cfilter id='c' width='118.8%25' height='118.8%25' x='-9.4%25' y='-9.4%25' filterUnits='objectBoundingBox'%3e%3cfeGaussianBlur in='SourceAlpha' result='shadowBlurInner1' stdDeviation='1'/%3e%3cfeOffset dy='-1' in='shadowBlurInner1' result='shadowOffsetInner1'/%3e%3cfeComposite in='shadowOffsetInner1' in2='SourceAlpha' k2='-1' k3='1' operator='arithmetic' result='shadowInnerInner1'/%3e%3cfeColorMatrix in='shadowInnerInner1' values='0 0 0 0 0 0 0 0 0 0.299356041 0 0 0 0 0.681187726 0 0 0 0.3495684 0'/%3e%3c/filter%3e%3cpath id='b' d='M8 0a8 8 0 00-8 8 8 8 0 1016 0 8 8 0 00-8-8z'/%3e%3c/defs%3e%3cg fill='none'%3e%3cuse fill='url(%23a)' xlink:href='%23b'/%3e%3cuse fill='black' filter='url(%23c)' xlink:href='%23b'/%3e%3cpath fill='white' d='M12.162 7.338c.176.123.338.245.338.674 0 .43-.229.604-.474.725a.73.73 0 01.089.546c-.077.344-.392.611-.672.69.121.194.159.385.015.62-.185.295-.346.407-1.058.407H7.5c-.988 0-1.5-.546-1.5-1V7.665c0-1.23 1.467-2.275 1.467-3.13L7.361 3.47c-.005-.065.008-.224.058-.27.08-.079.301-.2.635-.2.218 0 .363.041.534.123.581.277.732.978.732 1.542 0 .271-.414 1.083-.47 1.364 0 0 .867-.192 1.879-.199 1.061-.006 1.749.19 1.749.842 0 .261-.219.523-.316.666zM3.6 7h.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-.8a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6z'/%3e%3c/g%3e%3c/svg%3e\" alt='like-icon'/>\r\n  )\r\n}\r\n","import { useContext, useEffect, useRef } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { themes } from '../../utils/themes'\r\nimport { RiDeleteBin6Line } from 'react-icons/ri'\r\nimport { FiEdit } from 'react-icons/fi'\r\nimport { deleteDoc, doc } from '@firebase/firestore'\r\nimport { db } from '../../firebaseConfig'\r\n\r\nconst CommentModal: React.FC<{\r\n  commentID: string\r\n  setIsShowingModal: any\r\n  isShowingModal: boolean\r\n}> = ({ commentID, setIsShowingModal, isShowingModal }) => {\r\n  const { toggleState, dispatchDimBgModal, setCBEPostId } = useContext(Context)\r\n  const modalNode = useRef(null)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  }, [])\r\n  const handleClick = (e: any) => {\r\n    e.target === modalNode.current || setIsShowingModal(!isShowingModal)\r\n  }\r\n  return (\r\n    <StyledDiv\r\n      ref={modalNode}\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n    >\r\n      <div\r\n        className='icon'\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          setIsShowingModal(false)\r\n          if (commentID) {\r\n            setCBEPostId(commentID)\r\n            dispatchDimBgModal({ type: 'EDIT_POST' })\r\n          }\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <FiEdit />\r\n        </div>\r\n        Edit\r\n      </div>\r\n\r\n      <div\r\n        className='icon'\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          setIsShowingModal(false)\r\n          deleteDoc(doc(db, 'comments', commentID))\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <RiDeleteBin6Line />\r\n        </div>\r\n        Delete\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')`\r\n  position: absolute;\r\n  right: -2rem;\r\n  top: 5rem;\r\n  width: 10rem;\r\n  padding: 0.5rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  font-size: 1rem;\r\n  .icon {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    &:hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n    .icon-wrapper {\r\n      height: 2.5rem;\r\n      width: 2.5rem;\r\n      border-radius: 50%;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n      font-size: 1.25rem;\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n`\r\n\r\nexport default CommentModal\r\n","import { BsThreeDots } from 'react-icons/bs'\r\nimport styled from 'styled-components'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\nimport { doc, getDoc, Timestamp } from '@firebase/firestore'\r\nimport { format } from 'date-fns'\r\nimport fromUnixTime from 'date-fns/fromUnixTime'\r\nimport { DB, db, Storage } from '../../firebaseConfig'\r\nimport BlueBgLikeIcon from '../../utils/BlueBgLikeIcon'\r\nimport CommentModal from '../Modals/CommentModal'\r\n\r\nconst Comment: React.FC<{\r\n  commenterUID: string\r\n  content: string\r\n  likes: Array<string>\r\n  date: Timestamp\r\n  commentID: string\r\n}> = ({ commenterUID, content, date, likes, commentID }) => {\r\n  const { toggleState, currentUserInfo, isUserSignedIn } = useContext(Context)\r\n  const [commentAvatar, setCommentAvatar] = useState<any>(null)\r\n  const [userInfo, setUserInfo] = useState<any>(null)\r\n  const [isShowingModal, setIsShowingModal] = useState<boolean>(false)\r\n  const [isLikedByCU, setIsLiked] = useState<boolean>(false)\r\n  useEffect(() => {\r\n    Storage.updatePhotoURL(commenterUID, setCommentAvatar)\r\n    getDoc(doc(db, 'users', commenterUID)).then(userSnap => {\r\n      const userInfo = userSnap.data()\r\n      setUserInfo(userInfo)\r\n    })\r\n  }, [commenterUID])\r\n\r\n  useEffect(() => {\r\n    likes.includes(currentUserInfo?.uid) ? setIsLiked(true) : setIsLiked(false)\r\n    console.log('comment.tsx')\r\n  }, [currentUserInfo?.uid, likes])\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isLikedByCU={isLikedByCU ? 1 : 0}\r\n      hasLikes={likes.length > 0 ? 1 : 0}\r\n    >\r\n      <img src={commentAvatar || defaultAvatar} alt='comment_avatar' />\r\n\r\n      <div className='middle'>\r\n        <div className='top'>\r\n          <div className='bubble'>\r\n            <div className='username'>\r\n              {userInfo?.first_name} {userInfo?.last_name}\r\n            </div>\r\n            <div className='content'>{content}</div>\r\n            {likes.length >= 1 && (\r\n              <div className='like-icon'>\r\n                <BlueBgLikeIcon />\r\n                <span>{likes.length}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {commenterUID === currentUserInfo?.uid && (\r\n            <div className='three-dots'>\r\n              <div\r\n                className='icon'\r\n                onClick={() => setIsShowingModal(!isShowingModal)}\r\n              >\r\n                <BsThreeDots />\r\n              </div>\r\n              {isShowingModal && (\r\n                <CommentModal\r\n                  commentID={commentID}\r\n                  setIsShowingModal={setIsShowingModal}\r\n                  isShowingModal={isShowingModal}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className='like'>\r\n          {isUserSignedIn && (\r\n            <span\r\n              onClick={() =>\r\n                DB.like(currentUserInfo?.uid, commentID, 'comments')\r\n              }\r\n            >\r\n              Like\r\n            </span>\r\n          )}\r\n          {`${format(fromUnixTime(date.seconds), 'yyyy, MMM d')} at ${format(\r\n            fromUnixTime(date.seconds),\r\n            'h:mm a'\r\n          )}`}\r\n        </div>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{ isLikedByCU: number; hasLikes: number }>`\r\n  display: flex;\r\n  column-gap: 1rem;\r\n  &:hover {\r\n    & > .middle > .top > .three-dots > .icon > svg {\r\n      display: block;\r\n    }\r\n  }\r\n  img {\r\n    height: 3.5rem;\r\n    width: 3.5rem;\r\n    ${imageObjectSettings};\r\n  }\r\n  .middle {\r\n    .top {\r\n      display: flex;\r\n      .bubble {\r\n        padding: 1rem 1rem 0.5rem;\r\n        border-radius: 20px;\r\n        background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n        font-size: 1.15rem;\r\n        color: ${p => p.theme.font};\r\n        position: relative;\r\n        .username {\r\n          font-weight: 500;\r\n          padding-bottom: 0.25rem;\r\n        }\r\n        .content {\r\n          line-height: 1.4;\r\n        }\r\n        .like-icon {\r\n          border-radius: 10px;\r\n          padding: 0.25rem;\r\n          background: ${p => p.theme.like_icon_bgclr};\r\n          box-shadow: rgba(0, 0, 0, 0.3) -1px 1px 3px;\r\n          position: absolute;\r\n          right: -1.75rem;\r\n          bottom: 0.25rem;\r\n          display: flex;\r\n          align-items: center;\r\n          font-size: 0.9rem;\r\n          img {\r\n            margin-right: 0.25rem;\r\n            height: 1.25rem;\r\n            width: 1.25rem;\r\n          }\r\n        }\r\n      }\r\n      .three-dots {\r\n        position: relative;\r\n        display: grid;\r\n        place-items: center;\r\n        border-radius: 50%;\r\n        width: ${p => (p.hasLikes ? '5rem' : '2rem')};\r\n        margin-left: 1rem;\r\n        font-size: 1.25rem;\r\n        & > .icon {\r\n          display: grid;\r\n          place-items: center;\r\n          border-radius: 50%;\r\n          height: 2.5rem;\r\n          width: 2.5rem;\r\n          &:hover {\r\n            cursor: pointer;\r\n            background-color: ${p => p.theme.theme_toggler_bgclr};\r\n          }\r\n          svg {\r\n            display: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .like {\r\n      padding-top: 0.5rem;\r\n      margin-left: 0.75rem;\r\n      font-weight: 500;\r\n      font-size: 0.85rem;\r\n      span {\r\n        color: ${p => p.isLikedByCU && '#036ee2'};\r\n        font-weight: 600;\r\n        font-size: 1rem;\r\n        padding-right: 1rem;\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Comment\r\n","import { useContext, useEffect, useRef } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { themes } from '../../utils/themes'\r\nimport { RiDeleteBin6Line } from 'react-icons/ri'\r\nimport { FiEdit } from 'react-icons/fi'\r\nimport { deleteDoc, doc } from '@firebase/firestore'\r\nimport { db } from '../../firebaseConfig'\r\n\r\nconst PostModal: React.FC<{\r\n  postID: string\r\n  setIsShowingModal: any\r\n  isShowingModal: boolean\r\n}> = ({ postID, setIsShowingModal, isShowingModal }) => {\r\n  const { toggleState, dispatchDimBgModal, setCBEPostId } = useContext(Context)\r\n  const modalNode = useRef(null)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  }, [])\r\n  const handleClick = (e: any) => {\r\n    e.target === modalNode.current || setIsShowingModal(!isShowingModal)\r\n  }\r\n  return (\r\n    <StyledDiv\r\n      ref={modalNode}\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n    >\r\n      <div\r\n        className='icon'\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          setIsShowingModal(false)\r\n          if (postID) {\r\n            setCBEPostId(postID)\r\n            dispatchDimBgModal({ type: 'EDIT_POST' })\r\n          }\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <FiEdit />\r\n        </div>\r\n        Edit Post\r\n      </div>\r\n\r\n      <div\r\n        className='icon'\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          setIsShowingModal(false)\r\n          deleteDoc(doc(db, 'posts', postID))\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <RiDeleteBin6Line />\r\n        </div>\r\n        Delete Post\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')`\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 5rem;\r\n  width: 20rem;\r\n  padding: 0.5rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  /* profile, edit and delete */\r\n  .icon {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    &:hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n    .icon-wrapper {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n      font-size: 1.75rem;\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostModal\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BsThreeDots } from 'react-icons/bs'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { AiFillLike } from 'react-icons/ai'\r\nimport { FaComment, FaCommentSlash } from 'react-icons/fa'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { format, fromUnixTime } from 'date-fns'\r\nimport BlueBgLikeIcon from '../../utils/BlueBgLikeIcon'\r\nimport { CommentType } from '../../interface'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\nimport Comment from './Comment'\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  orderBy,\r\n  query,\r\n  Timestamp,\r\n  updateDoc,\r\n  where,\r\n} from '@firebase/firestore'\r\nimport { DB, db, Storage } from '../../firebaseConfig'\r\nimport { Link } from 'react-router-dom'\r\nimport PostModal from '../Modals/PostModal'\r\nimport { DocumentData } from 'firebase/firestore'\r\n\r\nconst Post: React.FC<{\r\n  userID: string\r\n  postID: string\r\n  full_name: string\r\n  date: Timestamp\r\n  content: string\r\n  likes: Array<string>\r\n  is_profile_page?: boolean\r\n}> = ({ full_name, userID, postID, date, content, likes }) => {\r\n  const { currentUserInfo, toggleState, isUserSignedIn, CUAvatarURL } =\r\n    useContext(Context)\r\n  const [isLikedByCurrentUser, setIsLiked] = useState<boolean>()\r\n  const [postAvatarURL, setPostAvatar] = useState<any>(null)\r\n  const [isShowingComments, setIsShowingComments] = useState<boolean>()\r\n  const [commentInput, setCommentInput] = useState('')\r\n  const [comments, setComments] = useState<any>()\r\n  const [isShowingModal, setIsShowingModal] = useState<boolean>()\r\n  const threeDotsNode = useRef(null)\r\n\r\n  useEffect(() => {\r\n    //* set post avatar */\r\n    Storage.updatePhotoURL(userID, setPostAvatar)\r\n    console.log('post renders')\r\n  }, [userID])\r\n\r\n  useEffect(() => {\r\n    //* set like effects */\r\n    if (isUserSignedIn) {\r\n      likes.includes(currentUserInfo?.uid)\r\n        ? setIsLiked(true)\r\n        : setIsLiked(false)\r\n    } else setIsLiked(false)\r\n  }, [currentUserInfo?.uid, isUserSignedIn, likes])\r\n\r\n  useEffect(() => {\r\n    //* set comments\r\n    const postsRef = collection(db, 'comments')\r\n    const q = query(\r\n      postsRef,\r\n      where('postID', '==', postID),\r\n      orderBy('date', 'desc')\r\n    )\r\n    const unsub = DB.setSnapshotListener(q, setComments)\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [postID])\r\n\r\n  const postComment = (e: any) => {\r\n    e.preventDefault()\r\n    const newComment: CommentType = {\r\n      postID: postID,\r\n      commenterID: currentUserInfo?.uid,\r\n      date: Timestamp.fromDate(new Date()),\r\n      content: commentInput,\r\n      likes: [],\r\n    }\r\n    addDoc(collection(db, 'comments'), newComment)\r\n    setIsShowingComments(true)\r\n    setCommentInput('')\r\n  }\r\n  const renderComments = comments?.map((cmt: any) => (\r\n    <Comment\r\n      key={cmt.id}\r\n      commentID={cmt.id}\r\n      commenterUID={cmt.commenterID}\r\n      content={cmt.content}\r\n      date={cmt.date}\r\n      likes={cmt.likes}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <StyledSection\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      isLikedByCurrentUser={isLikedByCurrentUser ? 1 : 0}\r\n      hasComments={comments?.length > 0 ? 1 : 0}\r\n      isUserSignedIn={isUserSignedIn ? 1 : 0}\r\n      isShowingComments={isShowingComments ? 1 : 0}\r\n    >\r\n      <div id='user-info'>\r\n        <Link to={`/faekbook/${userID}`}>\r\n          <img\r\n            src={\r\n              userID === currentUserInfo?.uid\r\n                ? CUAvatarURL || defaultAvatar\r\n                : postAvatarURL || defaultAvatar\r\n            }\r\n            alt='avatar'\r\n          />\r\n        </Link>\r\n        <div className='info'>\r\n          <div className='name'>\r\n            <Link to={`/faekbook/${userID}`}>{full_name}</Link>\r\n          </div>\r\n          {`${format(fromUnixTime(date.seconds), 'yyyy, MMM d')} at ${format(\r\n            fromUnixTime(date.seconds),\r\n            'h:mm a'\r\n          )}`}\r\n        </div>\r\n      </div>\r\n      {isShowingModal && (\r\n        <PostModal\r\n          postID={postID}\r\n          isShowingModal={isShowingModal}\r\n          setIsShowingModal={setIsShowingModal}\r\n        />\r\n      )}\r\n      <main id='content'>{content}</main>\r\n      <div id='num-likes-cmts'>\r\n        <div className='likes'>\r\n          {likes.length >= 1 && (\r\n            <>\r\n              <BlueBgLikeIcon />\r\n              <span>{likes.length}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className='comments'>\r\n          {comments?.length > 0 && (\r\n            <>\r\n              {comments?.length} comment{comments?.length > 1 && 's'}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div id='like-comment'>\r\n        <div\r\n          className='like'\r\n          onClick={() =>\r\n            isUserSignedIn && DB.like(currentUserInfo?.uid, postID, 'posts')\r\n          }\r\n        >\r\n          <AiFillLike className='icon' />\r\n          <span>Like</span>\r\n        </div>\r\n        <div\r\n          className='comments'\r\n          onClick={() =>\r\n            comments?.length > 0\r\n              ? setIsShowingComments(!isShowingComments)\r\n              : isUserSignedIn\r\n              ? setIsShowingComments(!isShowingComments)\r\n              : undefined\r\n          }\r\n        >\r\n          {isShowingComments ? (\r\n            <FaCommentSlash className='icon' />\r\n          ) : (\r\n            <FaComment className='icon' />\r\n          )}\r\n          <span>{isShowingComments ? 'Hide' : 'Show'} Comments</span>\r\n        </div>\r\n      </div>\r\n      {isShowingComments && (\r\n        <>\r\n          <div id='comments'>{renderComments}</div>\r\n          {isUserSignedIn && (\r\n            <form className='comment-input' onSubmit={postComment}>\r\n              <img src={CUAvatarURL || defaultAvatar} alt='avatar' />\r\n              <input\r\n                value={commentInput}\r\n                placeholder='Write a comment...'\r\n                onChange={e => {\r\n                  setCommentInput(e.target.value)\r\n                }}\r\n              ></input>\r\n            </form>\r\n          )}\r\n        </>\r\n      )}\r\n      {userID === currentUserInfo?.uid && (\r\n        <div\r\n          ref={threeDotsNode}\r\n          className='three-dots'\r\n          onClick={() => setIsShowingModal(!isShowingModal)}\r\n        >\r\n          <BsThreeDots className='icon' />\r\n        </div>\r\n      )}\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled('section')<{\r\n  isDarkTheme: number\r\n  isLikedByCurrentUser: number\r\n  hasComments: number\r\n  isUserSignedIn: number\r\n  isShowingComments: number\r\n}>`\r\n  position: relative;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font_lighter};\r\n  width: 60rem;\r\n  max-width: 100%;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  padding-bottom: ${p => (p.isShowingComments ? '1.5rem' : '0')};\r\n  & > .three-dots {\r\n    position: absolute;\r\n    right: 1.75rem;\r\n    top: 1.5rem;\r\n    padding: 0.75rem;\r\n    border-radius: 50%;\r\n    &:hover {\r\n      background-color: ${p => p.theme.theme_toggler_bgclr};\r\n      cursor: pointer;\r\n    }\r\n    .icon {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  #user-info {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .info {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: space-around;\r\n      height: 3.5rem;\r\n      .name {\r\n        a {\r\n          text-decoration: none;\r\n          font-size: 1.5rem;\r\n          font-weight: 700;\r\n          color: ${p => p.theme.font};\r\n          &:hover {\r\n            text-decoration: underline;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  #content {\r\n    font-size: 1.5rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    word-wrap: break-word;\r\n  }\r\n  #num-likes-cmts {\r\n    padding: 1.5rem 1.5rem 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .likes {\r\n      display: flex;\r\n      align-items: center;\r\n      column-gap: 0.5rem;\r\n      img {\r\n        height: 1.75rem;\r\n        width: 1.75rem;\r\n      }\r\n      span {\r\n        font-size: 1.25rem;\r\n      }\r\n    }\r\n    .comments {\r\n      line-height: 1.8rem;\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n  #like-comment {\r\n    border-block: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')} 1px solid;\r\n    border-bottom: ${p => p.isShowingComments || 'none'};\r\n    margin-top: 1.5rem;\r\n    padding: 0.5rem 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    column-gap: 0.5rem;\r\n    .like,\r\n    .comments {\r\n      height: 3.25rem;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      width: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      column-gap: 0.75rem;\r\n      background-color: ${p => p.theme.main_bgclr};\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n      .icon {\r\n        font-size: 1.75rem;\r\n      }\r\n    }\r\n    .like {\r\n      color: ${p =>\r\n        p.isUserSignedIn\r\n          ? p.isLikedByCurrentUser\r\n            ? '#036ee2'\r\n            : 'unset'\r\n          : p.isDarkTheme\r\n          ? '#525252ac'\r\n          : '#ebebebae'};\r\n      &:hover {\r\n        cursor: ${p => (p.isUserSignedIn ? 'pointer' : 'not-allowed')};\r\n        background-color: ${p =>\r\n          p.isUserSignedIn\r\n            ? p.isDarkTheme\r\n              ? '#64646471'\r\n              : '#ebebebae'\r\n            : 'unset'};\r\n      }\r\n    }\r\n    .comments {\r\n      color: ${p =>\r\n        p.hasComments\r\n          ? 'unset'\r\n          : p.isUserSignedIn\r\n          ? 'unset'\r\n          : p.isDarkTheme\r\n          ? '#525252ac'\r\n          : '#ebebebae'};\r\n      &:hover {\r\n        cursor: ${p =>\r\n          p.isUserSignedIn\r\n            ? 'pointer'\r\n            : p.hasComments\r\n            ? 'pointer'\r\n            : 'not-allowed'};\r\n        background-color: ${p =>\r\n          p.isUserSignedIn\r\n            ? p.isDarkTheme\r\n              ? '#64646471'\r\n              : '#ebebebae'\r\n            : p.hasComments\r\n            ? p.isDarkTheme\r\n              ? '#64646471'\r\n              : '#ebebebae'\r\n            : 'unset'};\r\n      }\r\n    }\r\n  }\r\n  #comments {\r\n    padding: 1rem 1.5rem 0;\r\n    margin-bottom: -0.75rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 0.75rem;\r\n  }\r\n  form.comment-input {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 3.5rem;\r\n      width: 3.5rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      ${imageObjectSettings}\r\n    }\r\n    input {\r\n      font-family: inherit;\r\n      color: ${p => p.theme.font};\r\n      border: none;\r\n      outline: none;\r\n      flex-grow: 1;\r\n      padding: 1rem 1.5rem;\r\n      font-size: 1.5rem;\r\n      border-radius: 2rem;\r\n      background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n      display: flex;\r\n      align-items: center;\r\n      &:hover {\r\n        cursor: text;\r\n        filter: brightness(${p => (p.isDarkTheme ? '1.1' : '0.95')});\r\n      }\r\n      &::placeholder {\r\n        color: ${p => p.theme.font_lighter};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Post\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\n\r\nexport default function WhatsOnYourMind() {\r\n  const { toggleState, dispatchDimBgModal, isUserSignedIn, CUAvatarURL } =\r\n    useContext(Context)\r\n  return (\r\n    <StyledSection theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <img\r\n        src={isUserSignedIn ? CUAvatarURL || defaultAvatar : undefined}\r\n        alt='avatar'\r\n      />\r\n      <div onClick={() => dispatchDimBgModal({ type: 'CREATE_POST' })}>\r\n        What's on your mind?\r\n      </div>\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  width: 60rem;\r\n  max-width: 100%;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 1rem;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  img {\r\n    height: 4rem;\r\n    width: 4rem;\r\n    background: ${p => p.theme.theme_toggler_bgclr};\r\n    ${imageObjectSettings}\r\n  }\r\n  div {\r\n    color: ${p => p.theme.font_lighter};\r\n    flex-grow: 1;\r\n    padding-left: 2rem;\r\n    font-size: 1.5rem;\r\n    height: 4rem;\r\n    border-radius: 2rem;\r\n    background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    &:hover {\r\n      cursor: pointer;\r\n      filter: brightness(${p => (p.theme.type === 'dark' ? '1.1' : '0.95')});\r\n    }\r\n  }\r\n`\r\n","import { collection, orderBy, query } from '@firebase/firestore'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { db, DB } from '../../firebaseConfig'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport Post from './Post'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\n\r\nconst MainPage: React.FC<any> = () => {\r\n  const { toggleState, isUserSignedIn } = useContext(Context)\r\n\r\n  const [allPosts, setAllPosts] = useState<any>(null)\r\n\r\n  useEffect(() => {\r\n    const postsRef = collection(db, 'posts')\r\n    const q = query(postsRef, orderBy('date', 'desc'))\r\n    const unsub = DB.setSnapshotListener(q, setAllPosts)\r\n    console.log('main page renders')\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [])\r\n\r\n  const renderPosts = allPosts?.map((p: any) => (\r\n    <Post\r\n      key={p.id}\r\n      postID={p.id}\r\n      userID={p.userID}\r\n      full_name={p.fullname}\r\n      date={p.date}\r\n      content={p.content}\r\n      likes={p.likes}\r\n    />\r\n  ))\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      {isUserSignedIn && <WhatsOnYourMind />}\r\n      {renderPosts}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  color: ${p => p.theme.font};\r\n  padding-bottom: 2rem;\r\n`\r\n\r\nexport default MainPage\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { defaultAvatar, defaultCoverImage } from '../../utils/defaultPhotos'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { AiOutlineCamera, AiFillCamera } from 'react-icons/ai'\r\nimport ColorThief from 'colorthief'\r\nimport useWindowSize, { Size } from '../../utils/useWindowSize'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\nimport { DB, db, Storage, storage } from '../../firebaseConfig'\r\nimport Post from './Post'\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from '@firebase/firestore'\r\nimport {\r\n  deleteObject,\r\n  getDownloadURL,\r\n  ref,\r\n  uploadBytes,\r\n} from '@firebase/storage'\r\nimport { useParams } from 'react-router'\r\n\r\nconst ProfilePage: React.FC<any> = () => {\r\n  const {\r\n    toggleState,\r\n    isUserSignedIn,\r\n    currentUserInfo,\r\n    CUAvatarURL,\r\n    setCUAvatarURL,\r\n  } = useContext(Context)\r\n  const { userID }: { userID: string } = useParams()\r\n  const [userInfo, setUserInfo] = useState<any>(null)\r\n  const [userCoverImgURL, setCoverImageURL] = useState<any>(null)\r\n  const [userAvatarURL, setUserAvatarURL] = useState<any>(null)\r\n  const [userPosts, setUserPosts] = useState<any>(null)\r\n  const [editCoverPhotoHidden, setEditCoverPhotoHidden] = useState(false)\r\n  const [bgGradient, setBgGradient] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    getDoc(doc(db, 'users', userID)).then(userSnap => {\r\n      const userInfo = userSnap.data()\r\n      setUserInfo(userInfo)\r\n    })\r\n    Storage.updatePhotoURL(userID, setUserAvatarURL, setCoverImageURL)\r\n    // * SET USER PHOTO/\r\n    const fileRef = ref(storage, `users/${userID}/avatar`)\r\n    getDownloadURL(fileRef).then(url => setUserAvatarURL(url))\r\n    // * SET USER PHOTO END/\r\n  }, [userID])\r\n\r\n  const updatePhoto = (e: any) => {\r\n    const file = e.target.files[0]\r\n    if (file) {\r\n      const isAvatar = e.target.id === 'avatar'\r\n      const fileName = isAvatar ? 'avatar' : 'cover_image'\r\n      const fileRef = ref(storage, `users/${userID}/${fileName}`)\r\n      deleteObject(fileRef).catch(e => console.log(e))\r\n      uploadBytes(fileRef, file).then(() =>\r\n        getDownloadURL(fileRef).then(url =>\r\n          isAvatar\r\n            ? userID === currentUserInfo?.uid\r\n              ? setCUAvatarURL(url)\r\n              : setUserAvatarURL(url)\r\n            : setCoverImageURL(url)\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  //*! RENDER POSTS START */\r\n  useEffect(() => {\r\n    const postsRef = collection(db, 'posts')\r\n    const q = query(\r\n      postsRef,\r\n      where('userID', '==', userID),\r\n      orderBy('date', 'desc')\r\n    )\r\n    const unsub = DB.setSnapshotListener(q, setUserPosts)\r\n    console.log('profile renders')\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [userID])\r\n  const renderPosts = userPosts?.map((p: any) => (\r\n    <Post\r\n      key={p.id}\r\n      postID={p.id}\r\n      userID={p.userID}\r\n      full_name={p.fullname}\r\n      date={p.date}\r\n      content={p.content}\r\n      likes={p.likes}\r\n      is_profile_page={true}\r\n    />\r\n  ))\r\n  //*! RENDER POSTS END */\r\n\r\n  //*! EFFECTS START */\r\n  //* width size query for the edit cover photo button */\r\n  const size: Size = useWindowSize()\r\n  useEffect(() => {\r\n    const { width } = size\r\n    if (width !== undefined && width <= 900) {\r\n      setEditCoverPhotoHidden(true)\r\n    } else setEditCoverPhotoHidden(false)\r\n  }, [size])\r\n  //* get dorminant color of cover photo */\r\n  useEffect(() => {\r\n    const colorThief = new ColorThief()\r\n    const img: any = document.querySelector('#get-dominant-clr')\r\n    img.onload = () => {\r\n      const color = colorThief.getColor(img).toString()\r\n      setBgGradient(color)\r\n    }\r\n  }, [isUserSignedIn])\r\n  const googleProxyURL =\r\n    'https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&refresh=2592000&url='\r\n  //? proxy server produces a more liberal CORS policy */\r\n  const renderColorThief = (\r\n    <img\r\n      src={\r\n        googleProxyURL +\r\n        (encodeURIComponent(userCoverImgURL) ||\r\n          encodeURIComponent(defaultCoverImage))\r\n      }\r\n      crossOrigin='anonymous'\r\n      alt='colorthief'\r\n      id='get-dominant-clr'\r\n    />\r\n  )\r\n  //*! EFFECTS END */\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      bgGradient={bgGradient}\r\n      editCoverPhotoHidden={editCoverPhotoHidden}\r\n    >\r\n      <header>\r\n        <div id='cover-image'>\r\n          {renderColorThief}\r\n          <div className='avatar'>\r\n            <img\r\n              src={\r\n                userID === currentUserInfo?.uid\r\n                  ? CUAvatarURL || defaultAvatar\r\n                  : userAvatarURL || defaultAvatar\r\n              }\r\n              alt='avatar'\r\n            />\r\n            {userID === currentUserInfo?.uid && (\r\n              <label className='update-avatar'>\r\n                <input\r\n                  onChange={updatePhoto}\r\n                  id='avatar'\r\n                  type='file'\r\n                  accept='image/*'\r\n                  style={{ display: 'none' }}\r\n                />\r\n                {toggleState.isDarkTheme ? (\r\n                  <AiFillCamera className='icon' style={{ fill: 'white' }} />\r\n                ) : (\r\n                  <AiOutlineCamera className='icon' />\r\n                )}\r\n              </label>\r\n            )}\r\n          </div>\r\n          {userID === currentUserInfo?.uid && (\r\n            <label className='edit-cover-photo'>\r\n              <input\r\n                onChange={updatePhoto}\r\n                id='cover'\r\n                type='file'\r\n                accept='image/*'\r\n                style={{ display: 'none' }}\r\n              />\r\n              <AiFillCamera className='icon' /> <span>Edit Cover Photo</span>\r\n            </label>\r\n          )}\r\n        </div>\r\n\r\n        <div id='intro'>\r\n          <div className='name'>\r\n            {userInfo\r\n              ? `${userInfo.first_name} ${userInfo.last_name}`\r\n              : 'default name'}\r\n          </div>\r\n          <div className='short-description'>\r\n            {userInfo && userInfo.short_bio}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        {userID === currentUserInfo?.uid && <WhatsOnYourMind />}\r\n        {renderPosts}\r\n      </main>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  bgGradient: string\r\n  editCoverPhotoHidden: boolean\r\n}>`\r\n  color: ${p => p.theme.font};\r\n  padding-bottom: 2rem;\r\n  header {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(${p => p.bgGradient}) 0%,\r\n      ${p => p.theme.main_bgclr} 60%\r\n    );\r\n    #cover-image {\r\n      position: relative;\r\n      width: 90rem;\r\n      max-width: 100%;\r\n      aspect-ratio: 5/2;\r\n      margin-inline: auto;\r\n      & > img {\r\n        border-radius: 0 0 10px 10px;\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n        object-position: 50% 50%;\r\n      }\r\n      .avatar {\r\n        position: absolute;\r\n        bottom: -4rem;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        width: 15rem;\r\n        height: 15rem;\r\n        padding: 0.5rem;\r\n        background-color: ${p => p.theme.main_bgclr};\r\n        border-radius: 50%;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          ${imageObjectSettings};\r\n        }\r\n        .update-avatar {\r\n          position: absolute;\r\n          right: 1.1rem;\r\n          bottom: 1.1rem;\r\n          padding: 0.5rem;\r\n          border-radius: 50%;\r\n          background-color: ${p => p.theme.avatar_pic_cam_icon_bgclr};\r\n          &:hover {\r\n            cursor: pointer;\r\n            filter: brightness(1.1);\r\n          }\r\n          .icon {\r\n            height: 2rem;\r\n            width: 2rem;\r\n          }\r\n        }\r\n      }\r\n      .edit-cover-photo {\r\n        color: black;\r\n        position: absolute;\r\n        right: 2rem;\r\n        bottom: 3rem;\r\n        background-color: white;\r\n        padding: 0.5rem 1rem;\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap: 1rem;\r\n        border-radius: 7px;\r\n        &:hover {\r\n          cursor: pointer;\r\n          filter: brightness(0.95);\r\n        }\r\n        .icon {\r\n          height: 1.5rem;\r\n          width: 1.5rem;\r\n        }\r\n        span {\r\n          font-size: 1rem;\r\n          font-weight: 700;\r\n          display: ${p => (p.editCoverPhotoHidden ? 'none' : 'block')};\r\n        }\r\n      }\r\n    }\r\n    #intro {\r\n      padding: 5rem 2rem 2rem;\r\n      text-align: center;\r\n      .name {\r\n        font-size: 2.75rem;\r\n        font-weight: 800;\r\n      }\r\n      .short-description {\r\n        padding-top: 1rem;\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n  main {\r\n  }\r\n`\r\n\r\nexport default ProfilePage\r\n","import { useState, useEffect } from 'react'\r\n// Define general type for useWindowSize hook, which includes width and height\r\nexport interface Size {\r\n  width: number | undefined\r\n  height: number | undefined\r\n}\r\n\r\n// Usage\r\n// function App() {\r\n//   const size: Size = useWindowSize()\r\n//   return (\r\n//     <div>\r\n//       {size.width}px / {size.height}px\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// Hook\r\nexport default function useWindowSize(): Size {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<Size>({\r\n    width: undefined,\r\n    height: undefined,\r\n  })\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n    }\r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize)\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize()\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, []) // Empty array ensures that effect is only run on mount\r\n  return windowSize\r\n}\r\n","import { useContext } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport { FaMoon, FaSun } from 'react-icons/fa'\r\nimport { GoSignOut, GoSignIn } from 'react-icons/go'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { Authen, DB } from '../../firebaseConfig'\r\nimport { useHistory } from 'react-router'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\n\r\nconst DropDownMenu: React.FC<any> = () => {\r\n  const {\r\n    currentUserInfo,\r\n    CUAvatarURL,\r\n    isUserSignedIn,\r\n    toggleState,\r\n    dispatchToggle,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n\r\n  const history = useHistory()\r\n  const returnToHomepage = () => {\r\n    history.push('/faekbook/')\r\n  }\r\n\r\n  const handleToggleTheme = () => {\r\n    dispatchToggle({ type: 'TOGGLE_THEME' })\r\n    isUserSignedIn &&\r\n      DB.updateUserInfo(currentUserInfo?.uid, {\r\n        is_dark_theme: !toggleState.isDarkTheme,\r\n      })\r\n    dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n  }\r\n\r\n  const renderAvatar = (\r\n    <img\r\n      src={isUserSignedIn ? CUAvatarURL || defaultAvatar : defaultAvatar}\r\n      alt='avatar'\r\n    />\r\n  )\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isUserSignedIn={isUserSignedIn ? 1 : 0}\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <Link\r\n        to={`/faekbook/${currentUserInfo?.uid}`}\r\n        onClick={() =>\r\n          isUserSignedIn && dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n        }\r\n      >\r\n        <div className='profile'>\r\n          {renderAvatar}\r\n          <div className='name'>\r\n            <span>\r\n              {isUserSignedIn && currentUserInfo\r\n                ? `${currentUserInfo.first_name} ${currentUserInfo.last_name}`\r\n                : 'User'}\r\n            </span>\r\n            <span>{isUserSignedIn ? 'See your profile' : 'Please log in'}</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className='divider' />\r\n\r\n      <div className='theme-toggler' onClick={handleToggleTheme}>\r\n        <div className='icon'>\r\n          {toggleState.isDarkTheme ? <FaSun /> : <FaMoon />}\r\n        </div>\r\n        Change to {toggleState.isDarkTheme ? 'Light' : 'Dark'} theme\r\n      </div>\r\n\r\n      <div\r\n        className='log-in-out'\r\n        onClick={() => {\r\n          dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          isUserSignedIn\r\n            ? (() => {\r\n                Authen.signOut()\r\n                returnToHomepage()\r\n              })()\r\n            : dispatchDimBgModal({ type: 'LOG_IN' })\r\n        }}\r\n      >\r\n        <div className='icon'>\r\n          {isUserSignedIn ? <GoSignOut /> : <GoSignIn />}\r\n        </div>\r\n        Log {isUserSignedIn ? 'Out' : 'In'}\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{ isUserSignedIn: number }>`\r\n  position: fixed;\r\n  right: 1rem;\r\n  top: 5rem;\r\n  width: 30rem;\r\n  padding: 1rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  /* profile, theme-toggler and log-in-out */\r\n  a > .profile,\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    &:hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n  }\r\n  /* profile */\r\n  a {\r\n    text-decoration: none;\r\n    pointer-events: ${p => (p.isUserSignedIn ? 'auto' : 'none')};\r\n    .profile {\r\n      opacity: ${p => (p.isUserSignedIn ? '100%' : '30%')};\r\n      img {\r\n        height: 5rem;\r\n        background: ${p => p.theme.theme_toggler_bgclr};\r\n        ${imageObjectSettings}\r\n      }\r\n      .name {\r\n        display: flex;\r\n        flex-flow: column;\r\n        justify-content: space-evenly;\r\n        span:first-of-type {\r\n          font-size: 1.3rem;\r\n          font-weight: 600;\r\n          color: ${p => p.theme.font};\r\n        }\r\n        span:last-of-type {\r\n          font-size: 1.1375rem;\r\n          color: ${p => p.theme.font_lighter};\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .divider {\r\n    margin-block: 0.5rem;\r\n    height: 2px;\r\n    width: 100%;\r\n    background: ${p => p.theme.divider_clr};\r\n  }\r\n  /* theme-toggler and log-in-out */\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    .icon {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      font-size: 2rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n    }\r\n  }\r\n  .theme-toggler {\r\n    .icon {\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n  .log-in-out {\r\n    .icon {\r\n      position: relative;\r\n      svg {\r\n        position: absolute;\r\n        top: 0.7rem;\r\n        left: ${p => (p.isUserSignedIn ? '0.7rem' : '0.5rem')};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default DropDownMenu\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport TurnOffModalButton from '../../utils/TurnOffModalButton'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { PostType } from '../../interface'\r\nimport { db } from '../../firebaseConfig'\r\nimport { addDoc, collection, Timestamp } from '@firebase/firestore'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\n\r\nexport default function CreatePost() {\r\n  const [content, setContent] = useState<string>('')\r\n  const { currentUserInfo, toggleState, dispatchDimBgModal, CUAvatarURL } =\r\n    useContext(Context)\r\n\r\n  const addPost = () => {\r\n    const post: PostType = {\r\n      userID: currentUserInfo.uid,\r\n      fullname: currentUserInfo.first_name + ' ' + currentUserInfo.last_name,\r\n      date: Timestamp.fromDate(new Date()),\r\n      content,\r\n      likes: [],\r\n      comments: [],\r\n    }\r\n\r\n    addDoc(collection(db, 'posts'), post)\r\n\r\n    dispatchDimBgModal({ type: 'NONE' })\r\n  }\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      textSmallSize={content.length > 40 ? 1 : 0}\r\n      postButtonActivated={content.length > 0 ? 1 : 0}\r\n    >\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Create Post</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <img src={CUAvatarURL || defaultAvatar} alt='my_avatar' />\r\n        <div className='name'>\r\n          {currentUserInfo &&\r\n            `${currentUserInfo.first_name} ${currentUserInfo.last_name}`}\r\n        </div>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"What's on your mind?\"\r\n        onChange={e => setContent(e.target.value)}\r\n        autoFocus\r\n      />\r\n      <div className='post-button'>\r\n        <button disabled={content.length === 0} onClick={addPost}>\r\n          Post\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  isDarkTheme: number\r\n  textSmallSize: number\r\n  postButtonActivated: number\r\n}>`\r\n  width: 50rem;\r\n  max-width: 100vw;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  border-radius: 10px;\r\n  #middle,\r\n  textarea,\r\n  .post-button {\r\n    padding: 1.5rem 1.5rem;\r\n  }\r\n\r\n  #top {\r\n    line-height: 5.5rem;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    font-weight: 700;\r\n    height: 5.5rem;\r\n  }\r\n  #middle {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .name {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    padding-top: 0;\r\n    background-color: inherit;\r\n    font-family: inherit;\r\n    font-size: ${p => (p.textSmallSize ? '1.5rem' : '2.5rem')};\r\n    display: block;\r\n    border: none;\r\n    outline: none;\r\n    width: 100%;\r\n    min-height: 15rem;\r\n    resize: none;\r\n    color: ${p => p.theme.font};\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.75rem;\r\n      border-radius: 3px;\r\n      background-color: rgba(195, 195, 195, 0.3);\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background: rgba(114, 114, 114, 0.5);\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .post-button {\r\n    button {\r\n      width: 100%;\r\n      height: 3.5rem;\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      margin-inline: auto;\r\n      border: none;\r\n      color: ${p => (p.postButtonActivated ? 'white' : '#858686')};\r\n      background-color: ${p =>\r\n        p.postButtonActivated\r\n          ? '#2D88FF'\r\n          : p.isDarkTheme\r\n          ? '#505151'\r\n          : '#e4e6eb'};\r\n      &:hover {\r\n        cursor: ${p => (p.postButtonActivated ? 'pointer' : 'not-allowed')};\r\n      }\r\n    }\r\n  }\r\n\r\n  .divider {\r\n    background-color: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')};\r\n    margin-inline: auto;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport TurnOffModalButton from '../../utils/TurnOffModalButton'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { PostType } from '../../interface'\r\nimport { db } from '../../firebaseConfig'\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  Timestamp,\r\n  updateDoc,\r\n} from '@firebase/firestore'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\n\r\nexport default function EditPostModal({ CBEPostID }: { CBEPostID: string }) {\r\n  const [content, setContent] = useState<string>('')\r\n  const beforeEdittedContent = useRef<string>()\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false)\r\n  const { currentUserInfo, toggleState, dispatchDimBgModal, CUAvatarURL } =\r\n    useContext(Context)\r\n\r\n  useEffect(() => {\r\n    getDoc(doc(db, 'posts', CBEPostID)).then(post => {\r\n      const content = post.data()?.content\r\n      beforeEdittedContent.current = content\r\n      setContent(content)\r\n      setIsLoaded(true)\r\n    })\r\n    return () => {\r\n      beforeEdittedContent.current = ''\r\n      setContent('')\r\n      setIsLoaded(false)\r\n    }\r\n  }, [CBEPostID])\r\n\r\n  const updatePost = () => {\r\n    updateDoc(doc(db, 'posts', CBEPostID), { content: content })\r\n    dispatchDimBgModal({ type: 'NONE' })\r\n  }\r\n\r\n  return isLoaded ? (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      textSmallSize={content?.length > 40 ? 1 : 0}\r\n      postButtonActivated={content !== beforeEdittedContent.current ? 1 : 0}\r\n    >\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Edit Post</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <img src={CUAvatarURL || defaultAvatar} alt='my_avatar' />\r\n        <div className='name'>\r\n          {currentUserInfo &&\r\n            `${currentUserInfo.first_name} ${currentUserInfo.last_name}`}\r\n        </div>\r\n      </div>\r\n      <textarea\r\n        onChange={e => setContent(e.target.value)}\r\n        value={content}\r\n        autoFocus\r\n        onFocus={e =>\r\n          e.currentTarget.setSelectionRange(\r\n            e.currentTarget.value.length,\r\n            e.currentTarget.value.length\r\n          )\r\n        }\r\n      />\r\n      <div className='post-button'>\r\n        <button\r\n          disabled={content === beforeEdittedContent.current}\r\n          onClick={updatePost}\r\n        >\r\n          Update Post\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  ) : null\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  isDarkTheme: number\r\n  textSmallSize: number\r\n  postButtonActivated: number\r\n}>`\r\n  width: 50rem;\r\n  max-width: 100vw;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  border-radius: 10px;\r\n  #middle,\r\n  textarea,\r\n  .post-button {\r\n    padding: 1.5rem 1.5rem;\r\n  }\r\n\r\n  #top {\r\n    line-height: 5.5rem;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    font-weight: 700;\r\n    height: 5.5rem;\r\n  }\r\n  #middle {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .name {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    padding-top: 0;\r\n    background-color: inherit;\r\n    font-family: inherit;\r\n    font-size: ${p => (p.textSmallSize ? '1.5rem' : '2.5rem')};\r\n    display: block;\r\n    border: none;\r\n    outline: none;\r\n    width: 100%;\r\n    min-height: 15rem;\r\n    resize: none;\r\n    color: ${p => p.theme.font};\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.75rem;\r\n      border-radius: 3px;\r\n      background-color: rgba(195, 195, 195, 0.3);\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background: rgba(114, 114, 114, 0.5);\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .post-button {\r\n    button {\r\n      width: 100%;\r\n      height: 3.5rem;\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      margin-inline: auto;\r\n      border: none;\r\n      color: ${p => (p.postButtonActivated ? 'white' : '#858686')};\r\n      background-color: ${p =>\r\n        p.postButtonActivated\r\n          ? '#2D88FF'\r\n          : p.isDarkTheme\r\n          ? '#505151'\r\n          : '#e4e6eb'};\r\n      &:hover {\r\n        cursor: ${p => (p.postButtonActivated ? 'pointer' : 'not-allowed')};\r\n      }\r\n    }\r\n  }\r\n\r\n  .divider {\r\n    background-color: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')};\r\n    margin-inline: auto;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import styled, { css } from 'styled-components'\r\nimport Navbar from './components/Navbar'\r\nimport { useEffect, useReducer, useState } from 'react'\r\nimport { toggleReducer, authenModalReducer } from './reducers'\r\nimport Context from './utils/Context'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport LogInModal from './components/Modals/LogInModal'\r\nimport SignUpModal from './components/Modals/SignUpModal'\r\nimport { themes } from './utils/themes'\r\nimport MainPage from './components/Body/MainPage'\r\nimport ProfilePage from './components/Body/ProfilePage'\r\nimport DropDownMenu from './components/Modals/DropDownMenu'\r\nimport CreatePost from './components/Modals/CreatePost'\r\nimport { auth, db, Storage } from './firebaseConfig'\r\nimport { onAuthStateChanged } from '@firebase/auth'\r\nimport { doc, getDoc } from '@firebase/firestore'\r\nimport EditPostModal from './components/Modals/EditPostModal'\r\n\r\nconst App: React.FC<any> = () => {\r\n  const [isUserSignedIn, setIsUserSignedIn] = useState<boolean>()\r\n  const [currentUserInfo, setCurrentUserInfo] = useState<any>(null)\r\n  const [CUAvatarURL, setCUAvatarURL] = useState<any>(null)\r\n  const [toggleState, dispatchToggle] = useReducer(toggleReducer, {\r\n    isDarkTheme: false,\r\n    dropDownMenuIsVisible: false,\r\n  })\r\n  const [dimBgModal, dispatchDimBgModal] = useReducer(authenModalReducer, {\r\n    action: 'close modals',\r\n  })\r\n  //? CBE: Currently Being Editted /\r\n  const [CBEPostID, setCBEPostId] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, async user => {\r\n      if (user) {\r\n        // set sign-in state\r\n        setIsUserSignedIn(true)\r\n        getDoc(doc(db, 'users', user.uid)).then(userSnap => {\r\n          // get current user specific info\r\n          const currentUserInfo = userSnap.data()\r\n          setCurrentUserInfo(currentUserInfo)\r\n          // set theme\r\n          currentUserInfo?.is_dark_theme\r\n            ? dispatchToggle({ type: 'DARK_THEME' })\r\n            : dispatchToggle({ type: 'LIGHT_THEME' })\r\n        })\r\n      } else {\r\n        setIsUserSignedIn(false)\r\n        setCurrentUserInfo(null)\r\n        dispatchToggle({ type: 'LIGHT_THEME' })\r\n      }\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    if (currentUserInfo) {\r\n      const uid = currentUserInfo?.uid\r\n      Storage.updatePhotoURL(uid, setCUAvatarURL)\r\n    }\r\n  }, [currentUserInfo])\r\n\r\n  const renderModal = (dimBgModal: any) => {\r\n    switch (dimBgModal.action) {\r\n      case 'show login modal':\r\n        return <LogInModal />\r\n      case 'show signup modal':\r\n        return <SignUpModal />\r\n      case 'show create-post modal':\r\n        return <CreatePost />\r\n      case 'show edit-post':\r\n        return <EditPostModal CBEPostID={CBEPostID} />\r\n      case 'close modals':\r\n        return\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        isUserSignedIn,\r\n        currentUserInfo,\r\n        toggleState,\r\n        dispatchToggle,\r\n        dimBgModal,\r\n        dispatchDimBgModal,\r\n        CUAvatarURL,\r\n        setCUAvatarURL,\r\n        setCBEPostId,\r\n      }}\r\n    >\r\n      <Router>\r\n        <StyledDiv\r\n          theme={toggleState.isDarkTheme === true ? themes.dark : themes.light}\r\n          authenType={dimBgModal.action}\r\n          toggleState={toggleState}\r\n          onClick={() => {\r\n            toggleState.dropDownMenuIsVisible &&\r\n              dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n            toggleState.postModalIsVisible &&\r\n              dispatchToggle({ type: 'TOGGLE_POST_MODAL' })\r\n          }}\r\n        >\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/faekbook/' component={MainPage} />\r\n            <Route exact path='/faekbook/:userID' component={ProfilePage} />\r\n          </Switch>\r\n          {/* modals */}\r\n          <div className='dim-bg-modal'>{renderModal(dimBgModal)}</div>\r\n          {toggleState.dropDownMenuIsVisible && <DropDownMenu />}\r\n        </StyledDiv>\r\n      </Router>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nconst Screen = css`\r\n  content: '';\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100%;\r\n  z-index: 100;\r\n`\r\n\r\nconst StyledDiv = styled('div')<{ authenType: string; toggleState: any }>`\r\n  position: relative;\r\n  background: ${p => p.theme.body};\r\n  min-height: 100vh;\r\n  &::after {\r\n    ${p =>\r\n      (p.authenType !== 'close modals' || p.toggleState.createPostIsVisible) &&\r\n      Screen}\r\n    background-color: ${p =>\r\n      p.theme.type === 'dark' ? '#00000063' : '#ffffff92'};\r\n  }\r\n  .dim-bg-modal {\r\n    position: fixed;\r\n    background: white;\r\n    border-radius: 10px;\r\n    top: 12%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    z-index: 200;\r\n    border-radius: 10px;\r\n    box-shadow: ${p => p.theme.bxShdw};\r\n  }\r\n`\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/reset.css'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n       box-sizing: border-box;\n    }\n    html {\n      font-size: 70%;\n      @media (min-width: 768px) {\n        font-size: 80%;\n      }\n      @media (min-width: 1024px) {\n        font-size: 90%;\n      }\n    }\n    \n    body {\n      font-size: 1em;\n      font-family: 'Roboto', sans-serif;\n      /* user-select: none; */\n    }\n\n    img {\n      border-radius: 50%;\n    }\n  `\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}