{"version":3,"sources":["styles/globalValues.ts","utils/Context.ts","utils/themes.ts","firebase.ts","utils/images/picture_of_myself.jpg","components/Navbar.tsx","reducers/reducers.ts","components/Modals/TurnOffModalButton.tsx","components/Modals/LogInModal.tsx","components/Modals/SignUpModal.tsx","components/Body/WhatsOnYourMind.tsx","components/Body/MainPage.tsx","utils/images/cover_photo.jpg","components/Body/Post.tsx","utils/images/default_user.png","types/interface.ts","components/Body/ProfilePage.tsx","hooks/useWindowSize.ts","components/Modals/DropDownMenu.tsx","components/Modals/CreatePost.tsx","App.tsx","index.tsx"],"names":["globalValues","navbar_elements_height","navbar_column_gap","navbar_height","dropdown_menu_bdr_rds","ButtonCSS","css","InputCSS","Context","createContext","themes","light","type","bxShdw","main_bgclr","nav_btm_brdr_clr","font","font_lighter","divider_clr","hover","icon_color","theme_toggler_bgclr","theme_toggler_bgclr_active","theme_toggler_icon_active","body","avatar_pic_cam_icon_bgclr","whats_on_ur_mind_bgclr","dark","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","Authen","email","password","createUserWithEmailAndPassword","then","userCredential","newUser","setDoc","doc","catch","err","errorCode","code","errorMessage","message","alert","signInWithEmailAndPassword","console","log","user","onAuthStateChanged","signOut","e","callback1","callback2","rotation","keyframes","StyledNav","styled","p","theme","bxShadw","menuVisibility","Navbar","useContext","toggleState","isSignedIn","dispatchToggle","dispatchSignInOut","dispatchDimBgModal","useEffect","handleAuthStateChange","userProfileButton","to","className","src","myAvatar","alt","logInButton","onClick","isDarkTheme","dropDownMenuIsVisible","stopPropagation","toggleInitialStates","toggleReducer","state","action","isSignedInReducer","authenModalReducer","TurnOffModalButton","StyledSpan","id","span","LogInModal","useState","setEmail","setPassword","StyledDiv","value","onChange","target","placeholder","signIn","div","SignUpModal","WhatsOnYourMind","StyledSection","section","MainPage","Post","first_name","last_name","date_created","avatar","content","likes","format","Luan","posts","date","Date","comments","commenter","ProfilePage","bgGradient","setBgGradient","editCoverPhotoHidden","setEditCoverPhotoHidden","size","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","colorThief","ColorThief","img","document","querySelector","onload","color","getColor","toString","renderBgGradientColor","coverPhoto","style","display","renderLuansPosts","map","length","fill","DropDownMenu","history","useHistory","defaultAvatar","push","CreatePost","textLength","setTextLength","textSmallSize","postButtonActivated","Screen","authenType","createPostIsVisible","App","useReducer","dimBgModal","Provider","exact","path","component","param","renderModal","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.413da2dd.chunk.js","sourcesContent":["import { css } from 'styled-components'\r\n\r\nconst globalValues = {\r\n  navbar_elements_height: '3rem',\r\n  navbar_column_gap: '1rem',\r\n  navbar_height: '4.5rem',\r\n  dropdown_menu_bdr_rds: '10px',\r\n  ButtonCSS: css`\r\n    font-size: inherit;\r\n    border-radius: 0.5rem;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: white;\r\n    background-color: #42b72a;\r\n    width: 100%;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n  InputCSS: css`\r\n    outline: none;\r\n    border: 1px solid #dddfe2;\r\n    border-radius: 0.5rem;\r\n    width: 100%;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    &::placeholder {\r\n      color: #90949c;\r\n      font-weight: 100;\r\n    }\r\n  `,\r\n}\r\n\r\nexport default globalValues\r\n","import { createContext } from 'react'\r\n\r\ninterface ContextInterface {\r\n  toggleState: any\r\n  dispatchToggle: any\r\n  isSignedIn: any\r\n  dispatchSignInOut: any\r\n  dimBgModal: any\r\n  dispatchDimBgModal: any\r\n  // create post\r\n}\r\n\r\nconst Context = createContext({} as ContextInterface)\r\n\r\nexport default Context\r\n","export const themes = {\r\n  light: {\r\n    type: 'light',\r\n\r\n    bxShdw:\r\n      'rgba(50, 50, 93, 0.25) 0 0 5px -1px, rgba(0, 0, 0, 0.3) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#fff',\r\n    nav_btm_brdr_clr: '#fff',\r\n    // fb_icon: '#000',\r\n    font: '#050505',\r\n    font_lighter: '#65676b',\r\n    // menu\r\n    divider_clr: '#ced0d4',\r\n    hover: '#d4d4d434',\r\n    icon_color: '#1d1f23',\r\n    theme_toggler_bgclr: '#e6e8ed',\r\n    theme_toggler_bgclr_active: '#E7F3FF',\r\n    theme_toggler_icon_active: '#0571ED',\r\n\r\n    // body\r\n    body: '#f0f2f5',\r\n\r\n    avatar_pic_cam_icon_bgclr: '#e4e6eb',\r\n\r\n    whats_on_ur_mind_bgclr: '#F0F2F5',\r\n  },\r\n  dark: {\r\n    type: 'dark',\r\n\r\n    bxShdw:\r\n      'rgba(255, 255, 255) 0 0 5px -1px, rgba(255, 255, 255) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#242526',\r\n    nav_btm_brdr_clr: '#393a3b',\r\n    // fb_icon: '#fff',\r\n    font: '#e4e6eb',\r\n    font_lighter: '#b0b3b8',\r\n    // menu\r\n    divider_clr: '#3e4042',\r\n    hover: '#ffffff45',\r\n    icon_color: '#e4e6ea',\r\n    theme_toggler_bgclr: '#4e5052',\r\n    theme_toggler_bgclr_active: '#263951',\r\n    theme_toggler_icon_active: '#2D86FF',\r\n    // body\r\n    body: '#18191a',\r\n\r\n    avatar_pic_cam_icon_bgclr: '#3a3b3c',\r\n\r\n    whats_on_ur_mind_bgclr: '#3A3B3C',\r\n  },\r\n}\r\n","import { initializeApp } from 'firebase/app'\r\nimport { doc, getFirestore, setDoc } from 'firebase/firestore'\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { User } from './types/interface'\r\n\r\ninitializeApp({\r\n  apiKey: 'AIzaSyD5ADlnZW_bL1r3q3w2ckoqqhl4cjLU7B8',\r\n  authDomain: 'faekbook-35cc8.firebaseapp.com',\r\n  databaseURL:\r\n    'https://faekbook-35cc8-default-rtdb.asia-southeast1.firebasedatabase.app',\r\n  projectId: 'faekbook-35cc8',\r\n  storageBucket: 'faekbook-35cc8.appspot.com',\r\n  messagingSenderId: '692722345820',\r\n  appId: '1:692722345820:web:964baa89b10843e20c8399',\r\n  measurementId: 'G-E0CJXD28RC',\r\n})\r\n\r\nexport const auth = getAuth()\r\n\r\nconst db = getFirestore()\r\n\r\n// Initialize Firebase\r\n// const app = initializeApp(firebaseConfig)\r\n\r\nexport default class Authen {\r\n  static signUp(email: string, password: string) {\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        const newUser = {\r\n          auth: {\r\n            email: email,\r\n            password: password,\r\n          },\r\n        }\r\n        setDoc(doc(db, 'users', email), newUser)\r\n      })\r\n      .catch(err => {\r\n        const errorCode = err.code\r\n        const errorMessage = err.message\r\n        alert(`Error: ${errorCode}. ${errorMessage}`)\r\n      })\r\n  }\r\n  static signIn(email: string, password: string) {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        console.log(`User with email ${email} has logged in successfully`)\r\n      })\r\n      .catch(err => {\r\n        const errorCode = err.code\r\n        const errorMessage = err.message\r\n        alert(`Error: ${errorCode}. ${errorMessage}`)\r\n      })\r\n  }\r\n  static getUserData(user: string) {\r\n    onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        // user is signed in\r\n        // const uid = user.uid\r\n      } else {\r\n        // user is signed out\r\n      }\r\n    })\r\n  }\r\n  static signOut() {\r\n    signOut(auth)\r\n      .then(() => {\r\n        console.log('signed out successfully')\r\n      })\r\n      .catch(e => {\r\n        console.log(e, 'sign-out failed')\r\n      })\r\n  }\r\n  static handleAuthStateChange(callback1: any, callback2: any) {\r\n    onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        callback1()\r\n      } else {\r\n        callback2()\r\n      }\r\n    })\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/picture_of_myself.ded9b47d.jpg\";","import styled, { keyframes } from 'styled-components'\r\nimport globalValues from '../styles/globalValues'\r\nimport { FaFacebook } from 'react-icons/fa'\r\nimport { MdArrowDropDown } from 'react-icons/md'\r\nimport Context from '../utils/Context'\r\nimport React, { useContext } from 'react'\r\n// import DropDownMenu from './Modals/DropDownMenu'\r\nimport { themes } from '../utils/themes'\r\nimport { Link } from 'react-router-dom'\r\nimport Authen from '../firebase'\r\nimport { useEffect } from 'react'\r\nimport myAvatar from '../utils/images/picture_of_myself.jpg'\r\n\r\nconst Navbar: React.FC<any> = () => {\r\n  const {\r\n    toggleState,\r\n    isSignedIn,\r\n    dispatchToggle,\r\n    dispatchSignInOut,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n\r\n  useEffect(() => {\r\n    Authen.handleAuthStateChange(\r\n      () => dispatchSignInOut({ type: 'SIGN_IN' }),\r\n      () => dispatchSignInOut({ type: 'SIGN_OUT' })\r\n    )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const userProfileButton = (\r\n    <Link to='/faekbook/profile'>\r\n      <div className='user-profile-button'>\r\n        <img src={myAvatar} alt='avatar' />\r\n        Nguyen\r\n      </div>\r\n    </Link>\r\n  )\r\n\r\n  const logInButton = (\r\n    <div\r\n      className='log-in-button'\r\n      onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}\r\n    >\r\n      Log In\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <StyledNav\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      menuVisibility={toggleState.dropDownMenuIsVisible ? 1 : 0}\r\n    >\r\n      <div className='left'>\r\n        <Link to='/faekbook/'>\r\n          <FaFacebook className='fb-icon' />\r\n        </Link>\r\n        <Link to='/faekbook/'>\r\n          <span className='faekbook'>faekbook</span>\r\n        </Link>\r\n      </div>\r\n      <div className='right'>\r\n        {isSignedIn ? userProfileButton : logInButton}\r\n        <div\r\n          className='toggle-dropdown-menu'\r\n          onClick={e => {\r\n            e.stopPropagation()\r\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          }}\r\n        >\r\n          <MdArrowDropDown />\r\n        </div>\r\n      </div>\r\n      {/* {menuVisibility && <DropDownMenu />} */}\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nconst rotation = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(359deg);\r\n  }\r\n`\r\n\r\nconst StyledNav = styled('nav')<{ menuVisibility: number }>`\r\n  position: sticky;\r\n  top: 0;\r\n  background: ${p => p.theme.main_bgclr};\r\n  height: ${globalValues.navbar_height};\r\n  box-shadow: ${p => p.theme.bxShadw};\r\n  border-bottom: 1px solid ${p => p.theme.nav_btm_brdr_clr};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-inline: 1rem;\r\n  z-index: 100;\r\n  .left {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    a {\r\n      text-decoration: none;\r\n      .fb-icon,\r\n      .faekbook {\r\n        color: ${p => p.theme.font};\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .fb-icon {\r\n        height: ${globalValues.navbar_elements_height};\r\n        width: ${globalValues.navbar_elements_height};\r\n        animation: ${rotation} 2s infinite linear;\r\n      }\r\n    }\r\n  }\r\n  .right {\r\n    display: flex;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    .toggle-dropdown-menu {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      background: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_bgclr_active\r\n          : p.theme.theme_toggler_bgclr};\r\n      font-size: ${globalValues.navbar_elements_height};\r\n      color: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_icon_active\r\n          : p.theme.icon_color};\r\n      &:hover {\r\n        cursor: pointer;\r\n        filter: brightness(${p => (p.theme.type === 'light' ? '0.9' : '1.3')});\r\n      }\r\n    }\r\n    a .user-profile-button,\r\n    .log-in-button {\r\n      height: ${globalValues.navbar_elements_height};\r\n      border-radius: 50px;\r\n      display: flex;\r\n      align-items: center;\r\n      font-weight: 700;\r\n      font-size: 1.25rem;\r\n      color: ${p => p.theme.font};\r\n      &:hover {\r\n        cursor: pointer;\r\n        background: ${p =>\r\n          p.menuVisibility\r\n            ? p.theme.theme_toggler_bgclr_active\r\n            : p.theme.theme_toggler_bgclr};\r\n      }\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      .user-profile-button {\r\n        column-gap: 0.6rem;\r\n        padding-left: 0.35rem;\r\n        padding-right: 0.6rem;\r\n        img {\r\n          height: calc(${globalValues.navbar_elements_height} - 0.7rem);\r\n          border-radius: 50%;\r\n        }\r\n      }\r\n    }\r\n    .log-in-button {\r\n      padding-inline: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Navbar\r\n","const toggleInitialStates = {\r\n  isDarkTheme: false,\r\n  dropDownMenuIsVisible: false,\r\n}\r\n\r\nexport const toggleReducer = (state = toggleInitialStates, action: any) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_DARK_THEME':\r\n      return { ...state, isDarkTheme: !state.isDarkTheme }\r\n    case 'TOGGLE_DROP_DOWN_MENU':\r\n      return { ...state, dropDownMenuIsVisible: !state.dropDownMenuIsVisible }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const isSignedInReducer = (state = { state: false }, action: any) => {\r\n  switch (action.type) {\r\n    case 'SIGN_IN':\r\n      return { state: true }\r\n    case 'SIGN_OUT':\r\n      return { state: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const authenModalReducer = (state = { state: 'none' }, action: any) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return { state: 'logIn' }\r\n    case 'SIGN_UP':\r\n      return { state: 'signUp' }\r\n    case 'CREATE_POST':\r\n      return { state: 'createPost' }\r\n    case 'NONE':\r\n      return { state: 'none' }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\n\r\nexport default function TurnOffModalButton() {\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n  return (\r\n    <StyledSpan\r\n      id='turn-off-modal'\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      onClick={() => dispatchDimBgModal({ type: 'NONE' })}\r\n    >\r\n      +\r\n    </StyledSpan>\r\n  )\r\n}\r\n\r\nconst StyledSpan = styled.span`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1.75rem;\r\n  font-size: 3.5rem;\r\n  transform: rotate(45deg);\r\n  color: ${p => p.theme.font};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Authen from '../../firebase'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\n\r\nexport default function LogInModal() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const { toggleState, dispatchSignInOut, dispatchDimBgModal } =\r\n    useContext(Context)\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Welcome Back!</div>\r\n        <input\r\n          type='text'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          placeholder='Email or Phone Number'\r\n        />\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder='Password'\r\n        />\r\n        <button\r\n          className='log-in-btn'\r\n          onClick={() => {\r\n            Authen.signIn(email, password)\r\n            dispatchSignInOut({ type: 'SIGN_IN' })\r\n            dispatchDimBgModal({ type: 'NONE' })\r\n          }}\r\n        >\r\n          Log In\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>New to Faekbook?</span>\r\n        <button\r\n          className='create-new-acc-btn'\r\n          onClick={dispatchDimBgModal({ type: 'SIGN_UP' })}\r\n        >\r\n          Create New Account\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 40rem;\r\n  max-width: 100vw;\r\n  display: flex;\r\n  flex-flow: column;\r\n  padding: 1.5rem;\r\n  #top,\r\n  #bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-flow: column;\r\n    row-gap: 1.25rem;\r\n    font-size: 1.75rem;\r\n  }\r\n  #top {\r\n    div {\r\n      align-self: flex-start;\r\n      font-weight: 500;\r\n      font-size: 2.25rem;\r\n      color: #1c1e21;\r\n      margin: 0.5rem auto 0.75rem 1rem;\r\n    }\r\n    input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .log-in-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 100%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n    margin-block: 2rem;\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    .create-new-acc-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 60%;\r\n    }\r\n  }\r\n`\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\n\r\nexport default function SignUpModal() {\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Sign Up</div>\r\n        <div>It's quick and easy</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <div className='full-name'>\r\n          <input type='text' placeholder='First name' />\r\n          <input type='text' placeholder='Last name' />\r\n        </div>\r\n        <input type='email' placeholder='Email'></input>\r\n        <input type='password' placeholder='New password' />\r\n        <button className='sign-up'>Sign Up</button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>Already have an account?</span>\r\n        <button onClick={dispatchDimBgModal({ type: 'LOG_IN' })}>Log In</button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 45rem;\r\n  max-width: 100vw;\r\n  #top,\r\n  #middle,\r\n  #bottom {\r\n    padding: 1.5rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 1rem;\r\n    align-items: center;\r\n    & button {\r\n      ${globalValues.ButtonCSS};\r\n    }\r\n  }\r\n  #top {\r\n    align-items: flex-start;\r\n    div:first-of-type {\r\n      font-weight: 600;\r\n      font-size: 3rem;\r\n      color: #1c1e21;\r\n    }\r\n    div:last-of-type {\r\n      color: #6d747c;\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  #middle {\r\n    font-size: 1.5rem;\r\n    & input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .full-name {\r\n      width: 100%;\r\n      display: flex;\r\n      column-gap: 0.75rem;\r\n    }\r\n    button {\r\n      margin-top: 1.5rem;\r\n    }\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    button {\r\n      font-size: 1.5rem;\r\n      width: 50%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport myAvatar from '../../utils/images/picture_of_myself.jpg'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\n\r\nexport default function WhatsOnYourMind() {\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n  return (\r\n    <StyledSection theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <img src={myAvatar} alt='avatar' />\r\n      <div onClick={() => dispatchDimBgModal({ type: 'CREATE_POST' })}>\r\n        What's on your mind?\r\n      </div>\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 1rem;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  img {\r\n    height: 4rem;\r\n    width: 4rem;\r\n  }\r\n  div {\r\n    color: ${p => p.theme.font_lighter};\r\n    flex-grow: 1;\r\n    padding-left: 2rem;\r\n    font-size: 1.5rem;\r\n    height: 4rem;\r\n    border-radius: 2rem;\r\n    background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    &:hover {\r\n      cursor: pointer;\r\n      filter: brightness(${p => (p.theme.type === 'dark' ? '1.1' : '0.95')});\r\n    }\r\n  }\r\n`\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\n\r\nconst MainPage: React.FC<any> = () => {\r\n  const { toggleState } = useContext(Context)\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <WhatsOnYourMind />\r\n      {/* <Post /> */}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  color: ${p => p.theme.font};\r\n`\r\n\r\nexport default MainPage\r\n","export default __webpack_public_path__ + \"static/media/cover_photo.d46f5c33.jpg\";","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport myAvatar from '../../utils/images/picture_of_myself.jpg'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport { AiFillLike } from 'react-icons/ai'\r\nimport { GoComment } from 'react-icons/go'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { format } from 'date-fns'\r\n\r\nconst Post: React.FC<{\r\n  first_name: string\r\n  last_name: string\r\n  avatar: string\r\n  date_created: Date\r\n  content: string\r\n  likes: number\r\n}> = ({ first_name, last_name, avatar, date_created, content, likes }) => {\r\n  const { toggleState } = useContext(Context)\r\n  return (\r\n    <StyledSection\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n    >\r\n      <div id='user-info'>\r\n        <img src={myAvatar} alt='avatar' />\r\n        <div className='info'>\r\n          <div className='name'>{first_name + ' ' + last_name}</div>\r\n          <div className='time'>{format(date_created, 'MMM d')}</div>\r\n        </div>\r\n      </div>\r\n      <main id='content'>{content}</main>\r\n      {likes > 0 && (\r\n        <div id='likes'>\r\n          <img\r\n            src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 16 16'%3e%3cdefs%3e%3clinearGradient id='a' x1='50%25' x2='50%25' y1='0%25' y2='100%25'%3e%3cstop offset='0%25' stop-color='%2318AFFF'/%3e%3cstop offset='100%25' stop-color='%230062DF'/%3e%3c/linearGradient%3e%3cfilter id='c' width='118.8%25' height='118.8%25' x='-9.4%25' y='-9.4%25' filterUnits='objectBoundingBox'%3e%3cfeGaussianBlur in='SourceAlpha' result='shadowBlurInner1' stdDeviation='1'/%3e%3cfeOffset dy='-1' in='shadowBlurInner1' result='shadowOffsetInner1'/%3e%3cfeComposite in='shadowOffsetInner1' in2='SourceAlpha' k2='-1' k3='1' operator='arithmetic' result='shadowInnerInner1'/%3e%3cfeColorMatrix in='shadowInnerInner1' values='0 0 0 0 0 0 0 0 0 0.299356041 0 0 0 0 0.681187726 0 0 0 0.3495684 0'/%3e%3c/filter%3e%3cpath id='b' d='M8 0a8 8 0 00-8 8 8 8 0 1016 0 8 8 0 00-8-8z'/%3e%3c/defs%3e%3cg fill='none'%3e%3cuse fill='url(%23a)' xlink:href='%23b'/%3e%3cuse fill='black' filter='url(%23c)' xlink:href='%23b'/%3e%3cpath fill='white' d='M12.162 7.338c.176.123.338.245.338.674 0 .43-.229.604-.474.725a.73.73 0 01.089.546c-.077.344-.392.611-.672.69.121.194.159.385.015.62-.185.295-.346.407-1.058.407H7.5c-.988 0-1.5-.546-1.5-1V7.665c0-1.23 1.467-2.275 1.467-3.13L7.361 3.47c-.005-.065.008-.224.058-.27.08-.079.301-.2.635-.2.218 0 .363.041.534.123.581.277.732.978.732 1.542 0 .271-.414 1.083-.47 1.364 0 0 .867-.192 1.879-.199 1.061-.006 1.749.19 1.749.842 0 .261-.219.523-.316.666zM3.6 7h.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-.8a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6z'/%3e%3c/g%3e%3c/svg%3e\"\r\n            alt=''\r\n          />\r\n          <span>{likes}</span>\r\n        </div>\r\n      )}\r\n\r\n      <div id='like-comment'>\r\n        <div className='like'>\r\n          <AiFillLike className='icon' />\r\n          <span>Like</span>\r\n        </div>\r\n        <div className='comments'>\r\n          <GoComment className='icon' />\r\n          <span>View Comments</span>\r\n        </div>\r\n      </div>\r\n      <div id='comment-input'>\r\n        <img src={myAvatar} alt='avatar' />\r\n        <input placeholder='Write a comment...'></input>\r\n      </div>\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled('section')<{ isDarkTheme: number }>`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font_lighter};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  padding-bottom: 1.5rem;\r\n  #user-info {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n    }\r\n    .info {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: space-around;\r\n      height: 3.5rem;\r\n      .name {\r\n        font-size: 1.5rem;\r\n        font-weight: 700;\r\n        color: ${p => p.theme.font};\r\n      }\r\n      .time {\r\n      }\r\n    }\r\n  }\r\n  #content {\r\n    font-size: 1.5rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n  }\r\n  #likes {\r\n    padding: 1.5rem 1.5rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 0.5rem;\r\n    img {\r\n      height: 1.75rem;\r\n      width: 1.75rem;\r\n    }\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n  #like-comment {\r\n    border-block: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')} 1px solid;\r\n    margin-top: 1.5rem;\r\n    padding: 0.5rem 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    column-gap: 0.5rem;\r\n    .like,\r\n    .comments {\r\n      height: 3.25rem;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      width: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      column-gap: 0.75rem;\r\n      background-color: ${p => p.theme.main_bgclr};\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n      .icon {\r\n        font-size: 1.75rem;\r\n      }\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: ${p => (p.isDarkTheme ? '#64646471' : '#ebebebae')};\r\n      }\r\n    }\r\n    .like {\r\n      color: #036ee2;\r\n    }\r\n  }\r\n  #comment-input {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 3.5rem;\r\n      width: 3.5rem;\r\n    }\r\n    input {\r\n      height: 3.5rem;\r\n      color: ${p => p.theme.font};\r\n      border: none;\r\n      outline: none;\r\n      flex-grow: 1;\r\n      padding-left: 1.25rem;\r\n      font-size: 1.5rem;\r\n      border-radius: 2rem;\r\n      background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n      display: flex;\r\n      align-items: center;\r\n      &:hover {\r\n        cursor: text;\r\n        filter: brightness(${p => (p.isDarkTheme ? '1.1' : '0.95')});\r\n      }\r\n      &::placeholder {\r\n        color: ${p => p.theme.font_lighter};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Post\r\n","export default __webpack_public_path__ + \"static/media/default_user.4255cca7.png\";","import myAvatar from '../utils/images/default_user.png'\r\n\r\nexport interface Comment {\r\n  commenter: string\r\n  content: string\r\n  // likes: number\r\n  date: Date\r\n}\r\n\r\nexport interface Post {\r\n  content: string\r\n  likes: Array<string>\r\n  date: Date\r\n  comments: Array<Comment>\r\n}\r\n\r\nexport interface Auth {\r\n  // uid: string\r\n  email: string\r\n  password: string\r\n}\r\n\r\nexport interface User {\r\n  auth: Auth\r\n  first_name: string\r\n  last_name: string\r\n  avatar: string\r\n  posts: Array<Post>\r\n  theme?: string\r\n}\r\n\r\nexport interface Users {\r\n  list: Array<User>\r\n}\r\n\r\nexport interface LoginState {\r\n  user: User\r\n}\r\n\r\nexport const Luan: User = {\r\n  auth: {\r\n    email: 'luan@gmail.com',\r\n    password: 'luanluanluan',\r\n  },\r\n  first_name: 'Thanh Luan',\r\n  last_name: 'Nguyen',\r\n  avatar: myAvatar,\r\n  posts: [\r\n    {\r\n      date: new Date(2021, 5, 10),\r\n      content: 'good day aint it',\r\n      likes: ['hiep@gmail.com', 'long@gmail.com'],\r\n      comments: [\r\n        {\r\n          date: new Date(2021, 5, 30),\r\n          commenter: 'hiep@gmail.com',\r\n          content: \"that's right babe\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      date: new Date(2021, 5, 20),\r\n      content: 'today was shitty',\r\n      likes: ['hiep@gmail.com'],\r\n      comments: [\r\n        {\r\n          date: new Date(2021, 5, 30),\r\n          commenter: 'hiep@gmail.com',\r\n          content: \"that's right babe\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  theme: 'dark',\r\n}\r\nconst Hiep: User = {\r\n  auth: {\r\n    email: 'hiep@gmail.com',\r\n    password: 'hiephiephiep',\r\n  },\r\n  first_name: 'Dinh Hiep',\r\n  last_name: 'Ngo',\r\n  avatar: 'hiepAvatar',\r\n  posts: [],\r\n  theme: 'light',\r\n}\r\nconst Long: User = {\r\n  auth: {\r\n    email: 'long@gmail.com',\r\n    password: 'long',\r\n  },\r\n  first_name: 'Thanh Long',\r\n  last_name: 'Pham',\r\n  avatar: 'longAvatar',\r\n  posts: [],\r\n  theme: 'dark',\r\n}\r\n\r\n// const users: Users = {\r\n//   list: [\r\n//     {\r\n//       auth: {\r\n//         // uid: 'abcxyz',\r\n//         email: 'mail@gmail.com',\r\n//         password: 'passpass',\r\n//       },\r\n//       first_name: 'Thanh Luan',\r\n//       last_name: 'Nguyen',\r\n//       avatar: 'avatar123',\r\n//       posts: [\r\n//         {\r\n//           content: 'nice day',\r\n//           likes: 4,\r\n//           date: new Date(2021, 8, 18),\r\n//           comments: [\r\n//             {\r\n//               commenter: 'Kate Winston',\r\n//               content: 'yeah it is',\r\n//               likes: 2,\r\n//               date: new Date(2021, 8, 18),\r\n//             },\r\n//           ],\r\n//         },\r\n//       ],\r\n//       theme: 'dark',\r\n//     },\r\n//   ],\r\n// }\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport { AiOutlineCamera, AiFillCamera } from 'react-icons/ai'\r\nimport myAvatar from '../../utils/images/picture_of_myself.jpg'\r\nimport coverPhoto from '../../utils/images/cover_photo.jpg'\r\nimport ColorThief from 'colorthief'\r\nimport useWindowSize, { Size } from '../../hooks/useWindowSize'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\nimport Post from './Post'\r\nimport { Luan } from '../../types/interface'\r\n\r\nexport default function ProfilePage() {\r\n  const { toggleState } = useContext(Context)\r\n  const [bgGradient, setBgGradient] = useState('')\r\n  const [editCoverPhotoHidden, setEditCoverPhotoHidden] = useState(false)\r\n  const size: Size = useWindowSize()\r\n\r\n  useEffect(() => {\r\n    const colorThief = new ColorThief()\r\n    const img: any = document.querySelector('#get-dominant-clr')\r\n    img.onload = () => {\r\n      const color = colorThief.getColor(img).toString()\r\n      setBgGradient(color)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const { width } = size\r\n    if (width !== undefined && width <= 900) {\r\n      setEditCoverPhotoHidden(true)\r\n    } else setEditCoverPhotoHidden(false)\r\n  }, [size])\r\n\r\n  const renderBgGradientColor = (\r\n    <img\r\n      src={coverPhoto}\r\n      alt='colorthief'\r\n      id='get-dominant-clr'\r\n      style={{ display: 'none' }}\r\n    />\r\n  )\r\n\r\n  const renderLuansPosts = Luan.posts.map(p => (\r\n    <Post\r\n      first_name={Luan.first_name}\r\n      last_name={Luan.last_name}\r\n      avatar={Luan.avatar}\r\n      date_created={p.date}\r\n      content={p.content}\r\n      likes={p.likes.length}\r\n    />\r\n  ))\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      coverPhoto={coverPhoto}\r\n      bgGradient={bgGradient}\r\n      editCoverPhotoHidden={editCoverPhotoHidden}\r\n    >\r\n      <header>\r\n        <div id='cover-picture'>\r\n          {renderBgGradientColor}\r\n          <div className='avatar-picture'>\r\n            <img src={myAvatar} alt='avatar' />\r\n            <div className='update-avatar'>\r\n              {toggleState.isDarkTheme ? (\r\n                <AiFillCamera className='icon' style={{ fill: 'white' }} />\r\n              ) : (\r\n                <AiOutlineCamera className='icon' />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className='edit-cover-photo'>\r\n            <AiFillCamera className='icon' /> <span>Edit Cover Photo</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div id='intro'>\r\n          <div className='name'>Thanh Luan Nguyen</div>\r\n          <div className='short-description'>\r\n            Why did you change? Why did you bend and break?\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        <WhatsOnYourMind />\r\n        {renderLuansPosts}\r\n      </main>\r\n      {/* <div className='dummyText'></div> */}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  coverPhoto: any\r\n  bgGradient: string\r\n  editCoverPhotoHidden: boolean\r\n}>`\r\n  color: ${p => p.theme.font};\r\n  padding-bottom: 2rem;\r\n  header {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(${p => p.bgGradient}) 0%,\r\n      ${p => p.theme.main_bgclr} 50%\r\n    );\r\n    #cover-picture {\r\n      position: relative;\r\n      background-image: url(${p => p.coverPhoto});\r\n      background-size: cover;\r\n      background-position: 50% 40%;\r\n      width: 70rem;\r\n      max-width: 100%;\r\n      aspect-ratio: 7/3;\r\n      margin-inline: auto;\r\n      border-radius: 0 0 10px 10px;\r\n      .avatar-picture {\r\n        position: absolute;\r\n        bottom: -2rem;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        width: 15rem;\r\n        height: 15rem;\r\n        padding: 0.5rem;\r\n        background-color: ${p => p.theme.main_bgclr};\r\n        border-radius: 50%;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        .update-avatar {\r\n          position: absolute;\r\n          right: 1.1rem;\r\n          bottom: 1.1rem;\r\n          padding: 0.5rem;\r\n          border-radius: 50%;\r\n          background-color: ${p => p.theme.avatar_pic_cam_icon_bgclr};\r\n          &:hover {\r\n            cursor: pointer;\r\n            filter: brightness(1.1);\r\n          }\r\n          .icon {\r\n            height: 2rem;\r\n            width: 2rem;\r\n          }\r\n        }\r\n      }\r\n      .edit-cover-photo {\r\n        color: black;\r\n        position: absolute;\r\n        right: 2rem;\r\n        bottom: 3rem;\r\n        background-color: white;\r\n        padding: 0.5rem 1rem;\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap: 1rem;\r\n        border-radius: 7px;\r\n        &:hover {\r\n          cursor: pointer;\r\n          filter: brightness(0.95);\r\n        }\r\n        .icon {\r\n          height: 2rem;\r\n          width: 2rem;\r\n        }\r\n        span {\r\n          font-size: 1.2rem;\r\n          font-weight: 700;\r\n          display: ${p => (p.editCoverPhotoHidden ? 'none' : 'block')};\r\n        }\r\n      }\r\n    }\r\n    #intro {\r\n      padding: 3rem 2rem 2rem;\r\n      text-align: center;\r\n      .name {\r\n        font-size: 3.5rem;\r\n        font-weight: 800;\r\n      }\r\n      .short-description {\r\n        padding-top: 1rem;\r\n        font-size: 1.75rem;\r\n      }\r\n    }\r\n  }\r\n  main {\r\n  }\r\n`\r\n","import { useState, useEffect } from 'react'\r\n// Define general type for useWindowSize hook, which includes width and height\r\nexport interface Size {\r\n  width: number | undefined\r\n  height: number | undefined\r\n}\r\n\r\n// Usage\r\n// function App() {\r\n//   const size: Size = useWindowSize()\r\n//   return (\r\n//     <div>\r\n//       {size.width}px / {size.height}px\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// Hook\r\nexport default function useWindowSize(): Size {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<Size>({\r\n    width: undefined,\r\n    height: undefined,\r\n  })\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n    }\r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize)\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize()\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, []) // Empty array ensures that effect is only run on mount\r\n  return windowSize\r\n}\r\n","import { useContext } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport { FaMoon, FaSun } from 'react-icons/fa'\r\nimport { GoSignOut, GoSignIn } from 'react-icons/go'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { themes } from '../../utils/themes'\r\nimport defaultAvatar from '../../utils/images/default_user.png'\r\nimport myAvatar from '../../utils/images/picture_of_myself.jpg'\r\nimport Authen from '../../firebase'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst DropDownMenu: React.FC<any> = () => {\r\n  const { toggleState, isSignedIn, dispatchToggle, dispatchDimBgModal } =\r\n    useContext(Context)\r\n  const history = useHistory()\r\n\r\n  const returnToHomepage = () => {\r\n    history.push('/faekbook/')\r\n  }\r\n\r\n  const avatar = (\r\n    <img src={isSignedIn ? myAvatar : defaultAvatar} alt='avatar' />\r\n  )\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isSignedIn={isSignedIn ? 1 : 0}\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <Link\r\n        to='/faekbook/profile'\r\n        onClick={() =>\r\n          isSignedIn && dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n        }\r\n      >\r\n        <div className='profile'>\r\n          {avatar}\r\n          <div className='name'>\r\n            <span>{isSignedIn ? 'Nguyen Thanh Luan' : 'User'}</span>\r\n            <span>{isSignedIn ? 'See your profile' : 'Please log in'}</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className='divider' />\r\n\r\n      <div\r\n        className='theme-toggler'\r\n        onClick={() => {\r\n          dispatchToggle({ type: 'TOGGLE_DARK_THEME' })\r\n          dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n        }}\r\n      >\r\n        <div className='icon'>\r\n          {toggleState.isDarkTheme ? <FaSun /> : <FaMoon />}\r\n        </div>\r\n        Change to {toggleState.isDarkTheme ? 'Light' : 'Dark'} theme\r\n      </div>\r\n\r\n      <div\r\n        className='log-in-out'\r\n        onClick={() => {\r\n          dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          isSignedIn\r\n            ? (() => {\r\n                Authen.signOut()\r\n                returnToHomepage()\r\n              })()\r\n            : dispatchDimBgModal({ type: 'LOG_IN' })\r\n        }}\r\n      >\r\n        <div className='icon'>{isSignedIn ? <GoSignOut /> : <GoSignIn />}</div>\r\n        Log {isSignedIn ? 'Out' : 'In'}\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{ isSignedIn: number }>`\r\n  background: ${p => p.theme.main_bgclr};\r\n  width: 30rem;\r\n  position: absolute;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  right: 1rem;\r\n  top: 5rem;\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  padding: 1rem;\r\n  z-index: 100;\r\n  /* profile, theme-toggler and log-in-out */\r\n  a > .profile,\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    &:hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n  }\r\n  /* profile */\r\n  a {\r\n    text-decoration: none;\r\n    pointer-events: ${p => (p.isSignedIn ? 'auto' : 'none')};\r\n    .profile {\r\n      opacity: ${p => (p.isSignedIn ? '100%' : '30%')};\r\n      img {\r\n        border-radius: 50%;\r\n        height: 5rem;\r\n        background: ${p => p.theme.theme_toggler_bgclr};\r\n      }\r\n      .name {\r\n        display: flex;\r\n        flex-flow: column;\r\n        justify-content: space-evenly;\r\n        span:first-of-type {\r\n          font-size: 1.3rem;\r\n          font-weight: 600;\r\n          color: ${p => p.theme.font};\r\n        }\r\n        span:last-of-type {\r\n          font-size: 1.1375rem;\r\n          color: ${p => p.theme.font_lighter};\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .divider {\r\n    margin-block: 0.5rem;\r\n    height: 2px;\r\n    width: 100%;\r\n    background: ${p => p.theme.divider_clr};\r\n  }\r\n  /* theme-toggler and log-in-out */\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    .icon {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      font-size: 2rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n    }\r\n  }\r\n  .theme-toggler {\r\n    .icon {\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n  .log-in-out {\r\n    .icon {\r\n      position: relative;\r\n      svg {\r\n        position: absolute;\r\n        top: 0.7rem;\r\n        left: ${p => (p.isSignedIn ? '0.7rem' : '0.5rem')};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default DropDownMenu\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\nimport myAvatar from '../../utils/images/picture_of_myself.jpg'\r\nimport { themes } from '../../utils/themes'\r\n\r\nexport default function CreatePost() {\r\n  const [textLength, setTextLength] = useState<number>(0)\r\n  const { toggleState } = useContext(Context)\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      textSmallSize={textLength > 40 ? 1 : 0}\r\n      postButtonActivated={textLength > 0 ? 1 : 0}\r\n    >\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Create Post</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <img src={myAvatar} alt='my_avatar' />\r\n        <div className='name'>Jone Leto</div>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"What's on your mind?\"\r\n        onChange={e => setTextLength(e.target.value.length)}\r\n      />\r\n      <div className='post-button'>\r\n        <button>Post</button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  isDarkTheme: number\r\n  textSmallSize: number\r\n  postButtonActivated: number\r\n}>`\r\n  width: 50rem;\r\n  max-width: 100vw;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  border-radius: 10px;\r\n\r\n  #middle,\r\n  textarea,\r\n  .post-button {\r\n    padding: 1.5rem 1.5rem;\r\n  }\r\n\r\n  #top {\r\n    line-height: 5.5rem;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    font-weight: 700;\r\n    height: 5.5rem;\r\n  }\r\n  #middle {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n    }\r\n    .name {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    padding-top: 0;\r\n    background-color: inherit;\r\n    font-family: inherit;\r\n    font-size: ${p => (p.textSmallSize ? '1.5rem' : '2.5rem')};\r\n    display: block;\r\n    border: none;\r\n    outline: none;\r\n    width: 100%;\r\n    min-height: 15rem;\r\n    resize: none;\r\n    color: ${p => p.theme.font};\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.75rem;\r\n      border-radius: 3px;\r\n      background-color: rgba(195, 195, 195, 0.3);\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background: rgba(114, 114, 114, 0.5);\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .post-button {\r\n    button {\r\n      width: 100%;\r\n      height: 3.5rem;\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      margin-inline: auto;\r\n      border: none;\r\n      color: ${p => (p.postButtonActivated ? 'white' : '#858686')};\r\n      background-color: ${p =>\r\n        p.postButtonActivated\r\n          ? '#2D88FF'\r\n          : p.isDarkTheme\r\n          ? '#505151'\r\n          : '#e4e6eb'};\r\n      &:hover {\r\n        cursor: ${p => (p.postButtonActivated ? 'pointer' : 'not-allowed')};\r\n      }\r\n    }\r\n  }\r\n\r\n  .divider {\r\n    background-color: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')};\r\n    margin-inline: auto;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import styled, { css } from 'styled-components'\n// import Body from './components/Body/Body'\nimport Navbar from './components/Navbar'\nimport { useEffect, useReducer } from 'react'\nimport {\n  toggleReducer,\n  isSignedInReducer,\n  authenModalReducer,\n} from './reducers/reducers'\nimport Context from './utils/Context'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport LogInModal from './components/Modals/LogInModal'\nimport SignUpModal from './components/Modals/SignUpModal'\nimport { themes } from './utils/themes'\nimport MainPage from './components/Body/MainPage'\nimport ProfilePage from './components/Body/ProfilePage'\nimport Authen from './firebase'\nimport DropDownMenu from './components/Modals/DropDownMenu'\nimport CreatePost from './components/Modals/CreatePost'\n\nconst App: React.FC<any> = () => {\n  const [toggleState, dispatchToggle] = useReducer(toggleReducer, {\n    isDarkTheme: false,\n    dropDownMenuIsVisible: false,\n  })\n\n  const [isSignedIn, dispatchSignInOut] = useReducer(isSignedInReducer, {\n    state: false,\n  })\n\n  const [dimBgModal, dispatchDimBgModal] = useReducer(authenModalReducer, {\n    state: 'none',\n  })\n\n  const renderModal = (param: string) => {\n    switch (param) {\n      case 'logIn':\n        return <LogInModal />\n      case 'signUp':\n        return <SignUpModal />\n      case 'createPost':\n        return <CreatePost />\n      case 'none':\n        return\n    }\n  }\n\n  useEffect(() => {\n    // Authen.signUp('consutoraku@gmail.com', 'thanhLuan123')\n    // Authen.signUp('thanhluannguyenxyz@gmail.com', 'iwiwlkiwljoo')\n    // Authen.getUserData('HuICL90OPLUfmvXJHE6L6bwSyFi2')\n    // Authen.getUserData('thanhluannguyenxyz@gmail.com')\n    // Authen.signIn('thanhluannguyenxyz@gmail.com', 'iwiwlkiwljoo')\n    // Authen.signOut()\n  }, [])\n\n  return (\n    <Context.Provider\n      value={{\n        toggleState: toggleState,\n        dispatchToggle: dispatchToggle,\n        isSignedIn: isSignedIn.state,\n        dispatchSignInOut: dispatchSignInOut,\n        dimBgModal: dimBgModal,\n        dispatchDimBgModal: dispatchDimBgModal,\n        // menuVisibility: toggleState.dropDownMenuIsVisible,\n        // handleToggleMenuVisibility: () =>\n        // dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' }),\n        // handleIsSignedIn: () => dispatchSignInOut({ type: 'SIGN_IN' }),\n        // handleIsSignedOut: () => dispatchSignInOut({ type: 'SIGN_OUT' }),\n        // handleLogInModal: () => dispatchDimBgModal({ type: 'LOG_IN' }),\n        // handleSignUpModal: () => dispatchDimBgModal({ type: 'SIGN_UP' }),\n        // handleCreatePostModal: () =>\n        //   dispatchDimBgModal({ type: 'CREATE_POST' }),\n        // handleTurnOffModal: () => dispatchDimBgModal({ type: 'NONE' }),\n      }}\n    >\n      <Router>\n        <StyledDiv\n          theme={toggleState.isDarkTheme === true ? themes.dark : themes.light}\n          authenType={dimBgModal.state}\n          toggleState={toggleState}\n          onClick={() =>\n            toggleState.dropDownMenuIsVisible &&\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\n          }\n        >\n          <Navbar />\n          <Switch>\n            <Route exact path='/faekbook/' component={MainPage} />\n            <Route exact path='/faekbook/profile' component={ProfilePage} />\n          </Switch>\n          {/* modals */}\n          <div className='dim-bg-modal'>{renderModal(dimBgModal.state)}</div>\n          {toggleState.dropDownMenuIsVisible && <DropDownMenu />}\n        </StyledDiv>\n      </Router>\n    </Context.Provider>\n  )\n}\n\nconst Screen = css`\n  content: '';\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  z-index: 100;\n`\n\nconst StyledDiv = styled('div')<{ authenType: string; toggleState: any }>`\n  position: relative;\n  background: ${p => p.theme.body};\n  min-height: 100vh;\n  &::after {\n    ${p =>\n      (p.authenType !== 'none' || p.toggleState.createPostIsVisible) && Screen}\n    background-color: ${p =>\n      p.theme.type === 'dark' ? '#00000063' : '#ffffff92'};\n  }\n  .dim-bg-modal {\n    position: fixed;\n    background: white;\n    border-radius: 10px;\n    top: 15rem;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 200;\n    border-radius: 10px;\n    box-shadow: ${p => p.theme.bxShdw};\n  }\n`\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/reset.css'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n       box-sizing: border-box;\n    }\n    html {\n      font-size: 70%;\n      @media (min-width: 768px) {\n        font-size: 80%;\n      }\n      @media (min-width: 1024px) {\n        font-size: 90%;\n      }\n      @media (min-width: 1200px) {\n        font-size: 100%;\n      }\n    }\n    \n    body {\n      font-size: 1em;\n      font-family: 'Roboto', sans-serif;\n      user-select: none;\n    }\n\n    img {\n      border-radius: 50%;\n    }\n  `\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}