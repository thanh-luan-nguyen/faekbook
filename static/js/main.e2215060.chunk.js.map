{"version":3,"sources":["styles/globalValues.ts","utils/Context.ts","utils/themes.ts","utils/images/default_user.png","firebase.ts","components/Navbar.tsx","reducers/reducers.ts","components/Modals/TurnOffModalButton.tsx","components/Modals/LogInModal.tsx","components/Modals/SignUpModal.tsx","utils/BlueBgLikeIcon.tsx","components/Body/Post.tsx","components/Body/WhatsOnYourMind.tsx","components/Body/MainPage.tsx","utils/images/default_cover_photo.gif","components/Body/ProfilePage.tsx","hooks/useWindowSize.ts","components/Modals/DropDownMenu.tsx","components/Modals/CreatePost.tsx","App.tsx","index.tsx"],"names":["globalValues","navbar_elements_height","navbar_column_gap","navbar_height","dropdown_menu_bdr_rds","ButtonCSS","css","InputCSS","Context","createContext","themes","light","type","bxShdw","main_bgclr","nav_btm_brdr_clr","font","font_lighter","divider_clr","hover","icon_color","theme_toggler_bgclr","theme_toggler_bgclr_active","theme_toggler_icon_active","body","avatar_pic_cam_icon_bgclr","whats_on_ur_mind_bgclr","dark","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","Authen","email","password","firstName","lastName","createUserWithEmailAndPassword","then","userCredential","console","log","newUser","first_name","last_name","short_bio","avatar","defaultAvatar","theme","cover_photo","DB","setUser","catch","err","alert","code","message","signInWithEmailAndPassword","user","signOut","e","currentUser","callback1","callback2","onAuthStateChanged","callback","data","setDoc","doc","merge","getDoc","userSnap","unixSecond","post","getDocs","collection","postsCol","allPosts","forEach","push","filter","publisher","rotation","keyframes","StyledNav","styled","p","bxShadw","menuVisibility","Navbar","useContext","currentUserInfoState","toggleState","isSignedIn","dispatchToggle","dispatchSignInOut","dispatchDimBgModal","useEffect","handleSignInOutState","userProfileButton","to","className","src","alt","logInButton","onClick","isDarkTheme","dropDownMenuIsVisible","stopPropagation","toggleInitialStates","toggleReducer","state","action","isSignedInReducer","authenModalReducer","TurnOffModalButton","StyledSpan","id","span","LogInModal","useState","setEmail","setPassword","handleSignIn","StyledDiv","value","onChange","target","placeholder","div","SignUpModal","setFirstName","setLastName","history","useHistory","setCurrentUserInfoState","signUp","setCurrentUserStateInfoToNull","BlueBgLikeIcon","StyledSection","isLikedByCurrentUser","Post","full_name","date","content","likes","setIsLiked","hasAtLeastOneLike","setHasAtLeastOneLike","includes","length","WhatsOnYourMind","section","MainPage","posts","setPosts","getPosts","reverse","map","fromUnixTime","seconds","toString","bgGradient","coverPhoto","editCoverPhotoHidden","ProfilePage","currentEmail","setCurrentEmail","setBgGradient","setEditCoverPhotoHidden","size","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","colorThief","ColorThief","img","document","querySelector","onload","color","getColor","getUserEmail","currentUserPosts","renderBgGradientColor","defaultCoverPhoto","style","display","fill","DropDownMenu","handleSignOut","CreatePost","textLength","setTextLength","textSmallSize","postButtonActivated","Screen","authenType","createPostIsVisible","App","useReducer","dimBgModal","getUser","Provider","signIn","exact","path","component","renderModal","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2215060.chunk.js","sourcesContent":["import { css } from 'styled-components'\r\n\r\nconst globalValues = {\r\n  navbar_elements_height: '3rem',\r\n  navbar_column_gap: '1rem',\r\n  navbar_height: '4.5rem',\r\n  dropdown_menu_bdr_rds: '10px',\r\n  ButtonCSS: css`\r\n    font-size: inherit;\r\n    border-radius: 0.5rem;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: white;\r\n    background-color: #42b72a;\r\n    width: 100%;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n  InputCSS: css`\r\n    outline: none;\r\n    border: 1px solid #dddfe2;\r\n    border-radius: 0.5rem;\r\n    width: 100%;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    &::placeholder {\r\n      color: #90949c;\r\n      font-weight: 100;\r\n    }\r\n  `,\r\n}\r\n\r\nexport default globalValues\r\n","import { createContext } from 'react'\r\n\r\ninterface ContextInterface {\r\n  currentEmail: any\r\n  setCurrentEmail: any\r\n  currentUserInfoState: any\r\n  setCurrentUserInfoState: any\r\n  handleSignIn: any\r\n  toggleState: any\r\n  dispatchToggle: any\r\n  isSignedIn: any\r\n  dispatchSignInOut: any\r\n  dimBgModal: any\r\n  dispatchDimBgModal: any\r\n  handleSignOut: any\r\n}\r\n\r\nconst Context = createContext({} as ContextInterface)\r\n\r\nexport default Context\r\n","export const themes = {\r\n  light: {\r\n    type: 'light',\r\n\r\n    bxShdw:\r\n      'rgba(50, 50, 93, 0.25) 0 0 5px -1px, rgba(0, 0, 0, 0.3) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#fff',\r\n    nav_btm_brdr_clr: '#fff',\r\n    // fb_icon: '#000',\r\n    font: '#050505',\r\n    font_lighter: '#65676b',\r\n    // menu\r\n    divider_clr: '#ced0d4',\r\n    hover: '#d4d4d434',\r\n    icon_color: '#1d1f23',\r\n    theme_toggler_bgclr: '#e6e8ed',\r\n    theme_toggler_bgclr_active: '#E7F3FF',\r\n    theme_toggler_icon_active: '#0571ED',\r\n\r\n    // body\r\n    body: '#f0f2f5',\r\n\r\n    avatar_pic_cam_icon_bgclr: '#e4e6eb',\r\n\r\n    whats_on_ur_mind_bgclr: '#F0F2F5',\r\n  },\r\n  dark: {\r\n    type: 'dark',\r\n\r\n    bxShdw:\r\n      'rgba(255, 255, 255) 0 0 5px -1px, rgba(255, 255, 255) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#242526',\r\n    nav_btm_brdr_clr: '#393a3b',\r\n    // fb_icon: '#fff',\r\n    font: '#e4e6eb',\r\n    font_lighter: '#b0b3b8',\r\n    // menu\r\n    divider_clr: '#3e4042',\r\n    hover: '#ffffff45',\r\n    icon_color: '#e4e6ea',\r\n    theme_toggler_bgclr: '#4e5052',\r\n    theme_toggler_bgclr_active: '#263951',\r\n    theme_toggler_icon_active: '#2D86FF',\r\n    // body\r\n    body: '#18191a',\r\n\r\n    avatar_pic_cam_icon_bgclr: '#3a3b3c',\r\n\r\n    whats_on_ur_mind_bgclr: '#3A3B3C',\r\n  },\r\n}\r\n","export default __webpack_public_path__ + \"static/media/default_user.4255cca7.png\";","import { initializeApp } from 'firebase/app'\r\nimport {\r\n  collection,\r\n  doc,\r\n  DocumentData,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  setDoc,\r\n} from 'firebase/firestore'\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport defaultAvatar from './utils/images/default_user.png'\r\nimport defaultCoverPhoto from './utils/images/default_cover_photo.png'\r\nimport { Post } from './types/interface'\r\n\r\ninitializeApp({\r\n  apiKey: 'AIzaSyD5ADlnZW_bL1r3q3w2ckoqqhl4cjLU7B8',\r\n  authDomain: 'faekbook-35cc8.firebaseapp.com',\r\n  databaseURL:\r\n    'https://faekbook-35cc8-default-rtdb.asia-southeast1.firebasedatabase.app',\r\n  projectId: 'faekbook-35cc8',\r\n  storageBucket: 'faekbook-35cc8.appspot.com',\r\n  messagingSenderId: '692722345820',\r\n  appId: '1:692722345820:web:964baa89b10843e20c8399',\r\n  measurementId: 'G-E0CJXD28RC',\r\n})\r\n\r\nexport const auth = getAuth()\r\n\r\nexport const db = getFirestore()\r\n\r\nexport class Authen {\r\n  static signUp(\r\n    email: string,\r\n    password: string,\r\n    firstName: string,\r\n    lastName: string\r\n  ) {\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        console.log('signUp', userCredential)\r\n        const newUser = {\r\n          auth: {\r\n            email: email,\r\n            password: password,\r\n          },\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          short_bio: '',\r\n          avatar: defaultAvatar,\r\n          theme: 'light',\r\n          cover_photo: '',\r\n        }\r\n        DB.setUser(email, newUser)\r\n      })\r\n      .catch(err => {\r\n        alert(`Sign up Error: ${err.code}. ${err.message}`)\r\n      })\r\n  }\r\n  static signIn(email: string, password: string) {\r\n    return signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        console.log(\r\n          `User with email ${userCredential.user.email} has logged in successfully`\r\n        )\r\n      })\r\n      .catch(err => {\r\n        alert(`Sign in Error: ${err.code}. ${err.message}`)\r\n      })\r\n  }\r\n  static signOut() {\r\n    signOut(auth)\r\n      .then(() => {\r\n        console.log('signed out successfully')\r\n      })\r\n      .catch(e => {\r\n        alert('Signout failed: ' + e)\r\n      })\r\n  }\r\n  static getUserEmail() {\r\n    const user = auth.currentUser\r\n    if (user !== null) {\r\n      const email = user.email\r\n      return email\r\n    }\r\n  }\r\n  static handleSignInOutState(callback1: any, callback2 = () => {}) {\r\n    onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        callback1()\r\n      } else {\r\n        callback2()\r\n      }\r\n    })\r\n  }\r\n  static setCurrentUserStateInfoToNull(callback: any) {\r\n    onAuthStateChanged(auth, user => {\r\n      if (!user) {\r\n        callback()\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport class DB {\r\n  static setUser(email: string, data: any) {\r\n    setDoc(doc(db, 'users', email), data, {\r\n      merge: true,\r\n    })\r\n  }\r\n  static async getUser(email: string) {\r\n    const userSnap = await getDoc(doc(db, 'users', email))\r\n    return userSnap.data()\r\n  }\r\n  static setPost(unixSecond: string, post: Post) {\r\n    setDoc(doc(db, 'posts', unixSecond), post, { merge: false })\r\n  }\r\n  static async getPosts(email = '') {\r\n    const postsCol = await getDocs(collection(db, 'posts'))\r\n    const allPosts: DocumentData[] = []\r\n    postsCol.forEach(post => allPosts.push(post.data()))\r\n    return email === ''\r\n      ? allPosts\r\n      : allPosts.filter(post => post.publisher === email)\r\n  }\r\n}\r\n","import styled, { keyframes } from 'styled-components'\r\nimport globalValues from '../styles/globalValues'\r\nimport { FaFacebook } from 'react-icons/fa'\r\nimport { MdArrowDropDown } from 'react-icons/md'\r\nimport Context from '../utils/Context'\r\nimport React, { useContext } from 'react'\r\n// import DropDownMenu from './Modals/DropDownMenu'\r\nimport { themes } from '../utils/themes'\r\nimport { Link } from 'react-router-dom'\r\nimport { Authen } from '../firebase'\r\nimport { useEffect } from 'react'\r\nimport defaultAvatar from '../utils/images/default_user.png'\r\n\r\nconst Navbar: React.FC<any> = () => {\r\n  const {\r\n    currentUserInfoState,\r\n    toggleState,\r\n    isSignedIn,\r\n    dispatchToggle,\r\n    dispatchSignInOut,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n\r\n  useEffect(() => {\r\n    Authen.handleSignInOutState(\r\n      () => dispatchSignInOut({ type: 'SIGN_IN' }),\r\n      () => dispatchSignInOut({ type: 'SIGN_OUT' })\r\n    )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const userProfileButton = (\r\n    <Link to='/faekbook/profile'>\r\n      <div className='user-profile-button'>\r\n        <img\r\n          src={\r\n            currentUserInfoState ? currentUserInfoState.avatar : defaultAvatar\r\n          }\r\n          alt='avatar'\r\n        />\r\n        {currentUserInfoState && currentUserInfoState.first_name}\r\n      </div>\r\n    </Link>\r\n  )\r\n\r\n  const logInButton = (\r\n    <div\r\n      className='log-in-button'\r\n      onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}\r\n    >\r\n      Log In\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <StyledNav\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      menuVisibility={toggleState.dropDownMenuIsVisible ? 1 : 0}\r\n    >\r\n      <div className='left'>\r\n        <Link to='/faekbook/'>\r\n          <FaFacebook className='fb-icon' />\r\n        </Link>\r\n        <Link to='/faekbook/'>\r\n          <span className='faekbook'>faekbook</span>\r\n        </Link>\r\n      </div>\r\n      <div className='right'>\r\n        {isSignedIn ? userProfileButton : logInButton}\r\n        <div\r\n          className='toggle-dropdown-menu'\r\n          onClick={e => {\r\n            e.stopPropagation()\r\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          }}\r\n        >\r\n          <MdArrowDropDown />\r\n        </div>\r\n      </div>\r\n      {/* {menuVisibility && <DropDownMenu />} */}\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nconst rotation = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(359deg);\r\n  }\r\n`\r\n\r\nconst StyledNav = styled('nav')<{ menuVisibility: number }>`\r\n  position: sticky;\r\n  top: 0;\r\n  background: ${p => p.theme.main_bgclr};\r\n  height: ${globalValues.navbar_height};\r\n  box-shadow: ${p => p.theme.bxShadw};\r\n  border-bottom: 1px solid ${p => p.theme.nav_btm_brdr_clr};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-inline: 1rem;\r\n  z-index: 100;\r\n  .left {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    a {\r\n      text-decoration: none;\r\n      .fb-icon,\r\n      .faekbook {\r\n        color: ${p => p.theme.font};\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .fb-icon {\r\n        height: ${globalValues.navbar_elements_height};\r\n        width: ${globalValues.navbar_elements_height};\r\n        animation: ${rotation} 2s infinite linear;\r\n      }\r\n    }\r\n  }\r\n  .right {\r\n    display: flex;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    .toggle-dropdown-menu {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      background: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_bgclr_active\r\n          : p.theme.theme_toggler_bgclr};\r\n      font-size: ${globalValues.navbar_elements_height};\r\n      color: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_icon_active\r\n          : p.theme.icon_color};\r\n      &:hover {\r\n        cursor: pointer;\r\n        filter: brightness(${p => (p.theme.type === 'light' ? '0.9' : '1.3')});\r\n      }\r\n    }\r\n    a .user-profile-button,\r\n    .log-in-button {\r\n      height: ${globalValues.navbar_elements_height};\r\n      border-radius: 50px;\r\n      display: flex;\r\n      align-items: center;\r\n      font-weight: 700;\r\n      font-size: 1.25rem;\r\n      color: ${p => p.theme.font};\r\n      &:hover {\r\n        cursor: pointer;\r\n        background: ${p =>\r\n          p.menuVisibility\r\n            ? p.theme.theme_toggler_bgclr_active\r\n            : p.theme.theme_toggler_bgclr};\r\n      }\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      .user-profile-button {\r\n        column-gap: 0.6rem;\r\n        padding-left: 0.35rem;\r\n        padding-right: 0.6rem;\r\n        img {\r\n          height: calc(${globalValues.navbar_elements_height} - 0.7rem);\r\n          border-radius: 50%;\r\n          background: ${p => p.theme.theme_toggler_bgclr};\r\n        }\r\n      }\r\n    }\r\n    .log-in-button {\r\n      padding-inline: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Navbar\r\n","import { DB } from '../firebase'\r\nimport { Post } from '../types/interface'\r\n\r\nconst toggleInitialStates = {\r\n  isDarkTheme: false,\r\n  dropDownMenuIsVisible: false,\r\n}\r\n\r\nexport const toggleReducer = (state = toggleInitialStates, action: any) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_DARK_THEME':\r\n      return { ...state, isDarkTheme: !state.isDarkTheme }\r\n    case 'TOGGLE_DROP_DOWN_MENU':\r\n      return { ...state, dropDownMenuIsVisible: !state.dropDownMenuIsVisible }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const isSignedInReducer = (state = false, action: any) => {\r\n  switch (action.type) {\r\n    case 'SIGN_IN':\r\n      return true\r\n    case 'SIGN_OUT':\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const authenModalReducer = (\r\n  state = { action: 'close modals' },\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return { action: 'show login modal' }\r\n    case 'SIGN_UP':\r\n      return { action: 'show signup modal' }\r\n    case 'CREATE_POST':\r\n      return { action: 'show create-post modal' }\r\n    case 'NONE':\r\n      return { action: 'close modals' }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// export const currentUserEmailReducer = (state: string | null, action: any) => {\r\n//   switch (action.type) {\r\n//     case 'SET_CURRENT_USER_EMAIL':\r\n//       return action.payload\r\n//     case 'LOG_OUT':\r\n//       return null\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export const userReducer = (state: any, action: any) => {\r\n//   switch (action.type) {\r\n//     case 'ADD_POST':\r\n//       const newPost: Post = {\r\n//         date: new Date(),\r\n//         content: action.payload,\r\n//         likes: 0,\r\n//         comments: [],\r\n//       }\r\n//       const updatedPosts = { ...state.posts, newPost }\r\n//       DB.setUser('thanhluannguyenxyz@gmail.com', updatedPosts)\r\n//       return { ...state, posts: updatedPosts }\r\n//   }\r\n// }\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\n\r\nexport default function TurnOffModalButton() {\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n  return (\r\n    <StyledSpan\r\n      id='turn-off-modal'\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      onClick={() => dispatchDimBgModal({ type: 'NONE' })}\r\n    >\r\n      +\r\n    </StyledSpan>\r\n  )\r\n}\r\n\r\nconst StyledSpan = styled.span`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1.75rem;\r\n  font-size: 3.5rem;\r\n  transform: rotate(45deg);\r\n  color: ${p => p.theme.font};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebase'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\n\r\nexport default function LogInModal() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const { handleSignIn, toggleState, dispatchDimBgModal } = useContext(Context)\r\n\r\n  const handleLogIn = () => {\r\n    handleSignIn(email, password)\r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Welcome Back!</div>\r\n        <input\r\n          type='text'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          placeholder='Email or Phone Number'\r\n        />\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder='Password'\r\n        />\r\n        <button className='log-in-btn' onClick={handleLogIn}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>New to Faekbook?</span>\r\n        <button\r\n          className='create-new-acc-btn'\r\n          onClick={() => dispatchDimBgModal({ type: 'SIGN_UP' })}\r\n        >\r\n          Create New Account\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 40rem;\r\n  max-width: 100vw;\r\n  display: flex;\r\n  flex-flow: column;\r\n  padding: 1.5rem;\r\n  #top,\r\n  #bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-flow: column;\r\n    row-gap: 1.25rem;\r\n    font-size: 1.75rem;\r\n  }\r\n  #top {\r\n    div {\r\n      align-self: flex-start;\r\n      font-weight: 500;\r\n      font-size: 2.25rem;\r\n      color: #1c1e21;\r\n      margin: 0.5rem auto 0.75rem 1rem;\r\n    }\r\n    input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .log-in-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 100%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n    margin-block: 2rem;\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    .create-new-acc-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 60%;\r\n    }\r\n  }\r\n`\r\n","import { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebase'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\n\r\nexport default function SignUpModal() {\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const history = useHistory()\r\n  const returnToHomepage = () => {\r\n    history.push('/faekbook/')\r\n  }\r\n  const {\r\n    handleSignIn,\r\n    toggleState,\r\n    dispatchDimBgModal,\r\n    setCurrentUserInfoState,\r\n  } = useContext(Context)\r\n  const handleSignUp = () => {\r\n    Authen.signUp(email, password, firstName, lastName)\r\n    Authen.handleSignInOutState(\r\n      () => handleSignIn(email, password),\r\n      () => {\r\n        Authen.signOut()\r\n        Authen.setCurrentUserStateInfoToNull(() => {\r\n          setCurrentUserInfoState(null)\r\n        })\r\n        returnToHomepage()\r\n      }\r\n    )\r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Sign Up</div>\r\n        <div>It's quick and easy</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <div className='full-name'>\r\n          <input\r\n            type='text'\r\n            placeholder='First name'\r\n            value={firstName}\r\n            onChange={e => setFirstName(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Last name'\r\n            value={lastName}\r\n            onChange={e => setLastName(e.target.value)}\r\n          />\r\n        </div>\r\n        <input\r\n          type='email'\r\n          placeholder='Email'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        ></input>\r\n        <input\r\n          type='password'\r\n          placeholder='New password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button className='sign-up' onClick={handleSignUp}>\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>Already have an account?</span>\r\n        <button onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 45rem;\r\n  max-width: 100vw;\r\n  #top,\r\n  #middle,\r\n  #bottom {\r\n    padding: 1.5rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 1rem;\r\n    align-items: center;\r\n    & button {\r\n      ${globalValues.ButtonCSS};\r\n    }\r\n  }\r\n  #top {\r\n    align-items: flex-start;\r\n    div:first-of-type {\r\n      font-weight: 600;\r\n      font-size: 3rem;\r\n      color: #1c1e21;\r\n    }\r\n    div:last-of-type {\r\n      color: #6d747c;\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  #middle {\r\n    font-size: 1.5rem;\r\n    & input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .full-name {\r\n      width: 100%;\r\n      display: flex;\r\n      column-gap: 0.75rem;\r\n    }\r\n    button {\r\n      margin-top: 1.5rem;\r\n    }\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    button {\r\n      font-size: 1.5rem;\r\n      width: 50%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","export default function BlueBgLikeIcon() {\r\n  return (\r\n    <img src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 16 16'%3e%3cdefs%3e%3clinearGradient id='a' x1='50%25' x2='50%25' y1='0%25' y2='100%25'%3e%3cstop offset='0%25' stop-color='%2318AFFF'/%3e%3cstop offset='100%25' stop-color='%230062DF'/%3e%3c/linearGradient%3e%3cfilter id='c' width='118.8%25' height='118.8%25' x='-9.4%25' y='-9.4%25' filterUnits='objectBoundingBox'%3e%3cfeGaussianBlur in='SourceAlpha' result='shadowBlurInner1' stdDeviation='1'/%3e%3cfeOffset dy='-1' in='shadowBlurInner1' result='shadowOffsetInner1'/%3e%3cfeComposite in='shadowOffsetInner1' in2='SourceAlpha' k2='-1' k3='1' operator='arithmetic' result='shadowInnerInner1'/%3e%3cfeColorMatrix in='shadowInnerInner1' values='0 0 0 0 0 0 0 0 0 0.299356041 0 0 0 0 0.681187726 0 0 0 0.3495684 0'/%3e%3c/filter%3e%3cpath id='b' d='M8 0a8 8 0 00-8 8 8 8 0 1016 0 8 8 0 00-8-8z'/%3e%3c/defs%3e%3cg fill='none'%3e%3cuse fill='url(%23a)' xlink:href='%23b'/%3e%3cuse fill='black' filter='url(%23c)' xlink:href='%23b'/%3e%3cpath fill='white' d='M12.162 7.338c.176.123.338.245.338.674 0 .43-.229.604-.474.725a.73.73 0 01.089.546c-.077.344-.392.611-.672.69.121.194.159.385.015.62-.185.295-.346.407-1.058.407H7.5c-.988 0-1.5-.546-1.5-1V7.665c0-1.23 1.467-2.275 1.467-3.13L7.361 3.47c-.005-.065.008-.224.058-.27.08-.079.301-.2.635-.2.218 0 .363.041.534.123.581.277.732.978.732 1.542 0 .271-.414 1.083-.47 1.364 0 0 .867-.192 1.879-.199 1.061-.006 1.749.19 1.749.842 0 .261-.219.523-.316.666zM3.6 7h.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-.8a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6z'/%3e%3c/g%3e%3c/svg%3e\" alt='like-icon'/>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport myAvatar from '../../utils/images/picture_of_myself.jpg'\r\nimport { BsThreeDots } from 'react-icons/bs'\r\nimport defaultPhoto from '../../utils/images/default_user.png'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport { AiFillLike } from 'react-icons/ai'\r\nimport { GoComment } from 'react-icons/go'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { format } from 'date-fns'\r\nimport BlueBgLikeIcon from '../../utils/BlueBgLikeIcon'\r\nimport Comment from './Comment'\r\nimport defaultAvatar from '../../utils/images/default_user.png'\r\n\r\nconst Post: React.FC<{\r\n  full_name: string\r\n  avatar: string\r\n  date: string\r\n  content: string\r\n  likes: Array<string>\r\n}> = ({ full_name, avatar, date, content, likes }) => {\r\n  const { currentUserInfoState, toggleState } = useContext(Context)\r\n  const [isLikedByCurrentUser, setIsLiked] = useState<boolean>()\r\n  const [hasAtLeastOneLike, setHasAtLeastOneLike] = useState<boolean>()\r\n  // const [isShowingComments, setIsShowingComments] = useState(false)\r\n  useEffect(() => {\r\n    if (currentUserInfoState) {\r\n      likes.includes(currentUserInfoState.auth.email)\r\n        ? setIsLiked(true)\r\n        : setIsLiked(false)\r\n    } else setIsLiked(false)\r\n    likes.length >= 1 ? setHasAtLeastOneLike(true) : setHasAtLeastOneLike(false)\r\n  })\r\n  return (\r\n    <StyledSection\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      isLikedByCurrentUser={isLikedByCurrentUser ? 1 : 0}\r\n    >\r\n      <div id='user-info'>\r\n        <img src={avatar} alt='avatar' />\r\n        <div className='info'>\r\n          <div className='name'>{full_name}</div>\r\n          <div className='time'>\r\n            {/* {format(date, 'MMM d')} */}\r\n            {date}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <main id='content'>{content}</main>\r\n      {hasAtLeastOneLike && (\r\n        <div id='likes'>\r\n          <BlueBgLikeIcon />\r\n          <span>\r\n            {likes.length} {likes}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      <div id='like-comment'>\r\n        <div className='like'>\r\n          <AiFillLike className='icon' />\r\n          <span>Like</span>\r\n        </div>\r\n        <div className='comments'>\r\n          <GoComment className='icon' />\r\n          <span>View Comments</span>\r\n        </div>\r\n      </div>\r\n      {/* <div id='comments'>\r\n        <Comment\r\n          username='Thanh Luan Nguyen'\r\n          content='Lo rem ip sum dol or sit am et cons ect etur adi pis icing elit. Eaque, ten etur rei cie ndis! Vero ut co nsequ untur totam culpa num quam cupi d itate, qui bu sdam delen iti vel eos dolor emque assu me nda dolorum ad sint per fer endis! Eaque, repudia ndae?'\r\n          likes={2}\r\n        />\r\n        <Comment username='Thanh Luan Nguyen' content='lorem ipsun' likes={2} />\r\n      </div> */}\r\n      <div id='comment-input'>\r\n        <img\r\n          src={\r\n            currentUserInfoState ? currentUserInfoState.avatar : defaultAvatar\r\n          }\r\n          alt='avatar'\r\n        />\r\n        <input placeholder='Write a comment...'></input>\r\n      </div>\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled('section')<{\r\n  isDarkTheme: number\r\n  isLikedByCurrentUser: number\r\n}>`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font_lighter};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  padding-bottom: 1.5rem;\r\n  #user-info {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n    }\r\n    .info {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: space-around;\r\n      height: 3.5rem;\r\n      .name {\r\n        font-size: 1.5rem;\r\n        font-weight: 700;\r\n        color: ${p => p.theme.font};\r\n      }\r\n      .time {\r\n      }\r\n    }\r\n  }\r\n  #content {\r\n    font-size: 1.5rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n  }\r\n  #likes {\r\n    padding: 1.5rem 1.5rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 0.5rem;\r\n    img {\r\n      height: 1.75rem;\r\n      width: 1.75rem;\r\n    }\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n  #like-comment {\r\n    border-block: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')} 1px solid;\r\n    margin-top: 1.5rem;\r\n    padding: 0.5rem 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    column-gap: 0.5rem;\r\n    .like,\r\n    .comments {\r\n      height: 3.25rem;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      width: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      column-gap: 0.75rem;\r\n      background-color: ${p => p.theme.main_bgclr};\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n      .icon {\r\n        font-size: 1.75rem;\r\n      }\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: ${p => (p.isDarkTheme ? '#64646471' : '#ebebebae')};\r\n      }\r\n    }\r\n    .like {\r\n      color: ${p => p.isLikedByCurrentUser && '#036ee2'};\r\n    }\r\n  }\r\n  #comments {\r\n    padding: 1.5rem 1.5rem 0;\r\n    margin-bottom: -0.75rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 0.75rem;\r\n  }\r\n  #comment-input {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 3.5rem;\r\n      width: 3.5rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n    }\r\n    input {\r\n      height: 3.5rem;\r\n      color: ${p => p.theme.font};\r\n      border: none;\r\n      outline: none;\r\n      flex-grow: 1;\r\n      padding-left: 1.25rem;\r\n      font-size: 1.5rem;\r\n      border-radius: 2rem;\r\n      background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n      display: flex;\r\n      align-items: center;\r\n      &:hover {\r\n        cursor: text;\r\n        filter: brightness(${p => (p.isDarkTheme ? '1.1' : '0.95')});\r\n      }\r\n      &::placeholder {\r\n        color: ${p => p.theme.font_lighter};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Post\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport myAvatar from '../../utils/images/picture_of_myself.jpg'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport defaultAvatar from '../../utils/images/default_user.png'\r\n\r\nexport default function WhatsOnYourMind() {\r\n  const { currentUserInfoState, toggleState, dispatchDimBgModal } =\r\n    useContext(Context)\r\n  return (\r\n    <StyledSection theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <img\r\n        src={currentUserInfoState ? currentUserInfoState.avatar : defaultAvatar}\r\n        alt='avatar'\r\n      />\r\n      <div onClick={() => dispatchDimBgModal({ type: 'CREATE_POST' })}>\r\n        What's on your mind?\r\n      </div>\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 1rem;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  img {\r\n    height: 4rem;\r\n    width: 4rem;\r\n    background: ${p => p.theme.theme_toggler_bgclr};\r\n  }\r\n  div {\r\n    color: ${p => p.theme.font_lighter};\r\n    flex-grow: 1;\r\n    padding-left: 2rem;\r\n    font-size: 1.5rem;\r\n    height: 4rem;\r\n    border-radius: 2rem;\r\n    background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    &:hover {\r\n      cursor: pointer;\r\n      filter: brightness(${p => (p.theme.type === 'dark' ? '1.1' : '0.95')});\r\n    }\r\n  }\r\n`\r\n","import { fromUnixTime } from 'date-fns'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Authen, DB } from '../../firebase'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport Post from './Post'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\n\r\nconst MainPage: React.FC<any> = () => {\r\n  const { toggleState, isSignedIn } = useContext(Context)\r\n\r\n  const [posts, setPosts] = useState<any>()\r\n  useEffect(() => {\r\n    DB.getPosts().then(posts => {\r\n      if (posts) {\r\n        posts.reverse()\r\n        const allPosts = posts.map(p => (\r\n          <Post\r\n            key={p.date.seconds}\r\n            full_name={p.full_name}\r\n            avatar={p.avatar}\r\n            date={fromUnixTime(p.date.seconds).toString()}\r\n            content={p.content}\r\n            likes={p.likes}\r\n          />\r\n        ))\r\n        setPosts(allPosts)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      {isSignedIn && <WhatsOnYourMind />}\r\n      {posts}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  color: ${p => p.theme.font};\r\n`\r\n\r\nexport default MainPage\r\n","export default __webpack_public_path__ + \"static/media/default_cover_photo.cfb7a6a2.gif\";","import React, { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport { AiOutlineCamera, AiFillCamera } from 'react-icons/ai'\r\nimport defaultCoverPhoto from '../../utils/images/default_cover_photo.gif'\r\nimport defaultAvatar from '../../utils/images/default_user.png'\r\nimport ColorThief from 'colorthief'\r\nimport useWindowSize, { Size } from '../../hooks/useWindowSize'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\nimport { Authen, DB } from '../../firebase'\r\nimport Post from './Post'\r\nimport { fromUnixTime } from 'date-fns'\r\n\r\nconst ProfilePage: React.FC<any> = () => {\r\n  const { currentEmail, setCurrentEmail, currentUserInfoState, toggleState } =\r\n    useContext(Context)\r\n  const [bgGradient, setBgGradient] = useState<string>('')\r\n  const [editCoverPhotoHidden, setEditCoverPhotoHidden] = useState(false)\r\n  const size: Size = useWindowSize()\r\n\r\n  /* get dorminant color of cover photo */\r\n  useEffect(() => {\r\n    const colorThief = new ColorThief()\r\n    const img: any = document.querySelector('#get-dominant-clr')\r\n    img.onload = () => {\r\n      const color = colorThief.getColor(img).toString()\r\n      setBgGradient(color)\r\n    }\r\n  }, [])\r\n\r\n  /* width size query for the edit cover photo button */\r\n  useEffect(() => {\r\n    const { width } = size\r\n    if (width !== undefined && width <= 900) {\r\n      setEditCoverPhotoHidden(true)\r\n    } else setEditCoverPhotoHidden(false)\r\n  }, [size])\r\n\r\n  useEffect(() => {\r\n    const email = Authen.getUserEmail()\r\n    setCurrentEmail(email)\r\n  }, [])\r\n\r\n  /* get current user posts */\r\n  const [posts, setPosts] = useState<any>()\r\n  useEffect(() => {\r\n    DB.getPosts(currentEmail).then(posts => {\r\n      if (posts) {\r\n        posts.reverse()\r\n        const currentUserPosts = posts.map(p => (\r\n          <Post\r\n            key={p.date.seconds}\r\n            full_name={p.full_name}\r\n            avatar={p.avatar}\r\n            date={fromUnixTime(p.date.seconds).toString()}\r\n            content={p.content}\r\n            likes={p.likes}\r\n          />\r\n        ))\r\n        setPosts(currentUserPosts)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  /* get current user info */\r\n\r\n  const renderBgGradientColor = (\r\n    <img\r\n      src={\r\n        currentUserInfoState\r\n          ? currentUserInfoState.cover_photo\r\n          : defaultCoverPhoto\r\n      }\r\n      alt='colorthief'\r\n      id='get-dominant-clr'\r\n      style={{ display: 'none' }}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      coverPhoto={\r\n        currentUserInfoState\r\n          ? currentUserInfoState.cover_photo\r\n          : defaultCoverPhoto\r\n      }\r\n      bgGradient={bgGradient}\r\n      editCoverPhotoHidden={editCoverPhotoHidden}\r\n    >\r\n      <header>\r\n        <div id='cover-picture'>\r\n          {renderBgGradientColor}\r\n          <div className='avatar-picture'>\r\n            <img\r\n              src={\r\n                currentUserInfoState\r\n                  ? currentUserInfoState.avatar\r\n                  : defaultAvatar\r\n              }\r\n              alt='avatar'\r\n            />\r\n            <div className='update-avatar'>\r\n              {toggleState.isDarkTheme ? (\r\n                <AiFillCamera className='icon' style={{ fill: 'white' }} />\r\n              ) : (\r\n                <AiOutlineCamera className='icon' />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className='edit-cover-photo'>\r\n            <AiFillCamera className='icon' /> <span>Edit Cover Photo</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div id='intro'>\r\n          <div className='name'>\r\n            {currentUserInfoState\r\n              ? `${currentUserInfoState.first_name} ${currentUserInfoState.last_name}`\r\n              : 'default name'}\r\n          </div>\r\n          <div className='short-description'>\r\n            {currentUserInfoState && currentUserInfoState.short_bio}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        <WhatsOnYourMind />\r\n        {posts}\r\n      </main>\r\n      {/* <div className='dummyText'></div> */}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  coverPhoto: any\r\n  bgGradient: string\r\n  editCoverPhotoHidden: boolean\r\n}>`\r\n  color: ${p => p.theme.font};\r\n  padding-bottom: 2rem;\r\n  header {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(${p => p.bgGradient}) 0%,\r\n      ${p => p.theme.main_bgclr} 50%\r\n    );\r\n    #cover-picture {\r\n      position: relative;\r\n      background-image: url(${p => p.coverPhoto});\r\n      background-size: cover;\r\n      background-position: 50% 40%;\r\n      width: 90rem;\r\n      max-width: 100%;\r\n      aspect-ratio: 7/3;\r\n      margin-inline: auto;\r\n      border-radius: 0 0 10px 10px;\r\n      .avatar-picture {\r\n        position: absolute;\r\n        bottom: -2rem;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        width: 15rem;\r\n        height: 15rem;\r\n        padding: 0.5rem;\r\n        background-color: ${p => p.theme.main_bgclr};\r\n        border-radius: 50%;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n        }\r\n        .update-avatar {\r\n          position: absolute;\r\n          right: 1.1rem;\r\n          bottom: 1.1rem;\r\n          padding: 0.5rem;\r\n          border-radius: 50%;\r\n          background-color: ${p => p.theme.avatar_pic_cam_icon_bgclr};\r\n          &:hover {\r\n            cursor: pointer;\r\n            filter: brightness(1.1);\r\n          }\r\n          .icon {\r\n            height: 2rem;\r\n            width: 2rem;\r\n          }\r\n        }\r\n      }\r\n      .edit-cover-photo {\r\n        color: black;\r\n        position: absolute;\r\n        right: 2rem;\r\n        bottom: 3rem;\r\n        background-color: white;\r\n        padding: 0.5rem 1rem;\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap: 1rem;\r\n        border-radius: 7px;\r\n        &:hover {\r\n          cursor: pointer;\r\n          filter: brightness(0.95);\r\n        }\r\n        .icon {\r\n          height: 2rem;\r\n          width: 2rem;\r\n        }\r\n        span {\r\n          font-size: 1.2rem;\r\n          font-weight: 700;\r\n          display: ${p => (p.editCoverPhotoHidden ? 'none' : 'block')};\r\n        }\r\n      }\r\n    }\r\n    #intro {\r\n      padding: 3rem 2rem 2rem;\r\n      text-align: center;\r\n      .name {\r\n        font-size: 3.5rem;\r\n        font-weight: 800;\r\n      }\r\n      .short-description {\r\n        padding-top: 1rem;\r\n        font-size: 1.75rem;\r\n      }\r\n    }\r\n  }\r\n  main {\r\n  }\r\n`\r\n\r\nexport default ProfilePage\r\n","import { useState, useEffect } from 'react'\r\n// Define general type for useWindowSize hook, which includes width and height\r\nexport interface Size {\r\n  width: number | undefined\r\n  height: number | undefined\r\n}\r\n\r\n// Usage\r\n// function App() {\r\n//   const size: Size = useWindowSize()\r\n//   return (\r\n//     <div>\r\n//       {size.width}px / {size.height}px\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// Hook\r\nexport default function useWindowSize(): Size {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<Size>({\r\n    width: undefined,\r\n    height: undefined,\r\n  })\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n    }\r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize)\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize()\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, []) // Empty array ensures that effect is only run on mount\r\n  return windowSize\r\n}\r\n","import { useContext } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport { FaMoon, FaSun } from 'react-icons/fa'\r\nimport { GoSignOut, GoSignIn } from 'react-icons/go'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { themes } from '../../utils/themes'\r\nimport defaultAvatar from '../../utils/images/default_user.png'\r\nimport { Authen } from '../../firebase'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst DropDownMenu: React.FC<any> = () => {\r\n  const {\r\n    currentUserInfoState,\r\n    toggleState,\r\n    isSignedIn,\r\n    dispatchToggle,\r\n    dispatchDimBgModal,\r\n    handleSignOut,\r\n  } = useContext(Context)\r\n  const history = useHistory()\r\n\r\n  const returnToHomepage = () => {\r\n    history.push('/faekbook/')\r\n  }\r\n\r\n  const avatar = (\r\n    <img\r\n      src={\r\n        isSignedIn && currentUserInfoState\r\n          ? currentUserInfoState.avatar\r\n          : defaultAvatar\r\n      }\r\n      alt='avatar'\r\n    />\r\n  )\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isSignedIn={isSignedIn ? 1 : 0}\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <Link\r\n        to='/faekbook/profile'\r\n        onClick={() =>\r\n          isSignedIn && dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n        }\r\n      >\r\n        <div className='profile'>\r\n          {avatar}\r\n          <div className='name'>\r\n            <span>\r\n              {isSignedIn && currentUserInfoState\r\n                ? `${currentUserInfoState.first_name} ${currentUserInfoState.last_name}`\r\n                : 'User'}\r\n            </span>\r\n            <span>{isSignedIn ? 'See your profile' : 'Please log in'}</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className='divider' />\r\n\r\n      <div\r\n        className='theme-toggler'\r\n        onClick={() => {\r\n          dispatchToggle({ type: 'TOGGLE_DARK_THEME' })\r\n          dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n        }}\r\n      >\r\n        <div className='icon'>\r\n          {toggleState.isDarkTheme ? <FaSun /> : <FaMoon />}\r\n        </div>\r\n        Change to {toggleState.isDarkTheme ? 'Light' : 'Dark'} theme\r\n      </div>\r\n\r\n      <div\r\n        className='log-in-out'\r\n        onClick={() => {\r\n          dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          isSignedIn\r\n            ? (() => {\r\n                handleSignOut()\r\n                returnToHomepage()\r\n              })()\r\n            : dispatchDimBgModal({ type: 'LOG_IN' })\r\n        }}\r\n      >\r\n        <div className='icon'>{isSignedIn ? <GoSignOut /> : <GoSignIn />}</div>\r\n        Log {isSignedIn ? 'Out' : 'In'}\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{ isSignedIn: number }>`\r\n  position: fixed;\r\n  right: 1rem;\r\n  top: 5rem;\r\n  width: 30rem;\r\n  padding: 1rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  /* profile, theme-toggler and log-in-out */\r\n  a > .profile,\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    &:hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n  }\r\n  /* profile */\r\n  a {\r\n    text-decoration: none;\r\n    pointer-events: ${p => (p.isSignedIn ? 'auto' : 'none')};\r\n    .profile {\r\n      opacity: ${p => (p.isSignedIn ? '100%' : '30%')};\r\n      img {\r\n        border-radius: 50%;\r\n        height: 5rem;\r\n        background: ${p => p.theme.theme_toggler_bgclr};\r\n      }\r\n      .name {\r\n        display: flex;\r\n        flex-flow: column;\r\n        justify-content: space-evenly;\r\n        span:first-of-type {\r\n          font-size: 1.3rem;\r\n          font-weight: 600;\r\n          color: ${p => p.theme.font};\r\n        }\r\n        span:last-of-type {\r\n          font-size: 1.1375rem;\r\n          color: ${p => p.theme.font_lighter};\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .divider {\r\n    margin-block: 0.5rem;\r\n    height: 2px;\r\n    width: 100%;\r\n    background: ${p => p.theme.divider_clr};\r\n  }\r\n  /* theme-toggler and log-in-out */\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    .icon {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      font-size: 2rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n    }\r\n  }\r\n  .theme-toggler {\r\n    .icon {\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n  .log-in-out {\r\n    .icon {\r\n      position: relative;\r\n      svg {\r\n        position: absolute;\r\n        top: 0.7rem;\r\n        left: ${p => (p.isSignedIn ? '0.7rem' : '0.5rem')};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default DropDownMenu\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\nimport myAvatar from '../../utils/images/picture_of_myself.jpg'\r\nimport { themes } from '../../utils/themes'\r\nimport defaultAvatar from '../../utils/images/default_user.png'\r\n\r\nexport default function CreatePost() {\r\n  const [textLength, setTextLength] = useState<number>(0)\r\n  const { currentUserInfoState, toggleState } = useContext(Context)\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      textSmallSize={textLength > 40 ? 1 : 0}\r\n      postButtonActivated={textLength > 0 ? 1 : 0}\r\n    >\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Create Post</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <img\r\n          src={\r\n            currentUserInfoState ? currentUserInfoState.avatar : defaultAvatar\r\n          }\r\n          alt='my_avatar'\r\n        />\r\n        <div className='name'>\r\n          {currentUserInfoState &&\r\n            `${currentUserInfoState.first_name} ${currentUserInfoState.last_name}`}\r\n        </div>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"What's on your mind?\"\r\n        onChange={e => setTextLength(e.target.value.length)}\r\n      />\r\n      <div className='post-button'>\r\n        <button>Post</button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  isDarkTheme: number\r\n  textSmallSize: number\r\n  postButtonActivated: number\r\n}>`\r\n  width: 50rem;\r\n  max-width: 100vw;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  border-radius: 10px;\r\n\r\n  #middle,\r\n  textarea,\r\n  .post-button {\r\n    padding: 1.5rem 1.5rem;\r\n  }\r\n\r\n  #top {\r\n    line-height: 5.5rem;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    font-weight: 700;\r\n    height: 5.5rem;\r\n  }\r\n  #middle {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n    }\r\n    .name {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    padding-top: 0;\r\n    background-color: inherit;\r\n    font-family: inherit;\r\n    font-size: ${p => (p.textSmallSize ? '1.5rem' : '2.5rem')};\r\n    display: block;\r\n    border: none;\r\n    outline: none;\r\n    width: 100%;\r\n    min-height: 15rem;\r\n    resize: none;\r\n    color: ${p => p.theme.font};\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.75rem;\r\n      border-radius: 3px;\r\n      background-color: rgba(195, 195, 195, 0.3);\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background: rgba(114, 114, 114, 0.5);\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .post-button {\r\n    button {\r\n      width: 100%;\r\n      height: 3.5rem;\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      margin-inline: auto;\r\n      border: none;\r\n      color: ${p => (p.postButtonActivated ? 'white' : '#858686')};\r\n      background-color: ${p =>\r\n        p.postButtonActivated\r\n          ? '#2D88FF'\r\n          : p.isDarkTheme\r\n          ? '#505151'\r\n          : '#e4e6eb'};\r\n      &:hover {\r\n        cursor: ${p => (p.postButtonActivated ? 'pointer' : 'not-allowed')};\r\n      }\r\n    }\r\n  }\r\n\r\n  .divider {\r\n    background-color: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')};\r\n    margin-inline: auto;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import styled, { css } from 'styled-components'\n// import Body from './components/Body/Body'\nimport Navbar from './components/Navbar'\nimport { useEffect, useReducer, useState } from 'react'\nimport {\n  toggleReducer,\n  isSignedInReducer,\n  authenModalReducer,\n} from './reducers/reducers'\nimport Context from './utils/Context'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport LogInModal from './components/Modals/LogInModal'\nimport SignUpModal from './components/Modals/SignUpModal'\nimport { themes } from './utils/themes'\nimport MainPage from './components/Body/MainPage'\nimport ProfilePage from './components/Body/ProfilePage'\nimport DropDownMenu from './components/Modals/DropDownMenu'\nimport CreatePost from './components/Modals/CreatePost'\nimport { Hiep, Luan, Long, posts } from './types/interface'\nimport { Authen, DB } from './firebase'\nimport { getUnixTime } from 'date-fns'\n\nconst App: React.FC<any> = () => {\n  const [toggleState, dispatchToggle] = useReducer(toggleReducer, {\n    isDarkTheme: false,\n    dropDownMenuIsVisible: false,\n  })\n\n  const [isSignedIn, dispatchSignInOut] = useReducer(isSignedInReducer, false)\n\n  const [dimBgModal, dispatchDimBgModal] = useReducer(authenModalReducer, {\n    action: 'close modals',\n  })\n\n  const renderModal = (action: string) => {\n    switch (action) {\n      case 'show login modal':\n        return <LogInModal />\n      case 'show signup modal':\n        return <SignUpModal />\n      case 'show create-post modal':\n        return <CreatePost />\n      case 'close modals':\n        return\n    }\n  }\n\n  const [currentEmail, setCurrentEmail] = useState<any>()\n  useEffect(() => {\n    const email = Authen.getUserEmail()\n    if (email) {\n      setCurrentEmail(email)\n    }\n  })\n  const [currentUserInfoState, setCurrentUserInfoState] = useState<any>()\n  useEffect(() => {\n    if (currentEmail) {\n      DB.getUser(currentEmail).then(currentUser =>\n        setCurrentUserInfoState(currentUser)\n      )\n    } else setCurrentUserInfoState(null)\n  }, [currentEmail])\n\n  const handleSignIn = (email: string, password: string) => {\n    Authen.signIn(email, password)\n    setCurrentEmail(email)\n    dispatchSignInOut({ type: 'SIGN_IN' })\n    dispatchDimBgModal({ type: 'NONE' })\n  }\n\n  const handleSignOut = () => {\n    Authen.signOut()\n    Authen.setCurrentUserStateInfoToNull(() => {\n      setCurrentUserInfoState(null)\n    })\n  }\n\n  useEffect(() => {\n    // for (let post of posts) {\n    //   DB.setPost(getUnixTime(post.date).toString(), post)\n    // }\n    // DB.getPosts(true, currentUser)\n    // DB.getPosts()\n    // DB.setUser('long@gmail.com', Long)\n    // DB.setUser('hiep@gmail.com', Hiep)\n    // Authen.signUp('consutoraku@gmail.com', 'thanhLuan123')\n    // Authen.signUp('thanhluannguyenxyz@gmail.com', 'iwiwlkiwljoo')\n    // Authen.getUserData('HuICL90OPLUfmvXJHE6L6bwSyFi2')\n    // Authen.getUserData('thanhluannguyenxyz@gmail.com')\n    // Authen.signIn('thanhluannguyenxyz@gmail.com', 'iwiwlkiwljoo')\n    // Authen.signOut()\n  }, [])\n\n  return (\n    <Context.Provider\n      value={{\n        currentEmail,\n        setCurrentEmail,\n        currentUserInfoState,\n        setCurrentUserInfoState,\n        handleSignIn,\n        toggleState,\n        dispatchToggle,\n        isSignedIn,\n        dispatchSignInOut,\n        dimBgModal,\n        dispatchDimBgModal,\n        handleSignOut,\n      }}\n    >\n      <Router>\n        <StyledDiv\n          theme={toggleState.isDarkTheme === true ? themes.dark : themes.light}\n          authenType={dimBgModal.action}\n          toggleState={toggleState}\n          onClick={() =>\n            toggleState.dropDownMenuIsVisible &&\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\n          }\n        >\n          <Navbar />\n          <Switch>\n            <Route exact path='/faekbook/' component={MainPage} />\n            <Route exact path='/faekbook/profile' component={ProfilePage} />\n          </Switch>\n          {/* modals */}\n          <div className='dim-bg-modal'>{renderModal(dimBgModal.action)}</div>\n          {toggleState.dropDownMenuIsVisible && <DropDownMenu />}\n        </StyledDiv>\n      </Router>\n    </Context.Provider>\n  )\n}\n\nconst Screen = css`\n  content: '';\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  z-index: 100;\n`\n\nconst StyledDiv = styled('div')<{ authenType: string; toggleState: any }>`\n  position: relative;\n  background: ${p => p.theme.body};\n  min-height: 100vh;\n  &::after {\n    ${p =>\n      (p.authenType !== 'close modals' || p.toggleState.createPostIsVisible) &&\n      Screen}\n    background-color: ${p =>\n      p.theme.type === 'dark' ? '#00000063' : '#ffffff92'};\n  }\n  .dim-bg-modal {\n    position: fixed;\n    background: white;\n    border-radius: 10px;\n    top: 15rem;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 200;\n    border-radius: 10px;\n    box-shadow: ${p => p.theme.bxShdw};\n  }\n`\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/reset.css'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n       box-sizing: border-box;\n    }\n    html {\n      font-size: 70%;\n      @media (min-width: 768px) {\n        font-size: 80%;\n      }\n      @media (min-width: 1024px) {\n        font-size: 90%;\n      }\n      @media (min-width: 1200px) {\n        font-size: 100%;\n      }\n    }\n    \n    body {\n      font-size: 1em;\n      font-family: 'Roboto', sans-serif;\n      user-select: none;\n    }\n\n    img {\n      border-radius: 50%;\n    }\n  `\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}