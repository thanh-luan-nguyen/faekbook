{"version":3,"sources":["styles/globalValues.ts","utils/Context.ts","utils/themes.ts","utils/defaultPhotos.ts","components/Navbar.tsx","reducers.ts","firebaseConfig.ts","utils/TurnOffModalButton.tsx","components/Modals/LogInModal.tsx","components/Modals/SignUpModal.tsx","utils/ShowMoreButton.tsx","utils/BlueBgLikeIcon.tsx","components/Modals/CommentModal.tsx","components/Body/WriteAComment.tsx","components/Modals/ViewLikes.tsx","components/Body/Comment.tsx","components/Modals/PostModal.tsx","components/Body/Post.tsx","components/Body/WhatsOnYourMind.tsx","components/Body/MainPage.tsx","components/Body/ProfilePage.tsx","utils/useWindowSize.ts","components/Modals/DropDownMenu.tsx","components/Modals/CreatePost.tsx","components/Modals/EditPostModal.tsx","App.tsx","index.tsx"],"names":["globalValues","navbar_elements_height","navbar_column_gap","navbar_height","dropdown_menu_bdr_rds","ButtonCSS","css","InputCSS","Context","createContext","themes","light","type","bxShdw","main_bgclr","nav_btm_brdr_clr","font","font_lighter","divider_clr","hover","icon_color","theme_toggler_bgclr","theme_toggler_bgclr_active","theme_toggler_icon_active","body","like_icon_bgclr","avatar_pic_cam_icon_bgclr","whats_on_ur_mind_bgclr","dark","imageObjectSettings","customizedScrollBar","p","theme","defaultAvatar","rotation","keyframes","StyledNav","styled","bxShadw","menuVisibility","Navbar","useContext","toggleState","isUserSignedIn","CUAvatarURL","currentUserInfo","dispatchToggle","dispatchDimBgModal","userProfileButton","to","uid","className","src","undefined","alt","first_name","logInButton","onClick","isDarkTheme","dropDownMenuIsVisible","e","stopPropagation","toggleReducer","state","action","authenModalReducer","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","Authen","email","password","firstName","lastName","callback","createUserWithEmailAndPassword","then","userCredential","console","log","user","newUser","last_name","short_bio","is_dark_theme","DB","setUser","signIn","catch","err","alert","code","message","signInWithEmailAndPassword","signOut","payload","setDoc","doc","updateDoc","q","setStateCallback","onSnapshot","docs","docsArray","forEach","push","data","id","liker","liked","collection","getDoc","a","likes","likesUserIDs","map","like","userID","getDownloadURL","ref","avatarURL","userSnapshot","includes","splice","indexOf","full_name","Storage","setAvatarURL","setCoverImageURL","avatarRef","coverImageRef","url","TurnOffModalButton","StyledSpan","span","LogInModal","useState","setEmail","setPassword","StyledDiv","value","onChange","target","placeholder","div","SignUpModal","setFirstName","setLastName","signUp","StyledButton","ShowMoreButton","addMorePosts","BlueBgLikeIcon","setIsShowingViewLikes","CommentModal","commentID","setIsEditting","setIsShowingModal","modalNode","useRef","useEffect","document","addEventListener","handleClick","removeEventListener","current","deleteDoc","StyledInput","WriteAComment","content","edittingContent","setEdittingContent","onKeyDown","keyCode","autoFocus","onFocus","currentTarget","setSelectionRange","length","isComment","ViewLikes","renderLikesInfo","hasLikes","isLikedByCU","Comment","commenterUID","date","commentAvatar","setCommentAvatar","userInfo","setUserInfo","isShowingModal","isShowingViewLikes","setIsLiked","isEditting","updatePhotoURL","userSnap","format","fromUnixTime","seconds","PostModal","postID","setCBEPostId","StyledSection","isShowingComments","bgGradient","hasComments","isLikedByCurrentUser","Post","photo","postAvatarURL","setPostAvatar","setIsShowingComments","commentInput","setCommentInput","comments","setComments","threeDotsNode","postsRef","query","where","orderBy","unsub","setSnapshotListener","renderComments","cmt","commenterID","imgRef","setBgGradient","colorThief","ColorThief","onload","color","getColor","toString","renderPhoto","encodeURIComponent","crossOrigin","onSubmit","preventDefault","newComment","Timestamp","fromDate","Date","addDoc","WhatsOnYourMind","section","MainPage","allPosts","setAllPosts","postsNumLimit","setPostsNumLimit","hasShownAllPosts","setHasShownAllPosts","getDocs","posts","size","limit","renderPosts","fullname","editCoverPhotoHidden","ProfilePage","setCUAvatarURL","useParams","userCoverImgURL","userAvatarURL","setUserAvatarURL","userPosts","setUserPosts","setEditCoverPhotoHidden","isEdittingBio","setIsEdittingBio","isEdittingBioContent","setIsEdittingBioContent","bio","setBio","fileRef","is_profile_page","width","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","useWindowSize","img","querySelector","googleProxyURL","userCover","defaultCover","renderCoverPhoto","updatePhoto","file","files","isAvatar","folderName","deleteObject","uploadBytes","accept","style","display","fill","rows","maxLength","updateUserInfo","DropDownMenu","history","useHistory","renderAvatar","CreatePost","setContent","previewPhoto","setPreviewPhoto","addPostToDB","post","textSmallSize","postButtonActivated","URL","createObjectURL","disabled","uuid","EditPostModal","CBEPostID","beforeEdittedContent","isLoaded","setIsLoaded","Screen","authenType","createPostIsVisible","App","setIsUserSignedIn","setCurrentUserInfo","useReducer","dimBgModal","onAuthStateChanged","Provider","postModalIsVisible","exact","path","component","renderModal","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8e315ded.chunk.js","sourcesContent":["import { css } from 'styled-components'\r\n\r\nconst globalValues = {\r\n  navbar_elements_height: '3rem',\r\n  navbar_column_gap: '1rem',\r\n  navbar_height: '4.5rem',\r\n  dropdown_menu_bdr_rds: '10px',\r\n  ButtonCSS: css`\r\n    font-size: inherit;\r\n    border-radius: 0.5rem;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: white;\r\n    background-color: #42b72a;\r\n    width: 100%;\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n  InputCSS: css`\r\n    outline: none;\r\n    border: 1px solid #dddfe2;\r\n    border-radius: 0.5rem;\r\n    width: 100%;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    ::placeholder {\r\n      color: #90949c;\r\n      font-weight: 100;\r\n    }\r\n  `,\r\n}\r\n\r\nexport default globalValues\r\n","import { createContext } from 'react'\r\n\r\n// interface ContextInterface {\r\n//   currentUserEmail: any\r\n//   setCurrentEmail: any\r\n//   currentUserInfoState: any\r\n//   setCurrentUserInfoState: any\r\n//   handleSignIn: any\r\n//   toggleState: any\r\n//   dispatchToggle: any\r\n//   isSignedIn: any\r\n//   dispatchSignInOut: any\r\n//   dimBgModal: any\r\n//   dispatchDimBgModal: any\r\n//   handleSignOut: any\r\n// }\r\n\r\nconst Context = createContext({} as any)\r\n\r\nexport default Context\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const themes = {\r\n  light: {\r\n    type: 'light',\r\n\r\n    bxShdw:\r\n      'rgba(50, 50, 93, 0.25) 0 0 5px -1px, rgba(0, 0, 0, 0.3) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#fff',\r\n    nav_btm_brdr_clr: '#fff',\r\n    // fb_icon: '#000',\r\n    font: '#050505',\r\n    font_lighter: '#65676b',\r\n    // menu\r\n    divider_clr: '#ced0d4',\r\n    hover: '#d4d4d434',\r\n    icon_color: '#1d1f23',\r\n    theme_toggler_bgclr: '#e6e8ed',\r\n    theme_toggler_bgclr_active: '#E7F3FF',\r\n    theme_toggler_icon_active: '#0571ED',\r\n\r\n    // body\r\n    body: '#f0f2f5',\r\n    like_icon_bgclr: '#fff',\r\n    avatar_pic_cam_icon_bgclr: '#e4e6eb',\r\n\r\n    whats_on_ur_mind_bgclr: '#F0F2F5',\r\n  },\r\n  dark: {\r\n    type: 'dark',\r\n\r\n    bxShdw:\r\n      'rgba(255, 255, 255) 0 0 5px -1px, rgba(255, 255, 255) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#242526',\r\n    nav_btm_brdr_clr: '#393a3b',\r\n    // fb_icon: '#fff',\r\n    font: '#e4e6eb',\r\n    font_lighter: '#b0b3b8',\r\n    // menu\r\n    divider_clr: '#3e4042',\r\n    hover: '#ffffff45',\r\n    icon_color: '#e4e6ea',\r\n    theme_toggler_bgclr: '#4e5052',\r\n    theme_toggler_bgclr_active: '#263951',\r\n    theme_toggler_icon_active: '#2D86FF',\r\n    // body\r\n    body: '#18191a',\r\n    like_icon_bgclr: '#3a3b3c',\r\n    avatar_pic_cam_icon_bgclr: '#3a3b3c',\r\n\r\n    whats_on_ur_mind_bgclr: '#3a3b3c',\r\n  },\r\n}\r\n\r\nexport const imageObjectSettings = css`\r\n  aspect-ratio: 1/1;\r\n  object-fit: cover;\r\n  object-position: 50% 20%;\r\n`\r\n\r\nexport const customizedScrollBar = css`\r\n  ::-webkit-scrollbar {\r\n    width: 0.3rem;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${p => p.theme.font_lighter};\r\n    border-radius: 10px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    border-radius: 10px;\r\n    margin-block: 0.5rem;\r\n  }\r\n`\r\n","export const defaultAvatar =\r\n  'https://firebasestorage.googleapis.com/v0/b/faekbook1-aa0f8.appspot.com/o/defaults%2FdefaultAvatar.png?alt=media&token=a153e1b2-261c-4c56-a516-27a85bac7ec6'\r\nexport const defaultCoverImage =\r\n  'https://firebasestorage.googleapis.com/v0/b/faekbook1-aa0f8.appspot.com/o/defaults%2FdefaultCoverImage.gif?alt=media&token=458194b5-739b-4fd8-ae77-13ba5fb5dc13'\r\n","import styled, { keyframes } from 'styled-components'\r\nimport globalValues from '../styles/globalValues'\r\nimport { FaFacebook } from 'react-icons/fa'\r\nimport { MdArrowDropDown } from 'react-icons/md'\r\nimport Context from '../utils/Context'\r\nimport React, { useContext } from 'react'\r\n// import DropDownMenu from './Modals/DropDownMenu'\r\nimport { imageObjectSettings, themes } from '../utils/themes'\r\nimport { Link } from 'react-router-dom'\r\nimport { defaultAvatar } from '../utils/defaultPhotos'\r\n\r\nconst Navbar: React.FC<any> = () => {\r\n  const {\r\n    toggleState,\r\n    isUserSignedIn,\r\n    CUAvatarURL,\r\n    currentUserInfo,\r\n    dispatchToggle,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n\r\n  const userProfileButton = (\r\n    <Link to={`/faekbook/${currentUserInfo?.uid}`}>\r\n      <div className='user-profile-button'>\r\n        <img\r\n          src={isUserSignedIn ? CUAvatarURL || defaultAvatar : undefined}\r\n          alt='avatar'\r\n        />\r\n        {isUserSignedIn && currentUserInfo?.first_name}\r\n      </div>\r\n    </Link>\r\n  )\r\n\r\n  const logInButton = (\r\n    <div\r\n      className='log-in-button'\r\n      onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}\r\n    >\r\n      Log In\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <StyledNav\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      menuVisibility={toggleState.dropDownMenuIsVisible ? 1 : 0}\r\n    >\r\n      <div className='left'>\r\n        <Link to='/faekbook/'>\r\n          <FaFacebook className='fb-icon' />\r\n        </Link>\r\n        <Link to='/faekbook/'>\r\n          <span className='faekbook'>faekbook</span>\r\n        </Link>\r\n      </div>\r\n      <div className='right'>\r\n        {isUserSignedIn ? userProfileButton : logInButton}\r\n        <div\r\n          className='toggle-dropdown-menu'\r\n          onClick={e => {\r\n            e.stopPropagation()\r\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          }}\r\n        >\r\n          <MdArrowDropDown />\r\n        </div>\r\n      </div>\r\n      {/* {menuVisibility && <DropDownMenu />} */}\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nconst rotation = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(359deg);\r\n  }\r\n`\r\n\r\nconst StyledNav = styled('nav')<{ menuVisibility: number }>`\r\n  position: sticky;\r\n  top: 0;\r\n  background: ${p => p.theme.main_bgclr};\r\n  height: ${globalValues.navbar_height};\r\n  box-shadow: ${p => p.theme.bxShadw};\r\n  border-bottom: 1px solid ${p => p.theme.nav_btm_brdr_clr};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-inline: 1rem;\r\n  z-index: 200;\r\n  .left {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    a {\r\n      text-decoration: none;\r\n      .fb-icon,\r\n      .faekbook {\r\n        color: ${p => p.theme.font};\r\n        :hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .fb-icon {\r\n        height: ${globalValues.navbar_elements_height};\r\n        width: ${globalValues.navbar_elements_height};\r\n        animation: ${rotation} 2s infinite linear;\r\n      }\r\n    }\r\n  }\r\n  .right {\r\n    display: flex;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    .toggle-dropdown-menu {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      background: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_bgclr_active\r\n          : p.theme.theme_toggler_bgclr};\r\n      font-size: ${globalValues.navbar_elements_height};\r\n      color: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_icon_active\r\n          : p.theme.icon_color};\r\n      :hover {\r\n        cursor: pointer;\r\n        filter: brightness(${p => (p.theme.type === 'light' ? '0.9' : '1.3')});\r\n      }\r\n    }\r\n    a .user-profile-button,\r\n    .log-in-button {\r\n      height: ${globalValues.navbar_elements_height};\r\n      border-radius: 50px;\r\n      display: flex;\r\n      align-items: center;\r\n      font-weight: 700;\r\n      font-size: 1.25rem;\r\n      color: ${p => p.theme.font};\r\n      :hover {\r\n        cursor: pointer;\r\n        background: ${p =>\r\n          p.menuVisibility\r\n            ? p.theme.theme_toggler_bgclr_active\r\n            : p.theme.theme_toggler_bgclr};\r\n      }\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      .user-profile-button {\r\n        column-gap: 0.6rem;\r\n        padding-left: 0.35rem;\r\n        padding-right: 0.6rem;\r\n        img {\r\n          height: calc(${globalValues.navbar_elements_height} - 0.5rem);\r\n\r\n          background: ${p => p.theme.theme_toggler_bgclr};\r\n          ${imageObjectSettings}\r\n        }\r\n      }\r\n    }\r\n    .log-in-button {\r\n      padding-inline: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Navbar\r\n","export const toggleReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case 'DARK_THEME':\r\n      return { ...state, isDarkTheme: true }\r\n    case 'LIGHT_THEME':\r\n      return { ...state, isDarkTheme: false }\r\n    case 'TOGGLE_THEME':\r\n      return { ...state, isDarkTheme: !state.isDarkTheme }\r\n    case 'TOGGLE_DROP_DOWN_MENU':\r\n      return { ...state, dropDownMenuIsVisible: !state.dropDownMenuIsVisible }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const isSignedInReducer = (state = false, action: any) => {\r\n  switch (action.type) {\r\n    case 'SIGN_IN':\r\n      return true\r\n    case 'SIGN_OUT':\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const authenModalReducer = (\r\n  state = { action: 'close modals' },\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return { action: 'show login modal' }\r\n    case 'SIGN_UP':\r\n      return { action: 'show signup modal' }\r\n    case 'CREATE_POST':\r\n      return { action: 'show create-post modal' }\r\n    case 'EDIT_POST':\r\n      return { action: 'show edit-post' }\r\n    case 'NONE':\r\n      return { action: 'close modals' }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { DocumentData, getDoc, onSnapshot } from '@firebase/firestore'\r\nimport { initializeApp } from 'firebase/app'\r\nimport { doc, getFirestore, setDoc, updateDoc } from 'firebase/firestore'\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport { getStorage, ref, getDownloadURL } from 'firebase/storage'\r\nimport { User } from './interface'\r\n\r\nconst app = initializeApp({\r\n  apiKey: 'AIzaSyAowcCuiyILtMdMP96n-RzUh2QVKvrN4OQ',\r\n  authDomain: 'faekbook1-aa0f8.firebaseapp.com',\r\n  projectId: 'faekbook1-aa0f8',\r\n  storageBucket: 'faekbook1-aa0f8.appspot.com',\r\n  messagingSenderId: '989041805197',\r\n  appId: '1:989041805197:web:7661cc2571e3fb3317dfc4',\r\n})\r\n\r\nexport const auth = getAuth()\r\n\r\nexport const db = getFirestore()\r\n\r\nexport const storage = getStorage(app)\r\n\r\nexport class Authen {\r\n  static signUp(\r\n    email: string,\r\n    password: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    callback: any\r\n  ) {\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        console.log('SignUp: ', userCredential)\r\n        const uid = userCredential.user.uid\r\n        const newUser: User = {\r\n          uid: uid,\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          short_bio: 'my bio',\r\n          is_dark_theme: false,\r\n        }\r\n        DB.setUser(uid, newUser)\r\n        Authen.signIn(email, password, callback)\r\n      })\r\n      .catch(err => {\r\n        alert(`Sign up Error: ${err.code}. ${err.message}`)\r\n      })\r\n  }\r\n  static signIn(email: string, password: string, callback: any) {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        callback()\r\n        console.log(\r\n          `User with email ${userCredential.user.email} has logged in successfully`\r\n        )\r\n      })\r\n      .catch(err => alert(`Sign in Error: ${err.code}. ${err.message}`))\r\n  }\r\n  static signOut() {\r\n    signOut(auth)\r\n      .then(() => {\r\n        console.log('signed out successfully')\r\n      })\r\n      .catch(e => {\r\n        alert('Signout failed: ' + e)\r\n      })\r\n  }\r\n}\r\n\r\nexport class DB {\r\n  static setUser(uid: string, payload: any) {\r\n    setDoc(doc(db, 'users', uid), payload)\r\n  }\r\n  static updateUserInfo(uid: string, payload: any) {\r\n    updateDoc(doc(db, 'users', uid), payload)\r\n  }\r\n  static setSnapshotListener(q: any, setStateCallback: any) {\r\n    return onSnapshot(q, (docs: any) => {\r\n      const docsArray: DocumentData[] = []\r\n      docs.forEach((p: any) => docsArray.push({ ...p.data(), id: p.id }))\r\n      setStateCallback(docsArray)\r\n    })\r\n  }\r\n  static like(liker: string, liked: string, collection: string) {\r\n    getDoc(doc(db, collection, liked)).then(async p => {\r\n      const likes = p.data()?.likes\r\n      const likesUserIDs = likes.map((like: any) => like.userID)\r\n\r\n      const avatarURL = await getDownloadURL(\r\n        ref(storage, `users/${liker}/avatar`)\r\n      )\r\n      const userSnapshot = await getDoc(doc(db, 'users', liker))\r\n      const user = userSnapshot?.data()\r\n\r\n      likesUserIDs.includes(liker)\r\n        ? likes.splice(likesUserIDs.indexOf(liker), 1)\r\n        : likes.push({\r\n            userID: liker,\r\n            full_name: `${user?.first_name} ${user?.last_name}`,\r\n            avatarURL: avatarURL,\r\n          })\r\n      updateDoc(doc(db, collection, liked), { likes: likes })\r\n    })\r\n  }\r\n}\r\n\r\nexport class Storage {\r\n  static updatePhotoURL(\r\n    uid: string,\r\n    setAvatarURL: any,\r\n    setCoverImageURL?: any\r\n  ) {\r\n    const avatarRef = ref(storage, `users/${uid}/avatar`)\r\n    const coverImageRef = ref(storage, `users/${uid}/cover_image`)\r\n    getDownloadURL(avatarRef)\r\n      .then(url => {\r\n        setAvatarURL(url)\r\n      })\r\n      .catch(e => console.log(e))\r\n    setCoverImageURL &&\r\n      getDownloadURL(coverImageRef)\r\n        .then(url => setCoverImageURL(url))\r\n        .catch(e => console.log(e))\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from './Context'\r\nimport { themes } from './themes'\r\n\r\nexport default function TurnOffModalButton() {\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n  return (\r\n    <StyledSpan\r\n      id='turn-off-modal'\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      onClick={() => dispatchDimBgModal({ type: 'NONE' })}\r\n    >\r\n      +\r\n    </StyledSpan>\r\n  )\r\n}\r\n\r\nconst StyledSpan = styled.span`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1.75rem;\r\n  font-size: 3.5rem;\r\n  transform: rotate(45deg);\r\n  font-weight: initial;\r\n  color: ${p => p.theme.font};\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebaseConfig'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from '../../utils/TurnOffModalButton'\r\n\r\nexport default function LogInModal() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n\r\n  const handleLogIn = () => {\r\n    Authen.signIn(email, password, () => dispatchDimBgModal({ type: 'NONE' }))\r\n    \r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Welcome Back!</div>\r\n        <input\r\n          type='text'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          placeholder='Email or Phone Number'\r\n        />\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder='Password'\r\n        />\r\n        <button className='log-in-btn' onClick={handleLogIn}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>New to Faekbook?</span>\r\n        <button\r\n          className='create-new-acc-btn'\r\n          onClick={() => dispatchDimBgModal({ type: 'SIGN_UP' })}\r\n        >\r\n          Create New Account\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 40rem;\r\n  max-width: 100vw;\r\n  display: flex;\r\n  flex-flow: column;\r\n  padding: 1.5rem;\r\n  #top,\r\n  #bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-flow: column;\r\n    row-gap: 1.25rem;\r\n    font-size: 1.75rem;\r\n  }\r\n  #top {\r\n    div {\r\n      align-self: flex-start;\r\n      font-weight: 500;\r\n      font-size: 2.25rem;\r\n      color: #1c1e21;\r\n      margin: 0.5rem auto 0.75rem 1rem;\r\n    }\r\n    input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .log-in-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 100%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n    margin-block: 2rem;\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    .create-new-acc-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 60%;\r\n    }\r\n  }\r\n`\r\n","import { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebaseConfig'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from '../../utils/TurnOffModalButton'\r\n\r\nexport default function SignUpModal() {\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  // const history = useHistory()\r\n  // const returnToHomepage = () => {\r\n  //   history.push('/faekbook/')\r\n  // }\r\n  const {\r\n    toggleState,\r\n    dispatchDimBgModal,\r\n    // setCurrentUserInfoState,\r\n  } = useContext(Context)\r\n  const handleSignUp = () => {\r\n    Authen.signUp(email, password, firstName, lastName, () =>\r\n      dispatchDimBgModal({ type: 'NONE' })\r\n    )\r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Sign Up</div>\r\n        <div>It's quick and easy</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <div className='full-name'>\r\n          <input\r\n            type='text'\r\n            placeholder='First name'\r\n            value={firstName}\r\n            onChange={e => setFirstName(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Last name'\r\n            value={lastName}\r\n            onChange={e => setLastName(e.target.value)}\r\n          />\r\n        </div>\r\n        <input\r\n          type='email'\r\n          placeholder='Email'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        ></input>\r\n        <input\r\n          type='password'\r\n          placeholder='New password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button className='sign-up' onClick={handleSignUp}>\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>Already have an account?</span>\r\n        <button onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 45rem;\r\n  max-width: 100vw;\r\n  #top,\r\n  #middle,\r\n  #bottom {\r\n    padding: 1.5rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 1rem;\r\n    align-items: center;\r\n    & button {\r\n      ${globalValues.ButtonCSS};\r\n    }\r\n  }\r\n  #top {\r\n    align-items: flex-start;\r\n    div:first-of-type {\r\n      font-weight: 600;\r\n      font-size: 3rem;\r\n      color: #1c1e21;\r\n    }\r\n    div:last-of-type {\r\n      color: #6d747c;\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  #middle {\r\n    font-size: 1.5rem;\r\n    & input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .full-name {\r\n      width: 100%;\r\n      display: flex;\r\n      column-gap: 0.75rem;\r\n    }\r\n    button {\r\n      margin-top: 1.5rem;\r\n    }\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    button {\r\n      font-size: 1.5rem;\r\n      width: 50%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from './Context'\r\nimport { themes } from './themes'\r\n\r\nconst ShowMoreButton: React.FC<{ addMorePosts: any }> = ({ addMorePosts }) => {\r\n  const { toggleState } = useContext(Context)\r\n  return (\r\n    <StyledButton\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      onClick={addMorePosts}\r\n    >\r\n      Show More\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nconst StyledButton = styled('button')<{ isDarkTheme: number }>`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  border: none;\r\n  padding: 1rem 1.5rem;\r\n  border-radius: 5px;\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  margin-top: 2rem;\r\n  align-self: center;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: ${p => (p.isDarkTheme ? '#525252ac' : '#ebebebae')};\r\n  }\r\n`\r\n\r\nexport default ShowMoreButton\r\n","import React from 'react'\r\n\r\nconst BlueBgLikeIcon: React.FC<{ setIsShowingViewLikes?: any }> = ({\r\n  setIsShowingViewLikes,\r\n}) => {\r\n  return (\r\n    <img\r\n      className='icon'\r\n      onClick={() => setIsShowingViewLikes && setIsShowingViewLikes(true)}\r\n      src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 16 16'%3e%3cdefs%3e%3clinearGradient id='a' x1='50%25' x2='50%25' y1='0%25' y2='100%25'%3e%3cstop offset='0%25' stop-color='%2318AFFF'/%3e%3cstop offset='100%25' stop-color='%230062DF'/%3e%3c/linearGradient%3e%3cfilter id='c' width='118.8%25' height='118.8%25' x='-9.4%25' y='-9.4%25' filterUnits='objectBoundingBox'%3e%3cfeGaussianBlur in='SourceAlpha' result='shadowBlurInner1' stdDeviation='1'/%3e%3cfeOffset dy='-1' in='shadowBlurInner1' result='shadowOffsetInner1'/%3e%3cfeComposite in='shadowOffsetInner1' in2='SourceAlpha' k2='-1' k3='1' operator='arithmetic' result='shadowInnerInner1'/%3e%3cfeColorMatrix in='shadowInnerInner1' values='0 0 0 0 0 0 0 0 0 0.299356041 0 0 0 0 0.681187726 0 0 0 0.3495684 0'/%3e%3c/filter%3e%3cpath id='b' d='M8 0a8 8 0 00-8 8 8 8 0 1016 0 8 8 0 00-8-8z'/%3e%3c/defs%3e%3cg fill='none'%3e%3cuse fill='url(%23a)' xlink:href='%23b'/%3e%3cuse fill='black' filter='url(%23c)' xlink:href='%23b'/%3e%3cpath fill='white' d='M12.162 7.338c.176.123.338.245.338.674 0 .43-.229.604-.474.725a.73.73 0 01.089.546c-.077.344-.392.611-.672.69.121.194.159.385.015.62-.185.295-.346.407-1.058.407H7.5c-.988 0-1.5-.546-1.5-1V7.665c0-1.23 1.467-2.275 1.467-3.13L7.361 3.47c-.005-.065.008-.224.058-.27.08-.079.301-.2.635-.2.218 0 .363.041.534.123.581.277.732.978.732 1.542 0 .271-.414 1.083-.47 1.364 0 0 .867-.192 1.879-.199 1.061-.006 1.749.19 1.749.842 0 .261-.219.523-.316.666zM3.6 7h.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-.8a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6z'/%3e%3c/g%3e%3c/svg%3e\"\r\n      alt='like-icon'\r\n    />\r\n  )\r\n}\r\n\r\nexport default BlueBgLikeIcon\r\n","import { useContext, useEffect, useRef } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { themes } from '../../utils/themes'\r\nimport { RiDeleteBin6Line } from 'react-icons/ri'\r\nimport { FiEdit } from 'react-icons/fi'\r\nimport { deleteDoc, doc } from '@firebase/firestore'\r\nimport { db } from '../../firebaseConfig'\r\n\r\nconst CommentModal: React.FC<{\r\n  commentID: string\r\n  setIsEditting: any\r\n  setIsShowingModal?: any\r\n}> = ({ commentID, setIsEditting, setIsShowingModal }) => {\r\n  const { toggleState } = useContext(Context)\r\n  const modalNode = useRef(null)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  }, [])\r\n  const handleClick = (e: any) => {\r\n    e.target === modalNode.current || setIsShowingModal(false)\r\n  }\r\n  return (\r\n    <StyledDiv\r\n      ref={modalNode}\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n    >\r\n      <div\r\n        className='icon'\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          setIsEditting(true)\r\n          setIsShowingModal(false)\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <FiEdit />\r\n        </div>\r\n        Edit\r\n      </div>\r\n\r\n      <div\r\n        className='icon'\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          setIsEditting(false)\r\n          deleteDoc(doc(db, 'comments', commentID))\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <RiDeleteBin6Line />\r\n        </div>\r\n        Delete\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')`\r\n  position: absolute;\r\n  right: -2rem;\r\n  top: 5rem;\r\n  width: 10rem;\r\n  padding: 0.5rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  font-size: 1rem;\r\n  .icon {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    :hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n    .icon-wrapper {\r\n      height: 2.5rem;\r\n      width: 2.5rem;\r\n      border-radius: 50%;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n      font-size: 1.25rem;\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n`\r\n\r\nexport default CommentModal\r\n","import { doc, updateDoc } from '@firebase/firestore'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { db } from '../../firebaseConfig'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\n\r\nconst WriteAComment: React.FC<{\r\n  commentID?: string\r\n  content?: string\r\n  setIsEditting?: any\r\n}> = ({ commentID, content, setIsEditting }) => {\r\n  const { toggleState } = useContext(Context)\r\n  const [edittingContent, setEdittingContent] = useState<string>('')\r\n  useEffect(() => {\r\n    content && setEdittingContent(content)\r\n  }, [content])\r\n\r\n  const updatePost = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      if (commentID) {\r\n        updateDoc(doc(db, 'comments', commentID), { content: edittingContent })\r\n        setIsEditting(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledInput\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      value={edittingContent}\r\n      placeholder='Write a comment...'\r\n      onChange={e => {\r\n        setEdittingContent(e.target.value)\r\n      }}\r\n      onKeyDown={updatePost}\r\n      autoFocus\r\n      onFocus={e =>\r\n        e.currentTarget.setSelectionRange(\r\n          e.currentTarget.value.length,\r\n          e.currentTarget.value.length\r\n        )\r\n      }\r\n    ></StyledInput>\r\n  )\r\n}\r\n\r\nconst StyledInput = styled('input')<{ isDarkTheme: number }>`\r\n  font-family: inherit;\r\n  color: ${p => p.theme.font};\r\n  border: none;\r\n  outline: none;\r\n  flex-grow: 1;\r\n  padding: 1rem 1.5rem;\r\n  font-size: 1.5rem;\r\n  border-radius: 2rem;\r\n  background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n  display: flex;\r\n  align-items: center;\r\n  :hover {\r\n    cursor: text;\r\n    filter: brightness(${p => (p.isDarkTheme ? '1.1' : '0.95')});\r\n  }\r\n  ::placeholder {\r\n    color: ${p => p.theme.font_lighter};\r\n  }\r\n`\r\n\r\nexport default WriteAComment\r\n","import { useContext, useEffect, useRef, useState } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport {\r\n  customizedScrollBar,\r\n  imageObjectSettings,\r\n  themes,\r\n} from '../../utils/themes'\r\nimport { Link } from 'react-router-dom'\r\nimport BlueBgLikeIcon from '../../utils/BlueBgLikeIcon'\r\n\r\nconst ViewLikes: React.FC<{\r\n  setIsShowingViewLikes: any\r\n  likes: any\r\n  isComment?: boolean\r\n}> = ({ setIsShowingViewLikes, likes, isComment }) => {\r\n  const { toggleState } = useContext(Context)\r\n  const modalNode = useRef(null)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  }, [])\r\n\r\n  const renderLikesInfo = likes.map((like: any) => {\r\n    return (\r\n      <div id='user' key={like.userID}>\r\n        <Link to={`/faekbook/${like.userID}`}>\r\n          <div className='avatar'>\r\n            <img src={like.avatarURL} alt='avatar' className='image' />\r\n            <BlueBgLikeIcon />\r\n          </div>\r\n          <span>{like.full_name}</span>\r\n        </Link>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const handleClick = (e: any) => {\r\n    e.target === modalNode.current || setIsShowingViewLikes(false)\r\n  }\r\n  return (\r\n    <StyledDiv\r\n      ref={modalNode}\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isComment={isComment ? 1 : 0}\r\n    >\r\n      {renderLikesInfo}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{ isComment: number }>`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-flow: column;\r\n  z-index: 100;\r\n  /* z-index: ${p => p.isComment && '100'}; */\r\n  left: ${p => (p.isComment ? '3.5rem' : '4rem')};\r\n  width: ${p => (p.isComment ? '18rem' : '25rem')};\r\n  padding: 0.5rem;\r\n  max-height: 18rem;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  font-size: ${p => (p.isComment ? '1rem' : '1.25rem')};\r\n  overflow: auto;\r\n  ${customizedScrollBar}\r\n  #user {\r\n    a {\r\n      text-decoration: none;\r\n      display: flex;\r\n      cursor: pointer;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      padding: 0.5rem;\r\n      column-gap: ${p => (p.isComment ? '1.25rem' : '2rem')};\r\n      align-items: center;\r\n      color: ${p => p.theme.font};\r\n      font-weight: 700;\r\n      height: ${p => (p.isComment ? '4rem' : '5rem')};\r\n      line-height: 1.25;\r\n      :hover {\r\n        background-color: ${p => p.theme.hover};\r\n        text-decoration: none;\r\n      }\r\n      .avatar {\r\n        position: relative;\r\n        height: ${p => (p.isComment ? '3rem' : '3.5rem')};\r\n        width: ${p => (p.isComment ? '3rem' : '3.5rem')};\r\n        .image {\r\n          height: inherit;\r\n          width: inherit;\r\n          ${imageObjectSettings};\r\n        }\r\n        .icon {\r\n          position: absolute;\r\n          bottom: -0.5rem;\r\n          right: -0.5rem;\r\n          height: ${p => (p.isComment ? '1.25rem' : '1.5rem')};\r\n          width: ${p => (p.isComment ? '1.25rem' : '1.5rem')};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ViewLikes\r\n","import { BsThreeDots } from 'react-icons/bs'\r\nimport styled from 'styled-components'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\nimport { doc, getDoc, Timestamp } from '@firebase/firestore'\r\nimport { format } from 'date-fns'\r\nimport fromUnixTime from 'date-fns/fromUnixTime'\r\nimport { DB, db, Storage } from '../../firebaseConfig'\r\nimport BlueBgLikeIcon from '../../utils/BlueBgLikeIcon'\r\nimport CommentModal from '../Modals/CommentModal'\r\nimport WriteAComment from './WriteAComment'\r\nimport { Link } from 'react-router-dom'\r\nimport ViewLikes from '../Modals/ViewLikes'\r\n\r\nconst Comment: React.FC<{\r\n  commenterUID: string\r\n  content: string\r\n  likes: Array<string>\r\n  date: Timestamp\r\n  commentID: string\r\n}> = ({ commenterUID, content, date, likes, commentID }) => {\r\n  const { toggleState, currentUserInfo, isUserSignedIn } = useContext(Context)\r\n  const [commentAvatar, setCommentAvatar] = useState<any>(null)\r\n  const [userInfo, setUserInfo] = useState<any>(null)\r\n  const [isShowingModal, setIsShowingModal] = useState<boolean>(false)\r\n  const [isShowingViewLikes, setIsShowingViewLikes] = useState<boolean>(false)\r\n  const [isLikedByCU, setIsLiked] = useState<boolean>(false)\r\n  const [isEditting, setIsEditting] = useState<boolean>(false)\r\n\r\n  // ! set photo URL/\r\n  useEffect(() => {\r\n    Storage.updatePhotoURL(commenterUID, setCommentAvatar)\r\n    getDoc(doc(db, 'users', commenterUID)).then(userSnap => {\r\n      const userInfo = userSnap.data()\r\n      setUserInfo(userInfo)\r\n    })\r\n  }, [commenterUID])\r\n  // ! set photo URL END/\r\n\r\n  // !  setIsLiked /\r\n  useEffect(() => {\r\n    const likesUserIDs = likes.map((like: any) => like.userID)\r\n    likesUserIDs.includes(currentUserInfo?.uid)\r\n      ? setIsLiked(true)\r\n      : setIsLiked(false)\r\n  }, [currentUserInfo?.uid, likes])\r\n  // !  setIsLiked END /\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isLikedByCU={isLikedByCU ? 1 : 0}\r\n      hasLikes={likes.length > 0 ? 1 : 0}\r\n    >\r\n      <Link to={`/faekbook/${commenterUID}`}>\r\n        <img src={commentAvatar || defaultAvatar} alt='comment_avatar' />\r\n      </Link>\r\n      {isEditting ? (\r\n        <WriteAComment\r\n          commentID={commentID}\r\n          setIsEditting={setIsEditting}\r\n          content={content}\r\n        />\r\n      ) : (\r\n        <div className='middle'>\r\n          <div className='top'>\r\n            <div className='bubble'>\r\n              <Link to={`/faekbook/${commenterUID}`}>\r\n                <div className='username'>\r\n                  {userInfo?.first_name} {userInfo?.last_name}\r\n                </div>\r\n              </Link>\r\n              <div className='content'>{content}</div>\r\n              {likes.length >= 1 && (\r\n                <div\r\n                  className='like-icon'\r\n                  onClick={() => setIsShowingViewLikes(true)}\r\n                >\r\n                  <BlueBgLikeIcon />\r\n                  <span>{likes.length}</span>\r\n                  {isShowingViewLikes && (\r\n                    <ViewLikes\r\n                      likes={likes}\r\n                      setIsShowingViewLikes={setIsShowingViewLikes}\r\n                      isComment={true}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n            </div>\r\n            {commenterUID === currentUserInfo?.uid && (\r\n              <div className='three-dots'>\r\n                <div\r\n                  className='icon'\r\n                  onClick={() => setIsShowingModal(!isShowingModal)}\r\n                >\r\n                  <BsThreeDots />\r\n                </div>\r\n                {isShowingModal && (\r\n                  <CommentModal\r\n                    commentID={commentID}\r\n                    setIsEditting={setIsEditting}\r\n                    setIsShowingModal={setIsShowingModal}\r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className='like'>\r\n            {isUserSignedIn && (\r\n              <span\r\n                onClick={() =>\r\n                  DB.like(currentUserInfo?.uid, commentID, 'comments')\r\n                }\r\n              >\r\n                Like\r\n              </span>\r\n            )}\r\n            {`${format(fromUnixTime(date.seconds), 'yyyy, MMM d')} at ${format(\r\n              fromUnixTime(date.seconds),\r\n              'h:mm a'\r\n            )}`}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isEditting && (\r\n        <div className='cancel' onClick={() => setIsEditting(!isEditting)}>\r\n          Cancel\r\n        </div>\r\n      )}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{ isLikedByCU: number; hasLikes: number }>`\r\n  display: flex;\r\n  column-gap: 1rem;\r\n  align-items: center;\r\n  :hover {\r\n    & > .middle > .top > .three-dots > .icon > svg {\r\n      display: block;\r\n    }\r\n  }\r\n  img {\r\n    height: 3.5rem;\r\n    width: 3.5rem;\r\n    ${imageObjectSettings};\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .middle {\r\n    .top {\r\n      display: flex;\r\n      .bubble {\r\n        padding: 1rem 1rem 0.5rem;\r\n        border-radius: 20px;\r\n        background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n        font-size: 1.15rem;\r\n        color: ${p => p.theme.font};\r\n        position: relative;\r\n        min-width: 13.5rem;\r\n        a {\r\n          color: inherit;\r\n          text-decoration: none;\r\n          .username {\r\n            font-weight: 500;\r\n            padding-bottom: 0.25rem;\r\n            :hover {\r\n              text-decoration: underline;\r\n              cursor: pointer;\r\n            }\r\n          }\r\n        }\r\n        .content {\r\n          line-height: 1.4;\r\n        }\r\n        .like-icon {\r\n          border-radius: 10px;\r\n          padding: 0.25rem;\r\n          background: ${p => p.theme.like_icon_bgclr};\r\n          box-shadow: rgba(0, 0, 0, 0.3) -1px 1px 3px;\r\n          position: absolute;\r\n          right: -1.75rem;\r\n          bottom: 0.25rem;\r\n          display: flex;\r\n          align-items: center;\r\n          font-size: 0.9rem;\r\n          :hover {\r\n            cursor: pointer;\r\n          }\r\n          img {\r\n            margin-right: 0.25rem;\r\n            height: 1.25rem;\r\n            width: 1.25rem;\r\n          }\r\n        }\r\n      }\r\n      .three-dots {\r\n        position: relative;\r\n        display: grid;\r\n        place-items: center;\r\n        border-radius: 50%;\r\n        width: ${p => (p.hasLikes ? '5rem' : '2rem')};\r\n        margin-left: 1rem;\r\n        font-size: 1.25rem;\r\n        & > .icon {\r\n          display: grid;\r\n          place-items: center;\r\n          border-radius: 50%;\r\n          height: 2.5rem;\r\n          width: 2.5rem;\r\n          :hover {\r\n            cursor: pointer;\r\n            background-color: ${p => p.theme.theme_toggler_bgclr};\r\n          }\r\n          svg {\r\n            display: none;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .like {\r\n      padding-top: 0.5rem;\r\n      margin-left: 0.75rem;\r\n      font-weight: 500;\r\n      font-size: 0.85rem;\r\n      span {\r\n        color: ${p => p.isLikedByCU && '#036ee2'};\r\n        font-weight: 600;\r\n        font-size: 1rem;\r\n        padding-right: 1rem;\r\n        :hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .cancel {\r\n    color: #036ee2;\r\n    :hover {\r\n      cursor: pointer;\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Comment\r\n","import { useContext, useEffect, useRef } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { themes } from '../../utils/themes'\r\nimport { RiDeleteBin6Line } from 'react-icons/ri'\r\nimport { FiEdit } from 'react-icons/fi'\r\nimport { deleteDoc, doc } from '@firebase/firestore'\r\nimport { db } from '../../firebaseConfig'\r\n\r\nconst PostModal: React.FC<{\r\n  postID: string\r\n  setIsShowingModal: any\r\n  isShowingModal: boolean\r\n}> = ({ postID, setIsShowingModal, isShowingModal }) => {\r\n  const { toggleState, dispatchDimBgModal, setCBEPostId } = useContext(Context)\r\n  const modalNode = useRef(null)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  }, [])\r\n  const handleClick = (e: any) => {\r\n    e.target === modalNode.current || setIsShowingModal(!isShowingModal)\r\n  }\r\n  return (\r\n    <StyledDiv\r\n      ref={modalNode}\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n    >\r\n      <div\r\n        className='icon'\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          setIsShowingModal(false)\r\n          if (postID) {\r\n            setCBEPostId(postID)\r\n            dispatchDimBgModal({ type: 'EDIT_POST' })\r\n          }\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <FiEdit />\r\n        </div>\r\n        Edit Post\r\n      </div>\r\n\r\n      <div\r\n        className='icon'\r\n        onClick={e => {\r\n          e.stopPropagation()\r\n          setIsShowingModal(false)\r\n          \r\n          deleteDoc(doc(db, 'posts', postID))\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <RiDeleteBin6Line />\r\n        </div>\r\n        Delete Post\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')`\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 5rem;\r\n  width: 20rem;\r\n  padding: 0.5rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  /* profile, edit and delete */\r\n  .icon {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    :hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n    .icon-wrapper {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n      font-size: 1.75rem;\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostModal\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BsThreeDots } from 'react-icons/bs'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { AiFillLike } from 'react-icons/ai'\r\nimport { FaComment, FaCommentSlash } from 'react-icons/fa'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { format, fromUnixTime } from 'date-fns'\r\nimport BlueBgLikeIcon from '../../utils/BlueBgLikeIcon'\r\nimport { CommentType } from '../../interface'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\nimport Comment from './Comment'\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  Timestamp,\r\n  where,\r\n} from '@firebase/firestore'\r\nimport { DB, db, Storage } from '../../firebaseConfig'\r\nimport { Link } from 'react-router-dom'\r\nimport PostModal from '../Modals/PostModal'\r\nimport ViewLikes from '../Modals/ViewLikes'\r\nimport ColorThief from 'colorthief'\r\n\r\nconst Post: React.FC<{\r\n  userID: string\r\n  postID: string\r\n  full_name: string\r\n  date: Timestamp\r\n  content: string\r\n  likes: Array<string>\r\n  photo: string\r\n  is_profile_page?: boolean\r\n}> = ({ full_name, userID, postID, date, content, likes, photo }) => {\r\n  const { currentUserInfo, toggleState, isUserSignedIn, CUAvatarURL } =\r\n    useContext(Context)\r\n  const [isLikedByCurrentUser, setIsLiked] = useState<boolean>()\r\n  const [postAvatarURL, setPostAvatar] = useState<any>(null)\r\n  const [isShowingComments, setIsShowingComments] = useState<boolean>()\r\n  const [commentInput, setCommentInput] = useState('')\r\n  const [comments, setComments] = useState<any>()\r\n  const [isShowingModal, setIsShowingModal] = useState<boolean>()\r\n  const threeDotsNode = useRef(null)\r\n  const [isShowingViewLikes, setIsShowingViewLikes] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    //* set post avatar */\r\n    Storage.updatePhotoURL(userID, setPostAvatar)\r\n  }, [userID])\r\n\r\n  useEffect(() => {\r\n    //* set like effects */\r\n    if (isUserSignedIn) {\r\n      const likesUserIDs = likes.map((like: any) => like.userID)\r\n      likesUserIDs.includes(currentUserInfo?.uid)\r\n        ? setIsLiked(true)\r\n        : setIsLiked(false)\r\n    } else setIsLiked(false)\r\n  }, [currentUserInfo?.uid, isUserSignedIn, likes])\r\n\r\n  useEffect(() => {\r\n    //* set comments\r\n    const postsRef = collection(db, 'comments')\r\n    const q = query(postsRef, where('postID', '==', postID), orderBy('date'))\r\n    const unsub = DB.setSnapshotListener(q, setComments)\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [postID])\r\n\r\n  const postComment = (e: any) => {\r\n    e.preventDefault()\r\n    if (commentInput.length > 0) {\r\n      const newComment: CommentType = {\r\n        postID: postID,\r\n        commenterID: currentUserInfo?.uid,\r\n        date: Timestamp.fromDate(new Date()),\r\n        content: commentInput,\r\n        likes: [],\r\n      }\r\n      addDoc(collection(db, 'comments'), newComment)\r\n      setCommentInput('')\r\n    }\r\n  }\r\n  const renderComments = comments?.map((cmt: any) => (\r\n    <Comment\r\n      key={cmt.id}\r\n      commentID={cmt.id}\r\n      commenterUID={cmt.commenterID}\r\n      content={cmt.content}\r\n      date={cmt.date}\r\n      likes={cmt.likes}\r\n    />\r\n  ))\r\n\r\n  const imgRef = useRef<HTMLImageElement | null>(null)\r\n  const [bgGradient, setBgGradient] = useState<string>('')\r\n  useEffect(() => {\r\n    if (photo) {\r\n      const colorThief = new ColorThief()\r\n      if (imgRef.current) {\r\n        imgRef.current.onload = () => {\r\n          const color = colorThief.getColor(imgRef.current).toString()\r\n          setBgGradient(`rgba(${color})`)\r\n        }\r\n      }\r\n    }\r\n  }, [])\r\n  const googleProxyURL =\r\n    'https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&refresh=2592000&url='\r\n  const renderPhoto = (\r\n    <img\r\n      src={googleProxyURL + encodeURIComponent(photo)}\r\n      alt='post photo'\r\n      className='post-photo'\r\n      ref={imgRef}\r\n      crossOrigin='anonymous'\r\n    />\r\n  )\r\n\r\n  return (\r\n    <StyledSection\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      isLikedByCurrentUser={isLikedByCurrentUser ? 1 : 0}\r\n      hasComments={comments?.length > 0 ? 1 : 0}\r\n      hasLikes={likes?.length > 0 ? 1 : 0}\r\n      isUserSignedIn={isUserSignedIn ? 1 : 0}\r\n      isShowingComments={isShowingComments ? 1 : 0}\r\n      bgGradient={bgGradient}\r\n    >\r\n      <div id='user-info'>\r\n        <Link to={`/faekbook/${userID}`}>\r\n          <img\r\n            src={\r\n              userID === currentUserInfo?.uid\r\n                ? CUAvatarURL || defaultAvatar\r\n                : postAvatarURL || defaultAvatar\r\n            }\r\n            alt='avatar'\r\n          />\r\n        </Link>\r\n        <div className='info'>\r\n          <div className='name'>\r\n            <Link to={`/faekbook/${userID}`}>{full_name}</Link>\r\n          </div>\r\n          {`${format(fromUnixTime(date.seconds), 'yyyy, MMM d')} at ${format(\r\n            fromUnixTime(date.seconds),\r\n            'h:mm a'\r\n          )}`}\r\n        </div>\r\n      </div>\r\n\r\n      {isShowingModal && (\r\n        <PostModal\r\n          postID={postID}\r\n          isShowingModal={isShowingModal}\r\n          setIsShowingModal={setIsShowingModal}\r\n        />\r\n      )}\r\n\r\n      {userID === currentUserInfo?.uid && (\r\n        <div\r\n          ref={threeDotsNode}\r\n          className='three-dots'\r\n          onClick={() => setIsShowingModal(!isShowingModal)}\r\n        >\r\n          <BsThreeDots className='icon' />\r\n        </div>\r\n      )}\r\n\r\n      <main id='content'>{content}</main>\r\n\r\n      {photo && <div id='post-photo'>{renderPhoto}</div>}\r\n\r\n      <div id='num-likes-cmts'>\r\n        <div className='likes'>\r\n          {likes.length >= 1 && (\r\n            <>\r\n              <BlueBgLikeIcon setIsShowingViewLikes={setIsShowingViewLikes} />\r\n              <span\r\n                className='number-of-likes'\r\n                onClick={() => setIsShowingViewLikes(true)}\r\n              >\r\n                {likes.length}\r\n              </span>\r\n              {isShowingViewLikes && (\r\n                <ViewLikes\r\n                  setIsShowingViewLikes={setIsShowingViewLikes}\r\n                  likes={likes}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className='comments'>\r\n          {comments?.length > 0 && (\r\n            <>\r\n              {comments?.length} comment{comments?.length > 1 && 's'}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div id='like-comment'>\r\n        <div\r\n          className='like'\r\n          onClick={() =>\r\n            isUserSignedIn && DB.like(currentUserInfo?.uid, postID, 'posts')\r\n          }\r\n        >\r\n          <AiFillLike className='icon' />\r\n          <span>Like</span>\r\n        </div>\r\n        <div\r\n          className='comments'\r\n          onClick={() =>\r\n            comments?.length > 0\r\n              ? setIsShowingComments(!isShowingComments)\r\n              : isUserSignedIn\r\n              ? setIsShowingComments(!isShowingComments)\r\n              : undefined\r\n          }\r\n        >\r\n          {isShowingComments ? (\r\n            <FaCommentSlash className='icon' />\r\n          ) : (\r\n            <FaComment className='icon' />\r\n          )}\r\n          <span>{isShowingComments ? 'Hide' : 'Show'} Comments</span>\r\n        </div>\r\n      </div>\r\n\r\n      {isShowingComments && (\r\n        <>\r\n          <div id='comments'>{renderComments}</div>\r\n          {isUserSignedIn && (\r\n            <form className='comment-input' onSubmit={postComment}>\r\n              <img src={CUAvatarURL || defaultAvatar} alt='avatar' />\r\n              <input\r\n                value={commentInput}\r\n                placeholder='Write a comment...'\r\n                onChange={e => {\r\n                  setCommentInput(e.target.value)\r\n                }}\r\n              ></input>\r\n            </form>\r\n          )}\r\n        </>\r\n      )}\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled('section')<{\r\n  isDarkTheme: number\r\n  isLikedByCurrentUser: number\r\n  hasComments: number\r\n  hasLikes: number\r\n  isUserSignedIn: number\r\n  isShowingComments: number\r\n  bgGradient: string\r\n}>`\r\n  position: relative;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  padding-bottom: ${p => (p.isShowingComments ? '1.5rem' : '0')};\r\n  & > .three-dots {\r\n    position: absolute;\r\n    right: 1.75rem;\r\n    top: 1.5rem;\r\n    padding: 0.75rem;\r\n    border-radius: 50%;\r\n    :hover {\r\n      background-color: ${p => p.theme.theme_toggler_bgclr};\r\n      cursor: pointer;\r\n    }\r\n    .icon {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  #user-info {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .info {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: space-around;\r\n      height: 3.5rem;\r\n      .name {\r\n        a {\r\n          text-decoration: none;\r\n          font-size: 1.5rem;\r\n          font-weight: 700;\r\n          color: ${p => p.theme.font};\r\n          :hover {\r\n            text-decoration: underline;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  #content {\r\n    font-size: 1.5rem;\r\n    padding: 1.5rem 1.5rem;\r\n    word-wrap: break-word;\r\n    white-space: pre-wrap;\r\n    line-height: 1.25;\r\n  }\r\n  #post-photo {\r\n    text-align: center;\r\n    width: 100%;\r\n    line-height: 0;\r\n    background-color: ${p => p.bgGradient};\r\n    .post-photo {\r\n      border-radius: initial;\r\n      /* width: 100%; */\r\n      max-height: 70rem;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n  #num-likes-cmts {\r\n    padding-inline: 1.5rem;\r\n    padding-block: ${p => (p.hasLikes || p.hasComments ? '1.25rem' : '0')};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .likes {\r\n      position: relative;\r\n      display: flex;\r\n      align-items: center;\r\n      column-gap: 0.5rem;\r\n      img {\r\n        height: 1.75rem;\r\n        width: 1.75rem;\r\n        :hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .number-of-likes {\r\n        font-size: 1.25rem;\r\n        :hover {\r\n          cursor: pointer;\r\n          text-decoration: underline;\r\n        }\r\n      }\r\n    }\r\n    .comments {\r\n      line-height: 1.8rem;\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n  #like-comment {\r\n    border-block: ${p => (p.isDarkTheme ? '#474747' : '#dddfe2')} 1px solid;\r\n    border-bottom: ${p => p.isShowingComments || 'none'};\r\n    padding: 0.5rem 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    column-gap: 0.5rem;\r\n    .like,\r\n    .comments {\r\n      height: 3.25rem;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      width: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      column-gap: 0.75rem;\r\n      background-color: ${p => p.theme.main_bgclr};\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n      .icon {\r\n        font-size: 1.75rem;\r\n      }\r\n    }\r\n    .like {\r\n      color: ${p =>\r\n        p.isUserSignedIn\r\n          ? p.isLikedByCurrentUser\r\n            ? '#036ee2'\r\n            : 'unset'\r\n          : p.isDarkTheme\r\n          ? '#525252ac'\r\n          : '#ebebebae'};\r\n      :hover {\r\n        cursor: ${p => (p.isUserSignedIn ? 'pointer' : 'not-allowed')};\r\n        background-color: ${p =>\r\n          p.isUserSignedIn\r\n            ? p.isDarkTheme\r\n              ? '#64646471'\r\n              : '#ebebebae'\r\n            : 'unset'};\r\n      }\r\n    }\r\n    .comments {\r\n      color: ${p =>\r\n        p.hasComments\r\n          ? 'unset'\r\n          : p.isUserSignedIn\r\n          ? 'unset'\r\n          : p.isDarkTheme\r\n          ? '#525252ac'\r\n          : '#ebebebae'};\r\n      :hover {\r\n        cursor: ${p =>\r\n          p.isUserSignedIn\r\n            ? 'pointer'\r\n            : p.hasComments\r\n            ? 'pointer'\r\n            : 'not-allowed'};\r\n        background-color: ${p =>\r\n          p.isUserSignedIn\r\n            ? p.isDarkTheme\r\n              ? '#64646471'\r\n              : '#ebebebae'\r\n            : p.hasComments\r\n            ? p.isDarkTheme\r\n              ? '#64646471'\r\n              : '#ebebebae'\r\n            : 'unset'};\r\n      }\r\n    }\r\n  }\r\n  #comments {\r\n    padding: 1rem 1.5rem 0;\r\n    margin-bottom: -0.75rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 0.75rem;\r\n  }\r\n  form.comment-input {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 3.5rem;\r\n      width: 3.5rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      ${imageObjectSettings}\r\n    }\r\n    input {\r\n      font-family: inherit;\r\n      color: ${p => p.theme.font};\r\n      border: none;\r\n      outline: none;\r\n      flex-grow: 1;\r\n      padding: 1rem 1.5rem;\r\n      font-size: 1.5rem;\r\n      border-radius: 2rem;\r\n      background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n      display: flex;\r\n      align-items: center;\r\n      :hover {\r\n        cursor: text;\r\n        filter: brightness(${p => (p.isDarkTheme ? '1.1' : '0.95')});\r\n      }\r\n      ::placeholder {\r\n        color: ${p => p.theme.font_lighter};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Post\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\n\r\nexport default function WhatsOnYourMind() {\r\n  const { toggleState, dispatchDimBgModal, isUserSignedIn, CUAvatarURL } =\r\n    useContext(Context)\r\n  return (\r\n    <StyledSection theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <img\r\n        src={isUserSignedIn ? CUAvatarURL || defaultAvatar : undefined}\r\n        alt='avatar'\r\n      />\r\n      <div onClick={() => dispatchDimBgModal({ type: 'CREATE_POST' })}>\r\n        What's on your mind?\r\n      </div>\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 1rem;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  img {\r\n    height: 4rem;\r\n    width: 4rem;\r\n    background: ${p => p.theme.theme_toggler_bgclr};\r\n    ${imageObjectSettings}\r\n  }\r\n  div {\r\n    color: ${p => p.theme.font_lighter};\r\n    flex-grow: 1;\r\n    padding-left: 2rem;\r\n    font-size: 1.5rem;\r\n    height: 4rem;\r\n    border-radius: 2rem;\r\n    background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    :hover {\r\n      cursor: pointer;\r\n      filter: brightness(${p => (p.theme.type === 'dark' ? '1.1' : '0.95')});\r\n    }\r\n  }\r\n`\r\n","import { collection, getDocs, limit, orderBy, query } from '@firebase/firestore'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { db, DB } from '../../firebaseConfig'\r\nimport Context from '../../utils/Context'\r\nimport ShowMoreButton from '../../utils/ShowMoreButton'\r\nimport { themes } from '../../utils/themes'\r\nimport Post from './Post'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\n\r\nconst MainPage: React.FC<any> = () => {\r\n  const { toggleState, isUserSignedIn } = useContext(Context)\r\n  const [allPosts, setAllPosts] = useState<any>(null)\r\n  const [postsNumLimit, setPostsNumLimit] = useState<number>(5)\r\n  const [hasShownAllPosts, setHasShownAllPosts] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    getDocs(collection(db, 'posts')).then(posts => {\r\n      postsNumLimit >= posts.size\r\n        ? setHasShownAllPosts(true)\r\n        : setHasShownAllPosts(false)\r\n    })\r\n    console.log('render mainpage limit posts')\r\n  }, [postsNumLimit, allPosts])\r\n\r\n  //! RENDER POSTS */\r\n  useEffect(() => {\r\n    const postsRef = collection(db, 'posts')\r\n    const q = query(postsRef, orderBy('date', 'desc'), limit(postsNumLimit))\r\n    const unsub = DB.setSnapshotListener(q, setAllPosts)\r\n    console.log('main page renders')\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [postsNumLimit])\r\n  const renderPosts = allPosts?.map((p: any) => (\r\n    <Post\r\n      key={p.id}\r\n      postID={p.id}\r\n      userID={p.userID}\r\n      full_name={p.fullname}\r\n      date={p.date}\r\n      content={p.content}\r\n      likes={p.likes}\r\n      photo={p.photo}\r\n    />\r\n  ))\r\n  //! RENDER POSTS END*/\r\n\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      {isUserSignedIn && <WhatsOnYourMind />}\r\n      {renderPosts}\r\n      {hasShownAllPosts || (\r\n        <ShowMoreButton\r\n          addMorePosts={() => {\r\n            setPostsNumLimit(postsNumLimit + 5)\r\n          }}\r\n        />\r\n      )}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  color: ${p => p.theme.font};\r\n  padding-bottom: 3rem;\r\n  display: flex;\r\n  flex-flow: column;\r\n`\r\n\r\nexport default MainPage\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { defaultAvatar, defaultCoverImage } from '../../utils/defaultPhotos'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { AiOutlineCamera, AiFillCamera } from 'react-icons/ai'\r\nimport ColorThief from 'colorthief'\r\nimport useWindowSize, { Size } from '../../utils/useWindowSize'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\nimport { DB, db, Storage, storage } from '../../firebaseConfig'\r\nimport Post from './Post'\r\nimport { AiOutlineEdit } from 'react-icons/ai'\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  limit,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from '@firebase/firestore'\r\nimport {\r\n  deleteObject,\r\n  getDownloadURL,\r\n  ref,\r\n  uploadBytes,\r\n} from '@firebase/storage'\r\nimport { useParams } from 'react-router'\r\nimport ShowMoreButton from '../../utils/ShowMoreButton'\r\nimport CommentModal from '../Modals/CommentModal'\r\nimport WriteAComment from './WriteAComment'\r\n\r\nconst ProfilePage: React.FC<any> = () => {\r\n  const {\r\n    toggleState,\r\n    isUserSignedIn,\r\n    currentUserInfo,\r\n    CUAvatarURL,\r\n    setCUAvatarURL,\r\n  } = useContext(Context)\r\n  const { userID }: { userID: string } = useParams()\r\n  const [userInfo, setUserInfo] = useState<any>(null)\r\n  const [userCoverImgURL, setCoverImageURL] = useState<any>(null)\r\n  const [userAvatarURL, setUserAvatarURL] = useState<any>(null)\r\n  const [userPosts, setUserPosts] = useState<any>(null)\r\n  const [editCoverPhotoHidden, setEditCoverPhotoHidden] = useState(false)\r\n  const [bgGradient, setBgGradient] = useState<string>('')\r\n  const [postsNumLimit, setPostsNumLimit] = useState<number>(5)\r\n  const [hasShownAllPosts, setHasShownAllPosts] = useState<boolean>(false)\r\n  const [isEdittingBio, setIsEdittingBio] = useState<boolean>(false)\r\n  const [isEdittingBioContent, setIsEdittingBioContent] = useState<string>('')\r\n  const [bio, setBio] = useState<string>('')\r\n\r\n  //*! LIMIT POSTS */\r\n  useEffect(() => {\r\n    if (currentUserInfo) {\r\n      const postsRef = collection(db, 'posts')\r\n      const q = query(postsRef, where('userID', '==', currentUserInfo.uid))\r\n      getDocs(q).then(posts => {\r\n        postsNumLimit >= posts.size\r\n          ? setHasShownAllPosts(true)\r\n          : setHasShownAllPosts(false)\r\n      })\r\n    }\r\n  }, [currentUserInfo, postsNumLimit, userPosts])\r\n  //*! LIMIT POSTS END */\r\n\r\n  useEffect(() => {\r\n    getDoc(doc(db, 'users', userID)).then(userSnap => {\r\n      const userInfo = userSnap.data()\r\n      setUserInfo(userInfo)\r\n    })\r\n    Storage.updatePhotoURL(userID, setUserAvatarURL, setCoverImageURL)\r\n    // * SET USER PHOTO/\r\n    const fileRef = ref(storage, `users/${userID}/avatar`)\r\n    getDownloadURL(fileRef).then(url => setUserAvatarURL(url))\r\n    // * SET USER PHOTO END/\r\n  }, [userID])\r\n\r\n  //*! RENDER POSTS START */\r\n  useEffect(() => {\r\n    const postsRef = collection(db, 'posts')\r\n    const q = query(\r\n      postsRef,\r\n      where('userID', '==', userID),\r\n      orderBy('date', 'desc'),\r\n      limit(postsNumLimit)\r\n    )\r\n    const unsub = DB.setSnapshotListener(q, setUserPosts)\r\n    console.log('profile renders')\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [postsNumLimit, userID])\r\n  const renderPosts = userPosts?.map((p: any) => (\r\n    <Post\r\n      key={p.id}\r\n      postID={p.id}\r\n      userID={p.userID}\r\n      full_name={p.fullname}\r\n      date={p.date}\r\n      content={p.content}\r\n      likes={p.likes}\r\n      photo={p.photo}\r\n      is_profile_page={true}\r\n    />\r\n  ))\r\n  //*! RENDER POSTS END */\r\n\r\n  //*! EFFECTS START */\r\n  //* width size query for the edit cover photo button */\r\n  const size: Size = useWindowSize()\r\n  useEffect(() => {\r\n    const { width } = size\r\n    if (width !== undefined && width <= 900) {\r\n      setEditCoverPhotoHidden(true)\r\n    } else setEditCoverPhotoHidden(false)\r\n  }, [size])\r\n  //* get dorminant color of cover photo */\r\n  useEffect(() => {\r\n    const colorThief = new ColorThief()\r\n    const img: any = document.querySelector('#get-dominant-clr')\r\n    img.onload = () => {\r\n      const color = colorThief.getColor(img).toString()\r\n      setBgGradient(color)\r\n    }\r\n  }, [isUserSignedIn])\r\n  const googleProxyURL =\r\n    'https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&refresh=2592000&url='\r\n  //? proxy server produces a more liberal CORS policy */\r\n  const userCover = googleProxyURL + encodeURIComponent(userCoverImgURL)\r\n  const defaultCover = googleProxyURL + encodeURIComponent(defaultCoverImage)\r\n  const renderCoverPhoto = (\r\n    <img\r\n      src={userCoverImgURL ? userCover : defaultCover}\r\n      crossOrigin='anonymous'\r\n      id='get-dominant-clr'\r\n    />\r\n  )\r\n  //*! EFFECTS END */\r\n\r\n  const updatePhoto = (e: any) => {\r\n    const file = e.target.files[0]\r\n    if (file) {\r\n      const isAvatar = e.target.id === 'avatar'\r\n      const folderName = isAvatar ? 'avatar' : 'cover_image'\r\n      const fileRef = ref(storage, `users/${userID}/${folderName}`)\r\n      deleteObject(fileRef).catch(e => console.log(e))\r\n      uploadBytes(fileRef, file).then(() =>\r\n        getDownloadURL(fileRef).then(url =>\r\n          isAvatar\r\n            ? userID === currentUserInfo?.uid\r\n              ? setCUAvatarURL(url)\r\n              : setUserAvatarURL(url)\r\n            : setCoverImageURL(url)\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDoc(doc(db, 'users', userID)).then((user: any) =>\r\n      setBio(user.data().short_bio)\r\n    )\r\n  }, [])\r\n\r\n  const updateBio = (e: any) => {\r\n    if (e.keyCode === 13) {\r\n      DB.updateUserInfo(currentUserInfo?.uid, {\r\n        short_bio: isEdittingBioContent,\r\n      })\r\n      setBio(isEdittingBioContent)\r\n      setIsEdittingBio(false)\r\n    } else if (e.keyCode == 27) setIsEdittingBio(false)\r\n  }\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      bgGradient={bgGradient}\r\n      editCoverPhotoHidden={editCoverPhotoHidden}\r\n    >\r\n      <header>\r\n        <div id='cover-image'>\r\n          {renderCoverPhoto}\r\n          <div className='avatar'>\r\n            <img\r\n              src={\r\n                userID === currentUserInfo?.uid\r\n                  ? CUAvatarURL || defaultAvatar\r\n                  : userAvatarURL || defaultAvatar\r\n              }\r\n              alt='avatar'\r\n            />\r\n            {userID === currentUserInfo?.uid && (\r\n              <label className='update-avatar'>\r\n                <input\r\n                  onChange={updatePhoto}\r\n                  id='avatar'\r\n                  type='file'\r\n                  accept='image/*'\r\n                  style={{ display: 'none' }}\r\n                />\r\n                {toggleState.isDarkTheme ? (\r\n                  <AiFillCamera className='icon' style={{ fill: 'white' }} />\r\n                ) : (\r\n                  <AiOutlineCamera className='icon' />\r\n                )}\r\n              </label>\r\n            )}\r\n          </div>\r\n          {userID === currentUserInfo?.uid && (\r\n            <label className='edit-cover-photo'>\r\n              <input\r\n                onChange={updatePhoto}\r\n                id='cover'\r\n                type='file'\r\n                accept='image/*'\r\n                style={{ display: 'none' }}\r\n              />\r\n              <AiFillCamera className='icon' /> <span>Edit Cover Photo</span>\r\n            </label>\r\n          )}\r\n        </div>\r\n\r\n        <div id='intro'>\r\n          <div className='name'>\r\n            {userInfo\r\n              ? `${userInfo.first_name} ${userInfo.last_name}`\r\n              : 'default name'}\r\n          </div>\r\n          <div className='short-description'>\r\n            {isEdittingBio ? (\r\n              <>\r\n                <textarea\r\n                  rows={3}\r\n                  maxLength={150}\r\n                  value={isEdittingBioContent}\r\n                  onChange={e => setIsEdittingBioContent(e.target.value)}\r\n                  onKeyDown={updateBio}\r\n                  autoFocus\r\n                  onFocus={e =>\r\n                    e.currentTarget.setSelectionRange(\r\n                      e.currentTarget.value.length,\r\n                      e.currentTarget.value.length\r\n                    )\r\n                  }\r\n                ></textarea>\r\n                <div className='cancel'>\r\n                  <span onClick={() => setIsEdittingBio(false)}>Cancel</span> or\r\n                  press Esc to cancel\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className='bio'>{bio}</span>\r\n                {userID === currentUserInfo?.uid && (\r\n                  <div\r\n                    className='pen'\r\n                    onClick={() => {\r\n                      setIsEdittingBio(true)\r\n                      setIsEdittingBioContent(bio)\r\n                    }}\r\n                  >\r\n                    <AiOutlineEdit className='icon' />\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        {userID === currentUserInfo?.uid && <WhatsOnYourMind />}\r\n        {renderPosts}\r\n        {hasShownAllPosts || (\r\n          <ShowMoreButton\r\n            addMorePosts={() => {\r\n              setPostsNumLimit(postsNumLimit + 5)\r\n            }}\r\n          />\r\n        )}\r\n      </main>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  bgGradient: string\r\n  editCoverPhotoHidden: boolean\r\n  isDarkTheme: number\r\n}>`\r\n  color: ${p => p.theme.font};\r\n  padding-bottom: 2rem;\r\n  display: flex;\r\n  flex-flow: column;\r\n  header {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(${p => p.bgGradient}) 0%,\r\n      ${p => p.theme.main_bgclr} 70%\r\n    );\r\n    #cover-image {\r\n      position: relative;\r\n      width: 90rem;\r\n      max-width: 100%;\r\n      aspect-ratio: 5/2;\r\n      margin-inline: auto;\r\n      & > img {\r\n        border-radius: 0 0 10px 10px;\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n        object-position: 50% 50%;\r\n      }\r\n      .avatar {\r\n        position: absolute;\r\n        bottom: -4rem;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        width: 15rem;\r\n        height: 15rem;\r\n        padding: 0.5rem;\r\n        background-color: ${p => p.theme.main_bgclr};\r\n        border-radius: 50%;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          ${imageObjectSettings};\r\n        }\r\n        .update-avatar {\r\n          position: absolute;\r\n          right: 1.1rem;\r\n          bottom: 1.1rem;\r\n          padding: 0.5rem;\r\n          border-radius: 50%;\r\n          background-color: ${p => p.theme.avatar_pic_cam_icon_bgclr};\r\n          :hover {\r\n            cursor: pointer;\r\n            filter: brightness(1.1);\r\n          }\r\n          .icon {\r\n            height: 2rem;\r\n            width: 2rem;\r\n          }\r\n        }\r\n      }\r\n      .edit-cover-photo {\r\n        color: black;\r\n        position: absolute;\r\n        right: 2rem;\r\n        bottom: 3rem;\r\n        background-color: white;\r\n        padding: 0.5rem 1rem;\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap: 1rem;\r\n        border-radius: 7px;\r\n        :hover {\r\n          cursor: pointer;\r\n          filter: brightness(0.95);\r\n        }\r\n        .icon {\r\n          height: 1.5rem;\r\n          width: 1.5rem;\r\n        }\r\n        span {\r\n          font-size: 1rem;\r\n          font-weight: 700;\r\n          display: ${p => (p.editCoverPhotoHidden ? 'none' : 'block')};\r\n        }\r\n      }\r\n    }\r\n    #intro {\r\n      padding: 5rem 2rem 2rem;\r\n      text-align: center;\r\n      .name {\r\n        font-size: 2.75rem;\r\n        font-weight: 800;\r\n      }\r\n      .short-description {\r\n        padding-top: 1rem;\r\n        font-size: 1.5rem;\r\n        .bio {\r\n          margin-right: 1rem;\r\n        }\r\n        textarea {\r\n          font-family: inherit;\r\n          color: ${p => p.theme.font};\r\n          border: none;\r\n          outline: none;\r\n          width: 65rem;\r\n          max-width: 100%;\r\n          padding: 1rem 1.5rem;\r\n          font-size: 1.5rem;\r\n          border-radius: 2rem;\r\n          background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n          resize: none;\r\n          overflow: hidden;\r\n          text-align: center;\r\n          :hover {\r\n            cursor: text;\r\n            filter: brightness(${p => (p.isDarkTheme ? '1.1' : '0.95')});\r\n          }\r\n          ::placeholder {\r\n            color: ${p => p.theme.font_lighter};\r\n          }\r\n        }\r\n        .cancel {\r\n          font-size: 1.25rem;\r\n          margin-top: 1rem;\r\n          span {\r\n            color: #036ee2;\r\n            :hover {\r\n              cursor: pointer;\r\n              text-decoration: underline;\r\n            }\r\n          }\r\n        }\r\n        .pen {\r\n          display: inline-block;\r\n          padding: 0.5rem;\r\n          border-radius: 50%;\r\n          color: ${p => p.theme.font};\r\n          :hover {\r\n            background-color: ${p => p.theme.theme_toggler_bgclr};\r\n            cursor: pointer;\r\n          }\r\n          .icon {\r\n            font-size: 1.5rem;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  main {\r\n    display: flex;\r\n    flex-flow: column;\r\n  }\r\n`\r\n\r\nexport default ProfilePage\r\n","import { useState, useEffect } from 'react'\r\n// Define general type for useWindowSize hook, which includes width and height\r\nexport interface Size {\r\n  width: number | undefined\r\n  height: number | undefined\r\n}\r\n\r\n// Usage\r\n// function App() {\r\n//   const size: Size = useWindowSize()\r\n//   return (\r\n//     <div>\r\n//       {size.width}px / {size.height}px\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// Hook\r\nexport default function useWindowSize(): Size {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<Size>({\r\n    width: undefined,\r\n    height: undefined,\r\n  })\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n    }\r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize)\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize()\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, []) // Empty array ensures that effect is only run on mount\r\n  return windowSize\r\n}\r\n","import { useContext } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport { FaMoon, FaSun } from 'react-icons/fa'\r\nimport { GoSignOut, GoSignIn } from 'react-icons/go'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { Authen, DB } from '../../firebaseConfig'\r\nimport { useHistory } from 'react-router'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\n\r\nconst DropDownMenu: React.FC<any> = () => {\r\n  const {\r\n    currentUserInfo,\r\n    CUAvatarURL,\r\n    isUserSignedIn,\r\n    toggleState,\r\n    dispatchToggle,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n\r\n  const history = useHistory()\r\n  const returnToHomepage = () => {\r\n    history.push('/faekbook/')\r\n  }\r\n\r\n  const handleToggleTheme = () => {\r\n    dispatchToggle({ type: 'TOGGLE_THEME' })\r\n    isUserSignedIn &&\r\n      DB.updateUserInfo(currentUserInfo?.uid, {\r\n        is_dark_theme: !toggleState.isDarkTheme,\r\n      })\r\n    dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n  }\r\n\r\n  const renderAvatar = (\r\n    <img\r\n      src={isUserSignedIn ? CUAvatarURL || defaultAvatar : defaultAvatar}\r\n      alt='avatar'\r\n    />\r\n  )\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isUserSignedIn={isUserSignedIn ? 1 : 0}\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <Link\r\n        to={`/faekbook/${currentUserInfo?.uid}`}\r\n        onClick={() =>\r\n          isUserSignedIn && dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n        }\r\n      >\r\n        <div className='profile'>\r\n          {renderAvatar}\r\n          <div className='name'>\r\n            <span>\r\n              {isUserSignedIn && currentUserInfo\r\n                ? `${currentUserInfo.first_name} ${currentUserInfo.last_name}`\r\n                : 'User'}\r\n            </span>\r\n            <span>{isUserSignedIn ? 'See your profile' : 'Please log in'}</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className='divider' />\r\n\r\n      <div className='theme-toggler' onClick={handleToggleTheme}>\r\n        <div className='icon'>\r\n          {toggleState.isDarkTheme ? <FaSun /> : <FaMoon />}\r\n        </div>\r\n        Change to {toggleState.isDarkTheme ? 'Light' : 'Dark'} theme\r\n      </div>\r\n\r\n      <div\r\n        className='log-in-out'\r\n        onClick={() => {\r\n          dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          isUserSignedIn\r\n            ? (() => {\r\n                Authen.signOut()\r\n                returnToHomepage()\r\n              })()\r\n            : dispatchDimBgModal({ type: 'LOG_IN' })\r\n        }}\r\n      >\r\n        <div className='icon'>\r\n          {isUserSignedIn ? <GoSignOut /> : <GoSignIn />}\r\n        </div>\r\n        Log {isUserSignedIn ? 'Out' : 'In'}\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{ isUserSignedIn: number }>`\r\n  position: fixed;\r\n  right: 1rem;\r\n  top: 5rem;\r\n  width: 30rem;\r\n  padding: 1rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  /* profile, theme-toggler and log-in-out */\r\n  a > .profile,\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    :hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n  }\r\n  /* profile */\r\n  a {\r\n    text-decoration: none;\r\n    pointer-events: ${p => (p.isUserSignedIn ? 'auto' : 'none')};\r\n    .profile {\r\n      opacity: ${p => (p.isUserSignedIn ? '100%' : '30%')};\r\n      img {\r\n        height: 5rem;\r\n        background: ${p => p.theme.theme_toggler_bgclr};\r\n        ${imageObjectSettings}\r\n      }\r\n      .name {\r\n        display: flex;\r\n        flex-flow: column;\r\n        justify-content: space-evenly;\r\n        span:first-of-type {\r\n          font-size: 1.3rem;\r\n          font-weight: 600;\r\n          color: ${p => p.theme.font};\r\n        }\r\n        span:last-of-type {\r\n          font-size: 1.1375rem;\r\n          color: ${p => p.theme.font_lighter};\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .divider {\r\n    margin-block: 0.5rem;\r\n    height: 2px;\r\n    width: 100%;\r\n    background: ${p => p.theme.divider_clr};\r\n  }\r\n  /* theme-toggler and log-in-out */\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    .icon {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      font-size: 2rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n    }\r\n  }\r\n  .theme-toggler {\r\n    .icon {\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n  .log-in-out {\r\n    .icon {\r\n      position: relative;\r\n      svg {\r\n        position: absolute;\r\n        top: 0.7rem;\r\n        left: ${p => (p.isUserSignedIn ? '0.7rem' : '0.5rem')};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default DropDownMenu\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport TurnOffModalButton from '../../utils/TurnOffModalButton'\r\nimport {\r\n  customizedScrollBar,\r\n  imageObjectSettings,\r\n  themes,\r\n} from '../../utils/themes'\r\nimport { PostType } from '../../interface'\r\nimport { db, storage } from '../../firebaseConfig'\r\nimport { addDoc, collection, Timestamp } from '@firebase/firestore'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\nimport { IoClose, IoImages } from 'react-icons/io5'\r\nimport { getDownloadURL, ref, uploadBytes } from '@firebase/storage'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport default function CreatePost() {\r\n  const { currentUserInfo, toggleState, dispatchDimBgModal, CUAvatarURL } =\r\n    useContext(Context)\r\n  const [content, setContent] = useState<string>('')\r\n  const [previewPhoto, setPreviewPhoto] = useState<any>()\r\n\r\n  const addPostToDB = (url = '') => {\r\n    const post: PostType = {\r\n      userID: currentUserInfo.uid,\r\n      fullname: currentUserInfo.first_name + ' ' + currentUserInfo.last_name,\r\n      date: Timestamp.fromDate(new Date()),\r\n      content,\r\n      photo: url,\r\n      likes: [],\r\n      comments: [],\r\n    }\r\n    addDoc(collection(db, 'posts'), post)\r\n    dispatchDimBgModal({ type: 'NONE' })\r\n  }\r\n\r\n  const addPost = () => {\r\n    if (previewPhoto) {\r\n      const id = uuid()\r\n      const fileRef = ref(storage, `post_photos/${id}`)\r\n      uploadBytes(fileRef, previewPhoto).then(() => {\r\n        getDownloadURL(fileRef).then(url => {\r\n          addPostToDB(url)\r\n        })\r\n      })\r\n    } else addPostToDB()\r\n  }\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      textSmallSize={content.length > 40 ? 1 : 0}\r\n      postButtonActivated={content.length > 0 ? 1 : 0}\r\n    >\r\n      <div id='create-post'>\r\n        Create Post\r\n        <TurnOffModalButton />\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='user'>\r\n        <img src={CUAvatarURL || defaultAvatar} alt='my_avatar' />\r\n        <div className='name'>\r\n          {currentUserInfo &&\r\n            `${currentUserInfo.first_name} ${currentUserInfo.last_name}`}\r\n        </div>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"What's on your mind?\"\r\n        onChange={e => setContent(e.target.value)}\r\n        autoFocus\r\n      />\r\n      <div id='photo'>\r\n        <div className='buttons'>\r\n          <label className='upload-photo'>\r\n            <input\r\n              onChange={(e: any) => setPreviewPhoto(e.target.files[0])}\r\n              type='file'\r\n              accept='image/*'\r\n              style={{ display: 'none' }}\r\n            />\r\n            <IoImages />\r\n          </label>\r\n          {previewPhoto && (\r\n            <div className='cancel-photo' onClick={() => setPreviewPhoto('')}>\r\n              <IoClose />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {previewPhoto && (\r\n          <div className='preview'>\r\n            <img src={URL.createObjectURL(previewPhoto)} alt='preview' />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div id='post-button'>\r\n        <button disabled={content.length === 0} onClick={addPost}>\r\n          Post\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  isDarkTheme: number\r\n  textSmallSize: number\r\n  postButtonActivated: number\r\n}>`\r\n  width: 50rem;\r\n  max-width: 100vw;\r\n  max-height: 40rem;\r\n  overflow: auto;\r\n  ${customizedScrollBar}\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  border-radius: 10px;\r\n  #user,\r\n  textarea,\r\n  #post-button {\r\n    padding: 1.5rem 1.5rem;\r\n  }\r\n\r\n  #create-post {\r\n    line-height: 5.5rem;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    font-weight: 700;\r\n    height: 5.5rem;\r\n    position: relative;\r\n    #turn-off-modal {\r\n      top: 0;\r\n    }\r\n  }\r\n  #user {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .name {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    padding-top: 0;\r\n    background-color: inherit;\r\n    font-family: inherit;\r\n    font-size: ${p => (p.textSmallSize ? '1.5rem' : '2.5rem')};\r\n    display: block;\r\n    border: none;\r\n    outline: none;\r\n    width: 100%;\r\n    min-height: 10rem;\r\n    resize: none;\r\n    color: ${p => p.theme.font};\r\n    overflow-y: auto;\r\n    white-space: pre-wrap;\r\n    ${customizedScrollBar}\r\n  }\r\n  #photo {\r\n    position: relative;\r\n    min-height: 6rem;\r\n    margin-inline: auto;\r\n    width: 95%;\r\n    .buttons {\r\n      position: absolute;\r\n      width: 100%;\r\n      display: flex;\r\n      padding-top: 1rem;\r\n      padding-right: 1rem;\r\n      column-gap: 1rem;\r\n      justify-content: end;\r\n      .upload-photo,\r\n      .cancel-photo {\r\n        border-radius: 50%;\r\n        height: 3.5rem;\r\n        width: 3.5rem;\r\n        display: grid;\r\n        place-items: center;\r\n        font-size: 2rem;\r\n        color: #45bd62;\r\n        background-color: ${p => p.theme.theme_toggler_bgclr};\r\n        :hover {\r\n          cursor: pointer;\r\n          filter: brightness(\r\n            ${p => (p.theme.type === 'light' ? '0.9' : '1.3')}\r\n          );\r\n        }\r\n      }\r\n      .cancel-photo {\r\n        color: ${p => p.theme.font};\r\n        font-size: 2.5rem;\r\n      }\r\n    }\r\n    .preview {\r\n      margin-top: 2rem;\r\n      img {\r\n        width: 100%;\r\n        border-radius: 15px;\r\n      }\r\n    }\r\n  }\r\n  #post-button {\r\n    button {\r\n      width: 100%;\r\n      height: 3.5rem;\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      margin-inline: auto;\r\n      border: none;\r\n      color: ${p => (p.postButtonActivated ? 'white' : '#858686')};\r\n      background-color: ${p =>\r\n        p.postButtonActivated\r\n          ? '#2D88FF'\r\n          : p.isDarkTheme\r\n          ? '#505151'\r\n          : '#e4e6eb'};\r\n      :hover {\r\n        cursor: ${p => (p.postButtonActivated ? 'pointer' : 'not-allowed')};\r\n      }\r\n    }\r\n  }\r\n\r\n  .divider {\r\n    background-color: ${p => (p.isDarkTheme ? '#424242' : '#dddfe2')};\r\n    margin-inline: auto;\r\n    height: 2px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport TurnOffModalButton from '../../utils/TurnOffModalButton'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { PostType } from '../../interface'\r\nimport { db } from '../../firebaseConfig'\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  Timestamp,\r\n  updateDoc,\r\n} from '@firebase/firestore'\r\nimport { defaultAvatar } from '../../utils/defaultPhotos'\r\n\r\nexport default function EditPostModal({ CBEPostID }: { CBEPostID: string }) {\r\n  const [content, setContent] = useState<string>('')\r\n  const beforeEdittedContent = useRef<string>()\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false)\r\n  const { currentUserInfo, toggleState, dispatchDimBgModal, CUAvatarURL } =\r\n    useContext(Context)\r\n\r\n  useEffect(() => {\r\n    getDoc(doc(db, 'posts', CBEPostID)).then(post => {\r\n      const content = post.data()?.content\r\n      beforeEdittedContent.current = content\r\n      setContent(content)\r\n      setIsLoaded(true)\r\n    })\r\n    return () => {\r\n      beforeEdittedContent.current = ''\r\n      setContent('')\r\n      setIsLoaded(false)\r\n    }\r\n  }, [CBEPostID])\r\n\r\n  const updatePost = () => {\r\n    updateDoc(doc(db, 'posts', CBEPostID), { content: content })\r\n    dispatchDimBgModal({ type: 'NONE' })\r\n  }\r\n\r\n  return isLoaded ? (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      textSmallSize={content?.length > 40 ? 1 : 0}\r\n      postButtonActivated={\r\n        content !== beforeEdittedContent.current && content.length !== 0 ? 1 : 0\r\n      }\r\n    >\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Edit Post</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <img src={CUAvatarURL || defaultAvatar} alt='my_avatar' />\r\n        <div className='name'>\r\n          {currentUserInfo &&\r\n            `${currentUserInfo.first_name} ${currentUserInfo.last_name}`}\r\n        </div>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"What's on your mind?\"\r\n        onChange={e => setContent(e.target.value)}\r\n        value={content}\r\n        autoFocus\r\n        onFocus={e =>\r\n          e.currentTarget.setSelectionRange(\r\n            e.currentTarget.value.length,\r\n            e.currentTarget.value.length\r\n          )\r\n        }\r\n      />\r\n      <div className='post-button'>\r\n        <button\r\n          disabled={\r\n            content === beforeEdittedContent.current && content.length === 0\r\n          }\r\n          onClick={updatePost}\r\n        >\r\n          Update Post\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  ) : null\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  isDarkTheme: number\r\n  textSmallSize: number\r\n  postButtonActivated: number\r\n}>`\r\n  width: 50rem;\r\n  max-width: 100vw;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  border-radius: 10px;\r\n  #middle,\r\n  textarea,\r\n  .post-button {\r\n    padding: 1.5rem 1.5rem;\r\n  }\r\n\r\n  #top {\r\n    line-height: 5.5rem;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    font-weight: 700;\r\n    height: 5.5rem;\r\n  }\r\n  #middle {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .name {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    padding-top: 0;\r\n    background-color: inherit;\r\n    font-family: inherit;\r\n    font-size: ${p => (p.textSmallSize ? '1.5rem' : '2.5rem')};\r\n    display: block;\r\n    border: none;\r\n    outline: none;\r\n    width: 100%;\r\n    min-height: 15rem;\r\n    resize: none;\r\n    color: ${p => p.theme.font};\r\n    overflow-y: auto;\r\n    ::-webkit-scrollbar {\r\n      width: 0.75rem;\r\n      border-radius: 3px;\r\n      background-color: rgba(195, 195, 195, 0.3);\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background: rgba(114, 114, 114, 0.5);\r\n      :hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .post-button {\r\n    button {\r\n      width: 100%;\r\n      height: 3.5rem;\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      margin-inline: auto;\r\n      border: none;\r\n      color: ${p => (p.postButtonActivated ? 'white' : '#858686')};\r\n      background-color: ${p =>\r\n        p.postButtonActivated\r\n          ? '#2D88FF'\r\n          : p.isDarkTheme\r\n          ? '#505151'\r\n          : '#e4e6eb'};\r\n      :hover {\r\n        cursor: ${p => (p.postButtonActivated ? 'pointer' : 'not-allowed')};\r\n      }\r\n    }\r\n  }\r\n\r\n  .divider {\r\n    background-color: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')};\r\n    margin-inline: auto;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import styled, { css } from 'styled-components'\r\nimport Navbar from './components/Navbar'\r\nimport { useEffect, useReducer, useState } from 'react'\r\nimport { toggleReducer, authenModalReducer } from './reducers'\r\nimport Context from './utils/Context'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport LogInModal from './components/Modals/LogInModal'\r\nimport SignUpModal from './components/Modals/SignUpModal'\r\nimport { themes } from './utils/themes'\r\nimport MainPage from './components/Body/MainPage'\r\nimport ProfilePage from './components/Body/ProfilePage'\r\nimport DropDownMenu from './components/Modals/DropDownMenu'\r\nimport CreatePost from './components/Modals/CreatePost'\r\nimport { auth, DB, db, Storage } from './firebaseConfig'\r\nimport { onAuthStateChanged } from '@firebase/auth'\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n} from '@firebase/firestore'\r\nimport EditPostModal from './components/Modals/EditPostModal'\r\n\r\nconst App: React.FC<any> = () => {\r\n  const [isUserSignedIn, setIsUserSignedIn] = useState<boolean>()\r\n  const [currentUserInfo, setCurrentUserInfo] = useState<any>(null)\r\n  const [CUAvatarURL, setCUAvatarURL] = useState<any>(null)\r\n  const [toggleState, dispatchToggle] = useReducer(toggleReducer, {\r\n    isDarkTheme: false,\r\n    dropDownMenuIsVisible: false,\r\n  })\r\n  const [dimBgModal, dispatchDimBgModal] = useReducer(authenModalReducer, {\r\n    action: 'close modals',\r\n  })\r\n  //? CBE: Currently Being Editted /\r\n  const [CBEPostID, setCBEPostId] = useState<string>('')\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, async user => {\r\n      if (user) {\r\n        // set sign-in state\r\n        setIsUserSignedIn(true)\r\n        getDoc(doc(db, 'users', user.uid)).then(userSnap => {\r\n          // get current user specific info\r\n          const currentUserInfo = userSnap.data()\r\n          setCurrentUserInfo(currentUserInfo)\r\n          // set theme\r\n          currentUserInfo?.is_dark_theme\r\n            ? dispatchToggle({ type: 'DARK_THEME' })\r\n            : dispatchToggle({ type: 'LIGHT_THEME' })\r\n        })\r\n      } else {\r\n        setIsUserSignedIn(false)\r\n        setCurrentUserInfo(null)\r\n        dispatchToggle({ type: 'LIGHT_THEME' })\r\n      }\r\n    })\r\n  }, [])\r\n  useEffect(() => {\r\n    if (currentUserInfo) {\r\n      const uid = currentUserInfo?.uid\r\n      Storage.updatePhotoURL(uid, setCUAvatarURL)\r\n    }\r\n  }, [currentUserInfo])\r\n\r\n  const renderModal = (dimBgModal: any) => {\r\n    switch (dimBgModal.action) {\r\n      case 'show login modal':\r\n        return <LogInModal />\r\n      case 'show signup modal':\r\n        return <SignUpModal />\r\n      case 'show create-post modal':\r\n        return <CreatePost />\r\n      case 'show edit-post':\r\n        return <EditPostModal CBEPostID={CBEPostID} />\r\n      case 'close modals':\r\n        return\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        isUserSignedIn,\r\n        currentUserInfo,\r\n        toggleState,\r\n        dispatchToggle,\r\n        dimBgModal,\r\n        dispatchDimBgModal,\r\n        CUAvatarURL,\r\n        setCUAvatarURL,\r\n        setCBEPostId,\r\n      }}\r\n    >\r\n      <Router>\r\n        <StyledDiv\r\n          theme={toggleState.isDarkTheme === true ? themes.dark : themes.light}\r\n          authenType={dimBgModal.action}\r\n          toggleState={toggleState}\r\n          onClick={() => {\r\n            toggleState.dropDownMenuIsVisible &&\r\n              dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n            toggleState.postModalIsVisible &&\r\n              dispatchToggle({ type: 'TOGGLE_POST_MODAL' })\r\n          }}\r\n        >\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/faekbook/' component={MainPage} />\r\n            <Route exact path='/faekbook/:userID' component={ProfilePage} />\r\n          </Switch>\r\n          {/* modals */}\r\n          <div className='dim-bg-modal'>{renderModal(dimBgModal)}</div>\r\n          {toggleState.dropDownMenuIsVisible && <DropDownMenu />}\r\n        </StyledDiv>\r\n      </Router>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nconst Screen = css`\r\n  content: '';\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100%;\r\n  z-index: 100;\r\n`\r\n\r\nconst StyledDiv = styled('div')<{ authenType: string; toggleState: any }>`\r\n  position: relative;\r\n  background: ${p => p.theme.body};\r\n  min-height: 100vh;\r\n\r\n  ::after {\r\n    ${p =>\r\n      (p.authenType !== 'close modals' || p.toggleState.createPostIsVisible) &&\r\n      Screen}\r\n    background-color: ${p =>\r\n      p.theme.type === 'dark' ? '#00000063' : '#ffffff92'};\r\n  }\r\n  .dim-bg-modal {\r\n    position: fixed;\r\n    background: white;\r\n    border-radius: 10px;\r\n    top: 12%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    z-index: 200;\r\n    border-radius: 10px;\r\n    box-shadow: ${p => p.theme.bxShdw};\r\n  }\r\n`\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/reset.css'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n       box-sizing: border-box;\n    }\n    html {\n      font-size: 70%;\n      @media (min-width: 768px) {\n        font-size: 80%;\n      }\n      @media (min-width: 1024px) {\n        font-size: 90%;\n      }\n    }\n    body {\n      font-size: 1em;\n      font-family: 'Roboto', sans-serif;\n      user-select: none;\n    }\n    img {\n      border-radius: 50%;\n    }\n  `\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}