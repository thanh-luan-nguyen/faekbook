{"version":3,"sources":["styles/globalValues.ts","utils/Context.ts","utils/themes.ts","utils/defaults.ts","components/Navbar.tsx","reducers/reducers.ts","firebaseConfig.ts","components/Modals/TurnOffModalButton.tsx","components/Modals/LogInModal.tsx","components/Modals/SignUpModal.tsx","utils/BlueBgLikeIcon.tsx","components/Body/Post.tsx","components/Body/WhatsOnYourMind.tsx","components/Body/MainPage.tsx","components/Body/ProfilePage.tsx","hooks/useWindowSize.ts","components/Modals/DropDownMenu.tsx","components/Modals/CreatePost.tsx","App.tsx","index.tsx"],"names":["globalValues","navbar_elements_height","navbar_column_gap","navbar_height","dropdown_menu_bdr_rds","ButtonCSS","css","InputCSS","Context","createContext","themes","light","type","bxShdw","main_bgclr","nav_btm_brdr_clr","font","font_lighter","divider_clr","hover","icon_color","theme_toggler_bgclr","theme_toggler_bgclr_active","theme_toggler_icon_active","body","avatar_pic_cam_icon_bgclr","whats_on_ur_mind_bgclr","dark","imageObjectSettings","defaultAvatar","rotation","keyframes","StyledNav","styled","p","theme","bxShadw","menuVisibility","Navbar","useContext","toggleState","isUserSignedIn","CUAvatarURL","currentUserInfo","dispatchToggle","dispatchDimBgModal","userProfileButton","to","className","src","undefined","alt","first_name","logInButton","onClick","isDarkTheme","dropDownMenuIsVisible","e","stopPropagation","toggleReducer","state","action","authenModalReducer","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","Authen","email","password","firstName","lastName","callback","createUserWithEmailAndPassword","then","userCredential","console","log","uid","user","newUser","last_name","short_bio","is_dark_theme","DB","setUser","signIn","catch","err","alert","code","message","signInWithEmailAndPassword","signOut","currentUser","callback1","callback2","onAuthStateChanged","payload","setDoc","doc","updateDoc","getDoc","userSnap","data","unixSecond","post","toString","merge","Storage","setAvatarURL","setCoverImageURL","avatarRef","ref","coverImageRef","getDownloadURL","url","TurnOffModalButton","StyledSpan","id","span","LogInModal","useState","setEmail","setPassword","StyledDiv","value","onChange","target","placeholder","div","SignUpModal","setFirstName","setLastName","signUp","BlueBgLikeIcon","StyledSection","isLikedByCurrentUser","Post","full_name","date","content","likes","is_profile_page","setIsLiked","hasAtLeastOneLike","setHasAtLeastOneLike","postAvatar","setPostAvatar","useEffect","setPhotosURL","includes","length","format","fromUnixTime","seconds","WhatsOnYourMind","section","MainPage","allPosts","setAllPosts","postsRef","collection","q","query","orderBy","unsub","onSnapshot","posts","postsSnapshot","forEach","push","renderPosts","map","fullname","bgGradient","coverPhoto","editCoverPhotoHidden","ProfilePage","updatePhoto","CUCoverImgURL","setBgGradient","setEditCoverPhotoHidden","colorThief","ColorThief","img","document","querySelector","onload","color","getColor","size","width","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","CUPosts","setCUPosts","where","postsSnapShot","renderBgGradientColor","crossOrigin","accept","capture","style","display","fill","DropDownMenu","history","useHistory","renderAvatar","updateUserInfo","CreatePost","setContent","textSmallSize","postButtonActivated","autoFocus","disabled","Timestamp","fromDate","Date","comments","addDoc","Screen","authenType","createPostIsVisible","App","setIsUserSignedIn","setCurrentUserInfo","useReducer","a","dimBgModal","Provider","isAvatar","file","files","fileName","fileRef","deleteObject","uploadBytes","exact","path","component","renderModal","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86d01220.chunk.js","sourcesContent":["import { css } from 'styled-components'\r\n\r\nconst globalValues = {\r\n  navbar_elements_height: '3rem',\r\n  navbar_column_gap: '1rem',\r\n  navbar_height: '4.5rem',\r\n  dropdown_menu_bdr_rds: '10px',\r\n  ButtonCSS: css`\r\n    font-size: inherit;\r\n    border-radius: 0.5rem;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: white;\r\n    background-color: #42b72a;\r\n    width: 100%;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n  InputCSS: css`\r\n    outline: none;\r\n    border: 1px solid #dddfe2;\r\n    border-radius: 0.5rem;\r\n    width: 100%;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    &::placeholder {\r\n      color: #90949c;\r\n      font-weight: 100;\r\n    }\r\n  `,\r\n}\r\n\r\nexport default globalValues\r\n","import { createContext } from 'react'\r\n\r\n// interface ContextInterface {\r\n//   currentUserEmail: any\r\n//   setCurrentEmail: any\r\n//   currentUserInfoState: any\r\n//   setCurrentUserInfoState: any\r\n//   handleSignIn: any\r\n//   toggleState: any\r\n//   dispatchToggle: any\r\n//   isSignedIn: any\r\n//   dispatchSignInOut: any\r\n//   dimBgModal: any\r\n//   dispatchDimBgModal: any\r\n//   handleSignOut: any\r\n// }\r\n\r\nconst Context = createContext({} as any)\r\n\r\nexport default Context\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const themes = {\r\n  light: {\r\n    type: 'light',\r\n\r\n    bxShdw:\r\n      'rgba(50, 50, 93, 0.25) 0 0 5px -1px, rgba(0, 0, 0, 0.3) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#fff',\r\n    nav_btm_brdr_clr: '#fff',\r\n    // fb_icon: '#000',\r\n    font: '#050505',\r\n    font_lighter: '#65676b',\r\n    // menu\r\n    divider_clr: '#ced0d4',\r\n    hover: '#d4d4d434',\r\n    icon_color: '#1d1f23',\r\n    theme_toggler_bgclr: '#e6e8ed',\r\n    theme_toggler_bgclr_active: '#E7F3FF',\r\n    theme_toggler_icon_active: '#0571ED',\r\n\r\n    // body\r\n    body: '#f0f2f5',\r\n\r\n    avatar_pic_cam_icon_bgclr: '#e4e6eb',\r\n\r\n    whats_on_ur_mind_bgclr: '#F0F2F5',\r\n  },\r\n  dark: {\r\n    type: 'dark',\r\n\r\n    bxShdw:\r\n      'rgba(255, 255, 255) 0 0 5px -1px, rgba(255, 255, 255) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#242526',\r\n    nav_btm_brdr_clr: '#393a3b',\r\n    // fb_icon: '#fff',\r\n    font: '#e4e6eb',\r\n    font_lighter: '#b0b3b8',\r\n    // menu\r\n    divider_clr: '#3e4042',\r\n    hover: '#ffffff45',\r\n    icon_color: '#e4e6ea',\r\n    theme_toggler_bgclr: '#4e5052',\r\n    theme_toggler_bgclr_active: '#263951',\r\n    theme_toggler_icon_active: '#2D86FF',\r\n    // body\r\n    body: '#18191a',\r\n\r\n    avatar_pic_cam_icon_bgclr: '#3a3b3c',\r\n\r\n    whats_on_ur_mind_bgclr: '#3A3B3C',\r\n  },\r\n}\r\n\r\nexport const imageObjectSettings = css`\r\n  aspect-ratio: 1/1;\r\n  object-fit: cover;\r\n  object-position: 50% 20%;\r\n`\r\n","export const defaultAvatar =\r\n  'https://firebasestorage.googleapis.com/v0/b/faekbook1-aa0f8.appspot.com/o/defaults%2FdefaultAvatar.png?alt=media&token=a153e1b2-261c-4c56-a516-27a85bac7ec6'\r\nexport const defaultCoverImage =\r\n  'https://firebasestorage.googleapis.com/v0/b/faekbook1-aa0f8.appspot.com/o/defaults%2FdefaultCoverImage.gif?alt=media&token=458194b5-739b-4fd8-ae77-13ba5fb5dc13'\r\n","import styled, { keyframes } from 'styled-components'\r\nimport globalValues from '../styles/globalValues'\r\nimport { FaFacebook } from 'react-icons/fa'\r\nimport { MdArrowDropDown } from 'react-icons/md'\r\nimport Context from '../utils/Context'\r\nimport React, { useContext } from 'react'\r\n// import DropDownMenu from './Modals/DropDownMenu'\r\nimport { imageObjectSettings, themes } from '../utils/themes'\r\nimport { Link } from 'react-router-dom'\r\nimport { Authen } from '../firebaseConfig'\r\nimport { useEffect } from 'react'\r\nimport { defaultAvatar } from '../utils/defaults'\r\n\r\nconst Navbar: React.FC<any> = () => {\r\n  const {\r\n    toggleState,\r\n    isUserSignedIn,\r\n    CUAvatarURL,\r\n    currentUserInfo,\r\n    dispatchToggle,\r\n    // dispatchSignInOut,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n\r\n  // useEffect(() => {\r\n  //   Authen.handleSignInOutState(\r\n  //     () => dispatchSignInOut({ type: 'SIGN_IN' }),\r\n  //     () => dispatchSignInOut({ type: 'SIGN_OUT' })\r\n  //   )\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [])\r\n\r\n  const userProfileButton = (\r\n    <Link to='/faekbook/profile'>\r\n      <div className='user-profile-button'>\r\n        <img\r\n          src={isUserSignedIn ? CUAvatarURL || defaultAvatar : undefined}\r\n          alt='avatar'\r\n        />\r\n        {isUserSignedIn && currentUserInfo?.first_name}\r\n      </div>\r\n    </Link>\r\n  )\r\n\r\n  const logInButton = (\r\n    <div\r\n      className='log-in-button'\r\n      onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}\r\n    >\r\n      Log In\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <StyledNav\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      menuVisibility={toggleState.dropDownMenuIsVisible ? 1 : 0}\r\n    >\r\n      <div className='left'>\r\n        <Link to='/faekbook/'>\r\n          <FaFacebook className='fb-icon' />\r\n        </Link>\r\n        <Link to='/faekbook/'>\r\n          <span className='faekbook'>faekbook</span>\r\n        </Link>\r\n      </div>\r\n      <div className='right'>\r\n        {isUserSignedIn ? userProfileButton : logInButton}\r\n        <div\r\n          className='toggle-dropdown-menu'\r\n          onClick={e => {\r\n            e.stopPropagation()\r\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          }}\r\n        >\r\n          <MdArrowDropDown />\r\n        </div>\r\n      </div>\r\n      {/* {menuVisibility && <DropDownMenu />} */}\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nconst rotation = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(359deg);\r\n  }\r\n`\r\n\r\nconst StyledNav = styled('nav')<{ menuVisibility: number }>`\r\n  position: sticky;\r\n  top: 0;\r\n  background: ${p => p.theme.main_bgclr};\r\n  height: ${globalValues.navbar_height};\r\n  box-shadow: ${p => p.theme.bxShadw};\r\n  border-bottom: 1px solid ${p => p.theme.nav_btm_brdr_clr};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-inline: 1rem;\r\n  z-index: 100;\r\n  .left {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    a {\r\n      text-decoration: none;\r\n      .fb-icon,\r\n      .faekbook {\r\n        color: ${p => p.theme.font};\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .fb-icon {\r\n        height: ${globalValues.navbar_elements_height};\r\n        width: ${globalValues.navbar_elements_height};\r\n        animation: ${rotation} 2s infinite linear;\r\n      }\r\n    }\r\n  }\r\n  .right {\r\n    display: flex;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    .toggle-dropdown-menu {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      background: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_bgclr_active\r\n          : p.theme.theme_toggler_bgclr};\r\n      font-size: ${globalValues.navbar_elements_height};\r\n      color: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_icon_active\r\n          : p.theme.icon_color};\r\n      &:hover {\r\n        cursor: pointer;\r\n        filter: brightness(${p => (p.theme.type === 'light' ? '0.9' : '1.3')});\r\n      }\r\n    }\r\n    a .user-profile-button,\r\n    .log-in-button {\r\n      height: ${globalValues.navbar_elements_height};\r\n      border-radius: 50px;\r\n      display: flex;\r\n      align-items: center;\r\n      font-weight: 700;\r\n      font-size: 1.25rem;\r\n      color: ${p => p.theme.font};\r\n      &:hover {\r\n        cursor: pointer;\r\n        background: ${p =>\r\n          p.menuVisibility\r\n            ? p.theme.theme_toggler_bgclr_active\r\n            : p.theme.theme_toggler_bgclr};\r\n      }\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      .user-profile-button {\r\n        column-gap: 0.6rem;\r\n        padding-left: 0.35rem;\r\n        padding-right: 0.6rem;\r\n        img {\r\n          height: calc(${globalValues.navbar_elements_height} - 0.5rem);\r\n\r\n          background: ${p => p.theme.theme_toggler_bgclr};\r\n          ${imageObjectSettings}\r\n        }\r\n      }\r\n    }\r\n    .log-in-button {\r\n      padding-inline: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Navbar\r\n","export const toggleReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case 'DARK_THEME':\r\n      return { ...state, isDarkTheme: true }\r\n    case 'LIGHT_THEME':\r\n      return { ...state, isDarkTheme: false }\r\n    case 'TOGGLE_THEME':\r\n      return { ...state, isDarkTheme: !state.isDarkTheme }\r\n    case 'TOGGLE_DROP_DOWN_MENU':\r\n      return { ...state, dropDownMenuIsVisible: !state.dropDownMenuIsVisible }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const isSignedInReducer = (state = false, action: any) => {\r\n  switch (action.type) {\r\n    case 'SIGN_IN':\r\n      return true\r\n    case 'SIGN_OUT':\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const authenModalReducer = (\r\n  state = { action: 'close modals' },\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return { action: 'show login modal' }\r\n    case 'SIGN_UP':\r\n      return { action: 'show signup modal' }\r\n    case 'CREATE_POST':\r\n      return { action: 'show create-post modal' }\r\n    case 'NONE':\r\n      return { action: 'close modals' }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// export const currentUserEmailReducer = (state: string | null, action: any) => {\r\n//   switch (action.type) {\r\n//     case 'SET_CURRENT_USER_EMAIL':\r\n//       return action.payload\r\n//     case 'LOG_OUT':\r\n//       return null\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export const userReducer = (state: any, action: any) => {\r\n//   switch (action.type) {\r\n//     case 'ADD_POST':\r\n//       const newPost: Post = {\r\n//         date: new Date(),\r\n//         content: action.payload,\r\n//         likes: 0,\r\n//         comments: [],\r\n//       }\r\n//       const updatedPosts = { ...state.posts, newPost }\r\n//       DB.setUser('thanhluannguyenxyz@gmail.com', updatedPosts)\r\n//       return { ...state, posts: updatedPosts }\r\n//   }\r\n// }\r\n","import { initializeApp } from 'firebase/app'\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  setDoc,\r\n  updateDoc,\r\n} from 'firebase/firestore'\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytes,\r\n  getDownloadURL,\r\n  uploadString,\r\n} from 'firebase/storage'\r\nimport { Post, User } from './types/interface'\r\n\r\nconst app = initializeApp({\r\n  apiKey: 'AIzaSyAowcCuiyILtMdMP96n-RzUh2QVKvrN4OQ',\r\n  authDomain: 'faekbook1-aa0f8.firebaseapp.com',\r\n  projectId: 'faekbook1-aa0f8',\r\n  storageBucket: 'faekbook1-aa0f8.appspot.com',\r\n  messagingSenderId: '989041805197',\r\n  appId: '1:989041805197:web:7661cc2571e3fb3317dfc4',\r\n})\r\n\r\nexport const auth = getAuth()\r\n\r\nexport const db = getFirestore()\r\n\r\nexport const storage = getStorage(app)\r\n\r\nexport class Authen {\r\n  static signUp(\r\n    email: string,\r\n    password: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    callback: any\r\n  ) {\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        console.log('SignUp: ', userCredential)\r\n        const uid = userCredential.user.uid\r\n        const newUser: User = {\r\n          uid: uid,\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          short_bio: 'my bio',\r\n          is_dark_theme: false,\r\n        }\r\n        // const avatarRef = ref(storage, `users/${uid}/avatar`)\r\n        // const coverImgRef = ref(storage, `users/${uid}/cover_image`)\r\n        // const defaultCoverImageURL =\r\n        //   'https://firebasestorage.googleapis.com/v0/b/faekbook1-aa0f8.appspot.com/o/defaults%2FdefaultCoverImage.gif?alt=media&token=458194b5-739b-4fd8-ae77-13ba5fb5dc13'\r\n        // uploadString(coverImgRef, defaultCoverImageURL, 'data_url')\r\n        DB.setUser(uid, newUser)\r\n        Authen.signIn(email, password, callback)\r\n      })\r\n      .catch(err => {\r\n        alert(`Sign up Error: ${err.code}. ${err.message}`)\r\n      })\r\n  }\r\n  static signIn(email: string, password: string, callback: any) {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        callback()\r\n        console.log(\r\n          `User with email ${userCredential.user.email} has logged in successfully`\r\n        )\r\n      })\r\n      .catch(err => alert(`Sign in Error: ${err.code}. ${err.message}`))\r\n  }\r\n  static signOut() {\r\n    signOut(auth)\r\n      .then(() => {\r\n        console.log('signed out successfully')\r\n      })\r\n      .catch(e => {\r\n        alert('Signout failed: ' + e)\r\n      })\r\n  }\r\n  static getUserEmail() {\r\n    const user = auth.currentUser\r\n    if (user !== null) {\r\n      const email = user.email\r\n      return email\r\n    }\r\n  }\r\n  static handleSignInOutState(callback1: any, callback2 = () => {}) {\r\n    onAuthStateChanged(auth, user => {\r\n      if (user) {\r\n        callback1()\r\n      } else {\r\n        callback2()\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport class DB {\r\n  static setUser(uid: string, payload: any) {\r\n    setDoc(doc(db, 'users', uid), payload)\r\n  }\r\n  static updateUserInfo(uid: string, payload: any) {\r\n    updateDoc(doc(db, 'users', uid), payload)\r\n  }\r\n  static async getUser(uid: string) {\r\n    const userSnap = await getDoc(doc(db, 'users', uid))\r\n    return userSnap.data()\r\n  }\r\n  static setPost(unixSecond: number, post: Post) {\r\n    setDoc(doc(db, 'posts', unixSecond.toString()), post, { merge: false })\r\n  }\r\n}\r\n\r\nexport class Storage {\r\n  static setPhotosURL(uid: string, setAvatarURL: any, setCoverImageURL?: any) {\r\n    const avatarRef = ref(storage, `users/${uid}/avatar`)\r\n    const coverImageRef = ref(storage, `users/${uid}/cover_image`)\r\n    getDownloadURL(avatarRef)\r\n      .then(url => {\r\n        setAvatarURL(url)\r\n      })\r\n      .catch(e => console.log(e))\r\n    setCoverImageURL &&\r\n      getDownloadURL(coverImageRef)\r\n        .then(url => setCoverImageURL(url))\r\n        .catch(e => console.log(e))\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\n\r\nexport default function TurnOffModalButton() {\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n  return (\r\n    <StyledSpan\r\n      id='turn-off-modal'\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      onClick={() => dispatchDimBgModal({ type: 'NONE' })}\r\n    >\r\n      +\r\n    </StyledSpan>\r\n  )\r\n}\r\n\r\nconst StyledSpan = styled.span`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1.75rem;\r\n  font-size: 3.5rem;\r\n  transform: rotate(45deg);\r\n  color: ${p => p.theme.font};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebaseConfig'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\n\r\nexport default function LogInModal() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n\r\n  const handleLogIn = () => {\r\n    Authen.signIn(email, password, () => dispatchDimBgModal({ type: 'NONE' }))\r\n    \r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Welcome Back!</div>\r\n        <input\r\n          type='text'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          placeholder='Email or Phone Number'\r\n        />\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder='Password'\r\n        />\r\n        <button className='log-in-btn' onClick={handleLogIn}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>New to Faekbook?</span>\r\n        <button\r\n          className='create-new-acc-btn'\r\n          onClick={() => dispatchDimBgModal({ type: 'SIGN_UP' })}\r\n        >\r\n          Create New Account\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 40rem;\r\n  max-width: 100vw;\r\n  display: flex;\r\n  flex-flow: column;\r\n  padding: 1.5rem;\r\n  #top,\r\n  #bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-flow: column;\r\n    row-gap: 1.25rem;\r\n    font-size: 1.75rem;\r\n  }\r\n  #top {\r\n    div {\r\n      align-self: flex-start;\r\n      font-weight: 500;\r\n      font-size: 2.25rem;\r\n      color: #1c1e21;\r\n      margin: 0.5rem auto 0.75rem 1rem;\r\n    }\r\n    input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .log-in-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 100%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n    margin-block: 2rem;\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    .create-new-acc-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 60%;\r\n    }\r\n  }\r\n`\r\n","import { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebaseConfig'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\n\r\nexport default function SignUpModal() {\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  // const history = useHistory()\r\n  // const returnToHomepage = () => {\r\n  //   history.push('/faekbook/')\r\n  // }\r\n  const {\r\n    toggleState,\r\n    dispatchDimBgModal,\r\n    // setCurrentUserInfoState,\r\n  } = useContext(Context)\r\n  const handleSignUp = () => {\r\n    Authen.signUp(email, password, firstName, lastName, () =>\r\n      dispatchDimBgModal({ type: 'NONE' })\r\n    )\r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Sign Up</div>\r\n        <div>It's quick and easy</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <div className='full-name'>\r\n          <input\r\n            type='text'\r\n            placeholder='First name'\r\n            value={firstName}\r\n            onChange={e => setFirstName(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Last name'\r\n            value={lastName}\r\n            onChange={e => setLastName(e.target.value)}\r\n          />\r\n        </div>\r\n        <input\r\n          type='email'\r\n          placeholder='Email'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        ></input>\r\n        <input\r\n          type='password'\r\n          placeholder='New password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button className='sign-up' onClick={handleSignUp}>\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>Already have an account?</span>\r\n        <button onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 45rem;\r\n  max-width: 100vw;\r\n  #top,\r\n  #middle,\r\n  #bottom {\r\n    padding: 1.5rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 1rem;\r\n    align-items: center;\r\n    & button {\r\n      ${globalValues.ButtonCSS};\r\n    }\r\n  }\r\n  #top {\r\n    align-items: flex-start;\r\n    div:first-of-type {\r\n      font-weight: 600;\r\n      font-size: 3rem;\r\n      color: #1c1e21;\r\n    }\r\n    div:last-of-type {\r\n      color: #6d747c;\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  #middle {\r\n    font-size: 1.5rem;\r\n    & input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .full-name {\r\n      width: 100%;\r\n      display: flex;\r\n      column-gap: 0.75rem;\r\n    }\r\n    button {\r\n      margin-top: 1.5rem;\r\n    }\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    button {\r\n      font-size: 1.5rem;\r\n      width: 50%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","export default function BlueBgLikeIcon() {\r\n  return (\r\n    <img src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 16 16'%3e%3cdefs%3e%3clinearGradient id='a' x1='50%25' x2='50%25' y1='0%25' y2='100%25'%3e%3cstop offset='0%25' stop-color='%2318AFFF'/%3e%3cstop offset='100%25' stop-color='%230062DF'/%3e%3c/linearGradient%3e%3cfilter id='c' width='118.8%25' height='118.8%25' x='-9.4%25' y='-9.4%25' filterUnits='objectBoundingBox'%3e%3cfeGaussianBlur in='SourceAlpha' result='shadowBlurInner1' stdDeviation='1'/%3e%3cfeOffset dy='-1' in='shadowBlurInner1' result='shadowOffsetInner1'/%3e%3cfeComposite in='shadowOffsetInner1' in2='SourceAlpha' k2='-1' k3='1' operator='arithmetic' result='shadowInnerInner1'/%3e%3cfeColorMatrix in='shadowInnerInner1' values='0 0 0 0 0 0 0 0 0 0.299356041 0 0 0 0 0.681187726 0 0 0 0.3495684 0'/%3e%3c/filter%3e%3cpath id='b' d='M8 0a8 8 0 00-8 8 8 8 0 1016 0 8 8 0 00-8-8z'/%3e%3c/defs%3e%3cg fill='none'%3e%3cuse fill='url(%23a)' xlink:href='%23b'/%3e%3cuse fill='black' filter='url(%23c)' xlink:href='%23b'/%3e%3cpath fill='white' d='M12.162 7.338c.176.123.338.245.338.674 0 .43-.229.604-.474.725a.73.73 0 01.089.546c-.077.344-.392.611-.672.69.121.194.159.385.015.62-.185.295-.346.407-1.058.407H7.5c-.988 0-1.5-.546-1.5-1V7.665c0-1.23 1.467-2.275 1.467-3.13L7.361 3.47c-.005-.065.008-.224.058-.27.08-.079.301-.2.635-.2.218 0 .363.041.534.123.581.277.732.978.732 1.542 0 .271-.414 1.083-.47 1.364 0 0 .867-.192 1.879-.199 1.061-.006 1.749.19 1.749.842 0 .261-.219.523-.316.666zM3.6 7h.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-.8a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6z'/%3e%3c/g%3e%3c/svg%3e\" alt='like-icon'/>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BsThreeDots } from 'react-icons/bs'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { AiFillLike } from 'react-icons/ai'\r\nimport { GoComment } from 'react-icons/go'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { format, fromUnixTime } from 'date-fns'\r\nimport BlueBgLikeIcon from '../../utils/BlueBgLikeIcon'\r\nimport Comment from './Comment'\r\nimport { defaultAvatar } from '../../utils/defaults'\r\nimport { Timestamp } from '@firebase/firestore'\r\nimport { Storage } from '../../firebaseConfig'\r\n\r\nconst Post: React.FC<{\r\n  uid: string\r\n  full_name: string\r\n  date: Timestamp\r\n  content: string\r\n  likes: Array<string>\r\n  is_profile_page?: boolean\r\n}> = ({ full_name, uid, date, content, likes, is_profile_page }) => {\r\n  const { currentUserInfo, toggleState, isUserSignedIn, CUAvatarURL } =\r\n    useContext(Context)\r\n  const [isLikedByCurrentUser, setIsLiked] = useState<boolean>(false)\r\n  const [hasAtLeastOneLike, setHasAtLeastOneLike] = useState<boolean>(false)\r\n  // const [isShowingComments, setIsShowingComments] = useState(false)\r\n\r\n  const [postAvatar, setPostAvatar] = useState<any>(null)\r\n  useEffect(() => {\r\n    //? set post avatar\r\n    Storage.setPhotosURL(uid, setPostAvatar)\r\n    //? set like effects\r\n    if (isUserSignedIn) {\r\n      likes.includes(currentUserInfo?.uid)\r\n        ? setIsLiked(true)\r\n        : setIsLiked(false)\r\n    } else setIsLiked(false)\r\n    likes.length >= 1 ? setHasAtLeastOneLike(true) : setHasAtLeastOneLike(false)\r\n  }, [currentUserInfo])\r\n\r\n  return (\r\n    <StyledSection\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      isLikedByCurrentUser={isLikedByCurrentUser ? 1 : 0}\r\n    >\r\n      <div id='user-info'>\r\n        <img\r\n          src={is_profile_page ? CUAvatarURL : postAvatar || defaultAvatar}\r\n          alt='avatar'\r\n        />\r\n        <div className='info'>\r\n          <div className='name'>{full_name}</div>\r\n          <div className='time'>\r\n            {`${format(fromUnixTime(date.seconds), 'yyyy, MMM d')} at ${format(\r\n              fromUnixTime(date.seconds),\r\n              'h:m a'\r\n            )}`}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <main id='content'>{content}</main>\r\n      {hasAtLeastOneLike && (\r\n        <div id='likes'>\r\n          <BlueBgLikeIcon />\r\n          <span>\r\n            {likes.length} {likes}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      <div id='like-comment'>\r\n        <div className='like'>\r\n          <AiFillLike className='icon' />\r\n          <span>Like</span>\r\n        </div>\r\n        <div className='comments'>\r\n          <GoComment className='icon' />\r\n          <span>View Comments</span>\r\n        </div>\r\n      </div>\r\n      {/* <div id='comments'>\r\n        <Comment\r\n          username='Thanh Luan Nguyen'\r\n          content='Lo rem ip sum dol or sit am et cons ect etur adi pis icing elit. Eaque, ten etur rei cie ndis! Vero ut co nsequ untur totam culpa num quam cupi d itate, qui bu sdam delen iti vel eos dolor emque assu me nda dolorum ad sint per fer endis! Eaque, repudia ndae?'\r\n          likes={2}\r\n        />\r\n        <Comment username='Thanh Luan Nguyen' content='lorem ipsun' likes={2} />\r\n      </div> */}\r\n      <div id='comment-input'>\r\n        <img\r\n          src={isUserSignedIn ? CUAvatarURL || defaultAvatar : defaultAvatar}\r\n          alt='avatar'\r\n        />\r\n        <input placeholder='Write a comment...'></input>\r\n      </div>\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled('section')<{\r\n  isDarkTheme: number\r\n  isLikedByCurrentUser: number\r\n}>`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font_lighter};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  padding-bottom: 1.5rem;\r\n  #user-info {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .info {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: space-around;\r\n      height: 3.5rem;\r\n      .name {\r\n        font-size: 1.5rem;\r\n        font-weight: 700;\r\n        color: ${p => p.theme.font};\r\n      }\r\n      .time {\r\n      }\r\n    }\r\n  }\r\n  #content {\r\n    font-size: 1.5rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    word-wrap: break-word;\r\n  }\r\n  #likes {\r\n    padding: 1.5rem 1.5rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 0.5rem;\r\n    img {\r\n      height: 1.75rem;\r\n      width: 1.75rem;\r\n    }\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n  #like-comment {\r\n    border-block: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')} 1px solid;\r\n    margin-top: 1.5rem;\r\n    padding: 0.5rem 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    column-gap: 0.5rem;\r\n    .like,\r\n    .comments {\r\n      height: 3.25rem;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      width: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      column-gap: 0.75rem;\r\n      background-color: ${p => p.theme.main_bgclr};\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n      .icon {\r\n        font-size: 1.75rem;\r\n      }\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: ${p => (p.isDarkTheme ? '#64646471' : '#ebebebae')};\r\n      }\r\n    }\r\n    .like {\r\n      color: ${p => p.isLikedByCurrentUser && '#036ee2'};\r\n    }\r\n  }\r\n  #comments {\r\n    padding: 1.5rem 1.5rem 0;\r\n    margin-bottom: -0.75rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 0.75rem;\r\n  }\r\n  #comment-input {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 3.5rem;\r\n      width: 3.5rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      ${imageObjectSettings}\r\n    }\r\n    input {\r\n      height: 3.5rem;\r\n      color: ${p => p.theme.font};\r\n      border: none;\r\n      outline: none;\r\n      flex-grow: 1;\r\n      padding-left: 1.25rem;\r\n      font-size: 1.5rem;\r\n      border-radius: 2rem;\r\n      background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n      display: flex;\r\n      align-items: center;\r\n      &:hover {\r\n        cursor: text;\r\n        filter: brightness(${p => (p.isDarkTheme ? '1.1' : '0.95')});\r\n      }\r\n      &::placeholder {\r\n        color: ${p => p.theme.font_lighter};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Post\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { defaultAvatar } from '../../utils/defaults'\r\n\r\nexport default function WhatsOnYourMind() {\r\n  const { toggleState, dispatchDimBgModal, isUserSignedIn, CUAvatarURL } =\r\n    useContext(Context)\r\n  return (\r\n    <StyledSection theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <img\r\n        src={isUserSignedIn ? (CUAvatarURL || defaultAvatar):undefined}\r\n        alt='avatar'\r\n      />\r\n      <div onClick={() => dispatchDimBgModal({ type: 'CREATE_POST' })}>\r\n        What's on your mind?\r\n      </div>\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 1rem;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  img {\r\n    height: 4rem;\r\n    width: 4rem;\r\n    background: ${p => p.theme.theme_toggler_bgclr};\r\n    ${imageObjectSettings}\r\n  }\r\n  div {\r\n    color: ${p => p.theme.font_lighter};\r\n    flex-grow: 1;\r\n    padding-left: 2rem;\r\n    font-size: 1.5rem;\r\n    height: 4rem;\r\n    border-radius: 2rem;\r\n    background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    &:hover {\r\n      cursor: pointer;\r\n      filter: brightness(${p => (p.theme.type === 'dark' ? '1.1' : '0.95')});\r\n    }\r\n  }\r\n`\r\n","import {\r\n  collection,\r\n  DocumentData,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n} from '@firebase/firestore'\r\nimport { async } from '@firebase/util'\r\nimport { fromUnixTime } from 'date-fns'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Authen, db, DB } from '../../firebaseConfig'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport Post from './Post'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\n\r\nconst MainPage: React.FC<any> = () => {\r\n  const { toggleState, isUserSignedIn } = useContext(Context)\r\n\r\n  const [allPosts, setAllPosts] = useState<any>(null)\r\n\r\n  useEffect(() => {\r\n    const postsRef = collection(db, 'posts')\r\n    const q = query(postsRef, orderBy('date', 'desc'))\r\n    const unsub = onSnapshot(q, (posts: any) => {\r\n      const postsSnapshot: DocumentData[] = []\r\n      posts.forEach((p: any) => postsSnapshot.push(p.data()))\r\n      setAllPosts(postsSnapshot)\r\n    })\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [])\r\n\r\n  const renderPosts = allPosts?.map((p: any) => (\r\n    <Post\r\n      key={p.date}\r\n      full_name={p.fullname}\r\n      uid={p.uid}\r\n      date={p.date}\r\n      content={p.content}\r\n      likes={p.likes}\r\n      \r\n    />\r\n  ))\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      {isUserSignedIn && <WhatsOnYourMind />}\r\n      {renderPosts}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  color: ${p => p.theme.font};\r\n`\r\n\r\nexport default MainPage\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { defaultAvatar, defaultCoverImage } from '../../utils/defaults'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { AiOutlineCamera, AiFillCamera } from 'react-icons/ai'\r\nimport ColorThief from 'colorthief'\r\nimport useWindowSize, { Size } from '../../hooks/useWindowSize'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\nimport { Authen, db, DB, storage } from '../../firebaseConfig'\r\nimport Post from './Post'\r\nimport {\r\n  collection,\r\n  doc,\r\n  DocumentData,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from '@firebase/firestore'\r\nimport {\r\n  deleteObject,\r\n  getDownloadURL,\r\n  ref,\r\n  uploadBytes,\r\n} from '@firebase/storage'\r\n\r\nconst ProfilePage: React.FC<any> = () => {\r\n  const {\r\n    currentUserInfo,\r\n    toggleState,\r\n    updatePhoto,\r\n    CUAvatarURL,\r\n    CUCoverImgURL,\r\n  } = useContext(Context)\r\n  const [bgGradient, setBgGradient] = useState<string>('')\r\n  const [editCoverPhotoHidden, setEditCoverPhotoHidden] = useState(false)\r\n\r\n  /* get dorminant color of cover photo */\r\n  useEffect(() => {\r\n    const colorThief = new ColorThief()\r\n    const img: any = document.querySelector('#get-dominant-clr')\r\n    img.onload = () => {\r\n      const color = colorThief.getColor(img).toString()\r\n      setBgGradient(color)\r\n    }\r\n  }, [])\r\n\r\n  /* width size query for the edit cover photo button */\r\n  const size: Size = useWindowSize()\r\n  useEffect(() => {\r\n    const { width } = size\r\n    if (width !== undefined && width <= 900) {\r\n      setEditCoverPhotoHidden(true)\r\n    } else setEditCoverPhotoHidden(false)\r\n  }, [size])\r\n\r\n  const [CUPosts, setCUPosts] = useState<any>(null)\r\n\r\n  useEffect(() => {\r\n    const postsRef = collection(db, 'posts')\r\n    const q = query(\r\n      postsRef,\r\n      where('uid', '==', currentUserInfo && currentUserInfo.uid),\r\n      orderBy('date', 'desc')\r\n    )\r\n    const unsub = onSnapshot(q, (posts: any) => {\r\n      const postsSnapShot: DocumentData[] = []\r\n      posts.forEach((p: any) => postsSnapShot.push(p.data()))\r\n      setCUPosts(postsSnapShot)\r\n    })\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [currentUserInfo])\r\n\r\n  const renderPosts = CUPosts?.map((p: any) => (\r\n    <Post\r\n      uid={p.uid}\r\n      key={p.date}\r\n      full_name={p.fullname}\r\n      date={p.date}\r\n      content={p.content}\r\n      likes={p.likes}\r\n      is_profile_page={true}\r\n    />\r\n  ))\r\n\r\n  const renderBgGradientColor = (\r\n    <img\r\n      src='https://www.google.com/photos/static/2020/images/index/tablet.jpg'\r\n      crossOrigin='anonymous'\r\n      // src={currentUserInfo ? currentUserInfo.cover_photo : defaultCoverImageURL}\r\n      alt='colorthief'\r\n      id='get-dominant-clr'\r\n      // style={{ display: 'none' }}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      coverPhoto={CUCoverImgURL ? CUCoverImgURL : defaultCoverImage}\r\n      // coverPhoto={\r\n      //   currentUserInfo ? currentUserInfo.cover_photo : defaultCoverImageURL\r\n      // }\r\n      bgGradient={bgGradient}\r\n      editCoverPhotoHidden={editCoverPhotoHidden}\r\n    >\r\n      <header>\r\n        <div id='cover-picture'>\r\n          {renderBgGradientColor}\r\n          <div className='avatar-picture'>\r\n            <img src={CUAvatarURL ? CUAvatarURL : defaultAvatar} alt='avatar' />\r\n            <label className='update-avatar'>\r\n              <input\r\n                onChange={updatePhoto}\r\n                id='avatar'\r\n                type='file'\r\n                accept='image/*'\r\n                capture='camera'\r\n                style={{ display: 'none' }}\r\n              />\r\n              {toggleState.isDarkTheme ? (\r\n                <AiFillCamera className='icon' style={{ fill: 'white' }} />\r\n              ) : (\r\n                <AiOutlineCamera className='icon' />\r\n              )}\r\n            </label>\r\n          </div>\r\n          <label className='edit-cover-photo'>\r\n            <input\r\n              onChange={updatePhoto}\r\n              id='cover'\r\n              type='file'\r\n              accept='image/*'\r\n              capture='camera'\r\n              style={{ display: 'none' }}\r\n            />\r\n            <AiFillCamera className='icon' /> <span>Edit Cover Photo</span>\r\n          </label>\r\n        </div>\r\n\r\n        <div id='intro'>\r\n          <div className='name'>\r\n            {currentUserInfo\r\n              ? `${currentUserInfo.first_name} ${currentUserInfo.last_name}`\r\n              : 'default name'}\r\n          </div>\r\n          <div className='short-description'>\r\n            {currentUserInfo && currentUserInfo.short_bio}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        <WhatsOnYourMind />\r\n        {renderPosts}\r\n      </main>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  coverPhoto: any\r\n  bgGradient: string\r\n  editCoverPhotoHidden: boolean\r\n}>`\r\n  color: ${p => p.theme.font};\r\n  padding-bottom: 2rem;\r\n  header {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(${p => p.bgGradient}) 0%,\r\n      ${p => p.theme.main_bgclr} 50%\r\n    );\r\n    #cover-picture {\r\n      position: relative;\r\n      background-image: url(${p => p.coverPhoto});\r\n      background-size: cover;\r\n      background-position: 50% 50%;\r\n      width: 90rem;\r\n      max-width: 100%;\r\n      aspect-ratio: 7/3;\r\n      margin-inline: auto;\r\n      border-radius: 0 0 10px 10px;\r\n      .avatar-picture {\r\n        position: absolute;\r\n        bottom: -2rem;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        width: 15rem;\r\n        height: 15rem;\r\n        padding: 0.5rem;\r\n        background-color: ${p => p.theme.main_bgclr};\r\n        border-radius: 50%;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          ${imageObjectSettings};\r\n        }\r\n        .update-avatar {\r\n          position: absolute;\r\n          right: 1.1rem;\r\n          bottom: 1.1rem;\r\n          padding: 0.5rem;\r\n          border-radius: 50%;\r\n          background-color: ${p => p.theme.avatar_pic_cam_icon_bgclr};\r\n          &:hover {\r\n            cursor: pointer;\r\n            filter: brightness(1.1);\r\n          }\r\n          .icon {\r\n            height: 2rem;\r\n            width: 2rem;\r\n          }\r\n        }\r\n      }\r\n      .edit-cover-photo {\r\n        color: black;\r\n        position: absolute;\r\n        right: 2rem;\r\n        bottom: 3rem;\r\n        background-color: white;\r\n        padding: 0.5rem 1rem;\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap: 1rem;\r\n        border-radius: 7px;\r\n        &:hover {\r\n          cursor: pointer;\r\n          filter: brightness(0.95);\r\n        }\r\n        .icon {\r\n          height: 2rem;\r\n          width: 2rem;\r\n        }\r\n        span {\r\n          font-size: 1.2rem;\r\n          font-weight: 700;\r\n          display: ${p => (p.editCoverPhotoHidden ? 'none' : 'block')};\r\n        }\r\n      }\r\n    }\r\n    #intro {\r\n      padding: 3rem 2rem 2rem;\r\n      text-align: center;\r\n      .name {\r\n        font-size: 3.5rem;\r\n        font-weight: 800;\r\n      }\r\n      .short-description {\r\n        padding-top: 1rem;\r\n        font-size: 1.75rem;\r\n      }\r\n    }\r\n  }\r\n  main {\r\n  }\r\n`\r\n\r\nexport default ProfilePage\r\n","import { useState, useEffect } from 'react'\r\n// Define general type for useWindowSize hook, which includes width and height\r\nexport interface Size {\r\n  width: number | undefined\r\n  height: number | undefined\r\n}\r\n\r\n// Usage\r\n// function App() {\r\n//   const size: Size = useWindowSize()\r\n//   return (\r\n//     <div>\r\n//       {size.width}px / {size.height}px\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// Hook\r\nexport default function useWindowSize(): Size {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<Size>({\r\n    width: undefined,\r\n    height: undefined,\r\n  })\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n    }\r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize)\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize()\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, []) // Empty array ensures that effect is only run on mount\r\n  return windowSize\r\n}\r\n","import { useContext } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport { FaMoon, FaSun } from 'react-icons/fa'\r\nimport { GoSignOut, GoSignIn } from 'react-icons/go'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { Authen, DB } from '../../firebaseConfig'\r\nimport { useHistory } from 'react-router'\r\nimport { defaultAvatar } from '../../utils/defaults'\r\n\r\nconst DropDownMenu: React.FC<any> = () => {\r\n  const {\r\n    currentUserInfo,\r\n    CUAvatarURL,\r\n    isUserSignedIn,\r\n    toggleState,\r\n    dispatchToggle,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n  // const isSignedIn = Authen.isUserSignedIn()\r\n\r\n  const history = useHistory()\r\n  const returnToHomepage = () => {\r\n    history.push('/faekbook/')\r\n  }\r\n\r\n  const handleToggleTheme = () => {\r\n    dispatchToggle({ type: 'TOGGLE_THEME' })\r\n    isUserSignedIn &&\r\n      DB.updateUserInfo(currentUserInfo.uid, {\r\n        is_dark_theme: !toggleState.isDarkTheme,\r\n      })\r\n    dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n  }\r\n\r\n  const renderAvatar = <img src={CUAvatarURL || defaultAvatar} alt='avatar' />\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isUserSignedIn={isUserSignedIn ? 1 : 0}\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <Link\r\n        to='/faekbook/profile'\r\n        onClick={() =>\r\n          isUserSignedIn && dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n        }\r\n      >\r\n        <div className='profile'>\r\n          {renderAvatar}\r\n          <div className='name'>\r\n            <span>\r\n              {isUserSignedIn && currentUserInfo\r\n                ? `${currentUserInfo.first_name} ${currentUserInfo.last_name}`\r\n                : 'User'}\r\n            </span>\r\n            <span>{isUserSignedIn ? 'See your profile' : 'Please log in'}</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className='divider' />\r\n\r\n      <div className='theme-toggler' onClick={handleToggleTheme}>\r\n        <div className='icon'>\r\n          {toggleState.isDarkTheme ? <FaSun /> : <FaMoon />}\r\n        </div>\r\n        Change to {toggleState.isDarkTheme ? 'Light' : 'Dark'} theme\r\n      </div>\r\n\r\n      <div\r\n        className='log-in-out'\r\n        onClick={() => {\r\n          dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          isUserSignedIn\r\n            ? (() => {\r\n                Authen.signOut()\r\n                returnToHomepage()\r\n              })()\r\n            : dispatchDimBgModal({ type: 'LOG_IN' })\r\n        }}\r\n      >\r\n        <div className='icon'>\r\n          {isUserSignedIn ? <GoSignOut /> : <GoSignIn />}\r\n        </div>\r\n        Log {isUserSignedIn ? 'Out' : 'In'}\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{ isUserSignedIn: number }>`\r\n  position: fixed;\r\n  right: 1rem;\r\n  top: 5rem;\r\n  width: 30rem;\r\n  padding: 1rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  /* profile, theme-toggler and log-in-out */\r\n  a > .profile,\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    &:hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n  }\r\n  /* profile */\r\n  a {\r\n    text-decoration: none;\r\n    pointer-events: ${p => (p.isUserSignedIn ? 'auto' : 'none')};\r\n    .profile {\r\n      opacity: ${p => (p.isUserSignedIn ? '100%' : '30%')};\r\n      img {\r\n        height: 5rem;\r\n        background: ${p => p.theme.theme_toggler_bgclr};\r\n        ${imageObjectSettings}\r\n      }\r\n      .name {\r\n        display: flex;\r\n        flex-flow: column;\r\n        justify-content: space-evenly;\r\n        span:first-of-type {\r\n          font-size: 1.3rem;\r\n          font-weight: 600;\r\n          color: ${p => p.theme.font};\r\n        }\r\n        span:last-of-type {\r\n          font-size: 1.1375rem;\r\n          color: ${p => p.theme.font_lighter};\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .divider {\r\n    margin-block: 0.5rem;\r\n    height: 2px;\r\n    width: 100%;\r\n    background: ${p => p.theme.divider_clr};\r\n  }\r\n  /* theme-toggler and log-in-out */\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    .icon {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      font-size: 2rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n    }\r\n  }\r\n  .theme-toggler {\r\n    .icon {\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n  .log-in-out {\r\n    .icon {\r\n      position: relative;\r\n      svg {\r\n        position: absolute;\r\n        top: 0.7rem;\r\n        left: ${p => (p.isUserSignedIn ? '0.7rem' : '0.5rem')};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default DropDownMenu\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { format, getUnixTime } from 'date-fns'\r\nimport { Post } from '../../types/interface'\r\nimport { db, DB } from '../../firebaseConfig'\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  serverTimestamp,\r\n  Timestamp,\r\n} from '@firebase/firestore'\r\nimport { defaultAvatar } from '../../utils/defaults'\r\n\r\nexport default function CreatePost() {\r\n  const [content, setContent] = useState<string>('')\r\n  const { currentUserInfo, toggleState, dispatchDimBgModal, CUAvatarURL } =\r\n    useContext(Context)\r\n\r\n  const addPost = () => {\r\n    const post: Post = {\r\n      uid: currentUserInfo.uid,\r\n      fullname: currentUserInfo.first_name + ' ' + currentUserInfo.last_name,\r\n      date: Timestamp.fromDate(new Date()),\r\n      content,\r\n      likes: [],\r\n      comments: [],\r\n    }\r\n\r\n    addDoc(collection(db, 'posts'), post)\r\n\r\n    dispatchDimBgModal({ type: 'NONE' })\r\n  }\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      textSmallSize={content.length > 40 ? 1 : 0}\r\n      postButtonActivated={content.length > 0 ? 1 : 0}\r\n    >\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Create Post</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <img src={CUAvatarURL || defaultAvatar} alt='my_avatar' />\r\n        <div className='name'>\r\n          {currentUserInfo &&\r\n            `${currentUserInfo.first_name} ${currentUserInfo.last_name}`}\r\n        </div>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"What's on your mind?\"\r\n        onChange={e => setContent(e.target.value)}\r\n        autoFocus\r\n      />\r\n      <div className='post-button'>\r\n        <button disabled={content.length === 0} onClick={addPost}>\r\n          Post\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  isDarkTheme: number\r\n  textSmallSize: number\r\n  postButtonActivated: number\r\n}>`\r\n  width: 50rem;\r\n  max-width: 100vw;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  border-radius: 10px;\r\n\r\n  #middle,\r\n  textarea,\r\n  .post-button {\r\n    padding: 1.5rem 1.5rem;\r\n  }\r\n\r\n  #top {\r\n    line-height: 5.5rem;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    font-weight: 700;\r\n    height: 5.5rem;\r\n  }\r\n  #middle {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .name {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    padding-top: 0;\r\n    background-color: inherit;\r\n    font-family: inherit;\r\n    font-size: ${p => (p.textSmallSize ? '1.5rem' : '2.5rem')};\r\n    display: block;\r\n    border: none;\r\n    outline: none;\r\n    width: 100%;\r\n    min-height: 15rem;\r\n    resize: none;\r\n    color: ${p => p.theme.font};\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.75rem;\r\n      border-radius: 3px;\r\n      background-color: rgba(195, 195, 195, 0.3);\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background: rgba(114, 114, 114, 0.5);\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .post-button {\r\n    button {\r\n      width: 100%;\r\n      height: 3.5rem;\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      margin-inline: auto;\r\n      border: none;\r\n      color: ${p => (p.postButtonActivated ? 'white' : '#858686')};\r\n      background-color: ${p =>\r\n        p.postButtonActivated\r\n          ? '#2D88FF'\r\n          : p.isDarkTheme\r\n          ? '#505151'\r\n          : '#e4e6eb'};\r\n      &:hover {\r\n        cursor: ${p => (p.postButtonActivated ? 'pointer' : 'not-allowed')};\r\n      }\r\n    }\r\n  }\r\n\r\n  .divider {\r\n    background-color: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')};\r\n    margin-inline: auto;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import styled, { css } from 'styled-components'\n// import Body from './components/Body/Body'\nimport Navbar from './components/Navbar'\nimport { useEffect, useReducer, useState } from 'react'\nimport {\n  toggleReducer,\n  isSignedInReducer,\n  authenModalReducer,\n} from './reducers/reducers'\nimport Context from './utils/Context'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport LogInModal from './components/Modals/LogInModal'\nimport SignUpModal from './components/Modals/SignUpModal'\nimport { themes } from './utils/themes'\nimport MainPage from './components/Body/MainPage'\nimport ProfilePage from './components/Body/ProfilePage'\nimport DropDownMenu from './components/Modals/DropDownMenu'\nimport CreatePost from './components/Modals/CreatePost'\nimport { auth, db, Storage, storage } from './firebaseConfig'\nimport { getUnixTime } from 'date-fns'\nimport { onAuthStateChanged } from '@firebase/auth'\nimport {\n  collection,\n  doc,\n  DocumentData,\n  getDoc,\n  getDocs,\n  onSnapshot,\n  orderBy,\n  query,\n  where,\n} from '@firebase/firestore'\nimport {\n  deleteObject,\n  getDownloadURL,\n  ref,\n  uploadBytes,\n} from '@firebase/storage'\n\nconst App: React.FC<any> = () => {\n  const [isUserSignedIn, setIsUserSignedIn] = useState<boolean>(false)\n  const [currentUserInfo, setCurrentUserInfo] = useState<any>(null)\n  const [toggleState, dispatchToggle] = useReducer(toggleReducer, {\n    isDarkTheme: false,\n    dropDownMenuIsVisible: false,\n  })\n\n  useEffect(() => {\n    ;(async () => {})()\n    onAuthStateChanged(auth, async user => {\n      if (user) {\n        // set sign-in state\n        setIsUserSignedIn(true)\n        getDoc(doc(db, 'users', user.uid)).then(userSnap => {\n          // get current user specific info\n          const currentUserInfo = userSnap.data()\n          setCurrentUserInfo(currentUserInfo)\n\n          // set theme\n          currentUserInfo?.is_dark_theme\n            ? dispatchToggle({ type: 'DARK_THEME' })\n            : dispatchToggle({ type: 'LIGHT_THEME' })\n        })\n      } else {\n        setIsUserSignedIn(false)\n        setCurrentUserInfo(null)\n        dispatchToggle({ type: 'LIGHT_THEME' })\n      }\n    })\n  }, [])\n\n  const [CUCoverImgURL, setCoverImageURL] = useState<any>(null)\n  const [CUAvatarURL, setAvatarURL] = useState<any>(null)\n\n  const updatePhoto = (e: any) => {\n    const isAvatar = e.target.id === 'avatar'\n    const file = e.target.files[0]\n    const uid = currentUserInfo.uid\n    const fileName = isAvatar ? 'avatar' : 'cover_image'\n    const fileRef = ref(storage, `users/${uid}/${fileName}`)\n    deleteObject(fileRef).catch(e => console.log(e))\n    uploadBytes(fileRef, file).then(() =>\n      getDownloadURL(fileRef).then(url =>\n        isAvatar ? setAvatarURL(url) : setCoverImageURL(url)\n      )\n    )\n  }\n  useEffect(() => {\n    if (currentUserInfo) {\n      ;(async () => {\n        const uid = currentUserInfo.uid\n        Storage.setPhotosURL(uid, setAvatarURL, setCoverImageURL)\n      })()\n    }\n  }, [currentUserInfo])\n\n  const [dimBgModal, dispatchDimBgModal] = useReducer(authenModalReducer, {\n    action: 'close modals',\n  })\n\n  const renderModal = (action: string) => {\n    switch (action) {\n      case 'show login modal':\n        return <LogInModal />\n      case 'show signup modal':\n        return <SignUpModal />\n      case 'show create-post modal':\n        return <CreatePost />\n      case 'close modals':\n        return\n    }\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        isUserSignedIn,\n        currentUserInfo,\n        toggleState,\n        dispatchToggle,\n        dimBgModal,\n        dispatchDimBgModal,\n        updatePhoto,\n        CUCoverImgURL,\n        CUAvatarURL,\n      }}\n    >\n      <Router>\n        <StyledDiv\n          theme={toggleState.isDarkTheme === true ? themes.dark : themes.light}\n          authenType={dimBgModal.action}\n          toggleState={toggleState}\n          onClick={() =>\n            toggleState.dropDownMenuIsVisible &&\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\n          }\n        >\n          <Navbar />\n          <Switch>\n            <Route exact path='/faekbook/' component={MainPage} />\n            <Route exact path='/faekbook/profile' component={ProfilePage} />\n          </Switch>\n          {/* modals */}\n          <div className='dim-bg-modal'>{renderModal(dimBgModal.action)}</div>\n          {toggleState.dropDownMenuIsVisible && <DropDownMenu />}\n        </StyledDiv>\n      </Router>\n    </Context.Provider>\n  )\n}\n\nconst Screen = css`\n  content: '';\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  z-index: 100;\n`\n\nconst StyledDiv = styled('div')<{ authenType: string; toggleState: any }>`\n  position: relative;\n  background: ${p => p.theme.body};\n  min-height: 100vh;\n  &::after {\n    ${p =>\n      (p.authenType !== 'close modals' || p.toggleState.createPostIsVisible) &&\n      Screen}\n    background-color: ${p =>\n      p.theme.type === 'dark' ? '#00000063' : '#ffffff92'};\n  }\n  .dim-bg-modal {\n    position: fixed;\n    background: white;\n    border-radius: 10px;\n    top: 15rem;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 200;\n    border-radius: 10px;\n    box-shadow: ${p => p.theme.bxShdw};\n  }\n`\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles/reset.css'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n       box-sizing: border-box;\n    }\n    html {\n      font-size: 70%;\n      @media (min-width: 768px) {\n        font-size: 80%;\n      }\n      @media (min-width: 1024px) {\n        font-size: 90%;\n      }\n      @media (min-width: 1200px) {\n        font-size: 100%;\n      }\n    }\n    \n    body {\n      font-size: 1em;\n      font-family: 'Roboto', sans-serif;\n      /* user-select: none; */\n    }\n\n    img {\n      border-radius: 50%;\n    }\n  `\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}