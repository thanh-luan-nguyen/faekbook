{"version":3,"sources":["styles/globalValues.ts","utils/Context.ts","utils/themes.ts","utils/defaults.ts","components/Navbar.tsx","reducers/reducers.ts","firebaseConfig.ts","components/Modals/TurnOffModalButton.tsx","components/Modals/LogInModal.tsx","components/Modals/SignUpModal.tsx","utils/BlueBgLikeIcon.tsx","components/Body/Comment.tsx","components/Modals/PostModal.tsx","components/Body/Post.tsx","components/Body/WhatsOnYourMind.tsx","components/Body/MainPage.tsx","components/Body/ProfilePage.tsx","hooks/useWindowSize.ts","components/Modals/DropDownMenu.tsx","components/Modals/CreatePost.tsx","App.tsx","index.tsx"],"names":["globalValues","navbar_elements_height","navbar_column_gap","navbar_height","dropdown_menu_bdr_rds","ButtonCSS","css","InputCSS","Context","createContext","themes","light","type","bxShdw","main_bgclr","nav_btm_brdr_clr","font","font_lighter","divider_clr","hover","icon_color","theme_toggler_bgclr","theme_toggler_bgclr_active","theme_toggler_icon_active","body","avatar_pic_cam_icon_bgclr","whats_on_ur_mind_bgclr","dark","imageObjectSettings","defaultAvatar","rotation","keyframes","StyledNav","styled","p","theme","bxShadw","menuVisibility","Navbar","useContext","toggleState","isUserSignedIn","CUAvatarURL","currentUserInfo","dispatchToggle","dispatchDimBgModal","userProfileButton","to","uid","className","src","undefined","alt","first_name","logInButton","onClick","isDarkTheme","dropDownMenuIsVisible","e","stopPropagation","toggleReducer","state","action","authenModalReducer","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","Authen","email","password","firstName","lastName","callback","createUserWithEmailAndPassword","then","userCredential","console","log","user","newUser","last_name","short_bio","is_dark_theme","DB","setUser","signIn","catch","err","alert","code","message","signInWithEmailAndPassword","signOut","payload","setDoc","doc","updateDoc","q","setCUPosts","onSnapshot","posts","postsSnapShot","forEach","push","data","postID","id","Storage","setAvatarURL","setCoverImageURL","avatarRef","ref","coverImageRef","getDownloadURL","url","TurnOffModalButton","StyledSpan","span","LogInModal","useState","setEmail","setPassword","StyledDiv","value","onChange","target","placeholder","div","SignUpModal","setFirstName","setLastName","signUp","BlueBgLikeIcon","Comment","commenterUID","content","date","likes","commentAvatar","setCommentAvatar","userInfo","setUserInfo","useEffect","setPhotosURL","getDoc","userSnap","format","fromUnixTime","seconds","PostModal","setModalVisibility","deleteDoc","StyledSection","isLikedByCurrentUser","hasZeroComments","Post","full_name","userID","comments","setIsLiked","postAvatarURL","setPostAvatar","a","includes","isShowingComments","setIsShowingComments","commentContent","setCommentContent","renderComments","map","cmt","isShowingModal","length","splice","indexOf","toggleLikeThisPost","onSubmit","preventDefault","newComment","Timestamp","fromDate","Date","WhatsOnYourMind","section","MainPage","allPosts","setAllPosts","postsRef","collection","query","orderBy","unsub","setSnapshotListener","renderPosts","fullname","bgGradient","editCoverPhotoHidden","ProfilePage","useParams","setEditCoverPhotoHidden","userCoverImgURL","userAvatarURL","setUserAvatarURL","updatePhoto","file","files","isAvatar","fileName","fileRef","deleteObject","uploadBytes","size","width","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","userPosts","setUserPosts","where","is_profile_page","setBgGradient","colorThief","ColorThief","img","document","querySelector","onload","color","getColor","toString","renderColorThief","encodeURIComponent","crossOrigin","accept","style","display","fill","DropDownMenu","history","useHistory","renderAvatar","updateUserInfo","CreatePost","setContent","textSmallSize","postButtonActivated","autoFocus","disabled","post","addDoc","Screen","authenType","createPostIsVisible","App","setIsUserSignedIn","setCurrentUserInfo","useReducer","onAuthStateChanged","dimBgModal","Provider","exact","path","component","renderModal","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"iOAmCeA,EAjCM,CACnBC,uBAAwB,OACxBC,kBAAmB,OACnBC,cAAe,SACfC,sBAAuB,OACvBC,UAAWC,YAAF,wSAcTC,SAAUD,YAAF,sQ,gBCFKE,EAFCC,wBAAc,ICfjBC,EAAS,CACpBC,MAAO,CACLC,KAAM,QAENC,OACE,uEAEFC,WAAY,OACZC,iBAAkB,OAElBC,KAAM,UACNC,aAAc,UAEdC,YAAa,UACbC,MAAO,YACPC,WAAY,UACZC,oBAAqB,UACrBC,2BAA4B,UAC5BC,0BAA2B,UAG3BC,KAAM,UAENC,0BAA2B,UAE3BC,uBAAwB,WAE1BC,KAAM,CACJf,KAAM,OAENC,OACE,qEAEFC,WAAY,UACZC,iBAAkB,UAElBC,KAAM,UACNC,aAAc,UAEdC,YAAa,UACbC,MAAO,YACPC,WAAY,UACZC,oBAAqB,UACrBC,2BAA4B,UAC5BC,0BAA2B,UAE3BC,KAAM,UAENC,0BAA2B,UAE3BC,uBAAwB,YAIfE,EAAsBtB,YAAH,qG,QCxDnBuB,EACX,8J,OCyEIC,EAAWC,YAAH,sHASRC,EAAYC,YAAO,MAAPA,CAAH,6mDAGC,SAAAC,GAAC,OAAIA,EAAEC,MAAMrB,aACjBd,EAAaG,eACT,SAAA+B,GAAC,OAAIA,EAAEC,MAAMC,WACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMpB,mBASxBf,EAAaE,mBAOd,SAAAgC,GAAC,OAAIA,EAAEC,MAAMnB,OAMZhB,EAAaC,uBACdD,EAAaC,uBACT6B,EAMH9B,EAAaE,kBAEfF,EAAaC,uBACdD,EAAaC,wBAER,SAAAiC,GAAC,OACbA,EAAEG,eACEH,EAAEC,MAAMb,2BACRY,EAAEC,MAAMd,sBACDrB,EAAaC,wBACjB,SAAAiC,GAAC,OACRA,EAAEG,eACEH,EAAEC,MAAMZ,0BACRW,EAAEC,MAAMf,cAGS,SAAAc,GAAC,MAAsB,UAAjBA,EAAEC,MAAMvB,KAAmB,MAAQ,QAKtDZ,EAAaC,wBAMd,SAAAiC,GAAC,OAAIA,EAAEC,MAAMnB,QAGN,SAAAkB,GAAC,OACbA,EAAEG,eACEH,EAAEC,MAAMb,2BACRY,EAAEC,MAAMd,sBAUGrB,EAAaC,wBAEd,SAAAiC,GAAC,OAAIA,EAAEC,MAAMd,sBACzBO,GAUGU,EAlKe,WAC5B,MAOIC,qBAAW/B,GANbgC,EADF,EACEA,YACAC,EAFF,EAEEA,eACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,gBACAC,EALF,EAKEA,eACAC,EANF,EAMEA,mBAGIC,EACJ,cAAC,IAAD,CAAMC,GAAE,2BAAeJ,QAAf,IAAeA,OAAf,EAAeA,EAAiBK,KAAxC,SACE,sBAAKC,UAAU,sBAAf,UACE,qBACEC,IAAKT,EAAiBC,GAAeb,OAAgBsB,EACrDC,IAAI,WAELX,IAAc,OAAIE,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBU,iBAKpCC,EACJ,qBACEL,UAAU,gBACVM,QAAS,kBAAMV,EAAmB,CAAEjC,KAAM,YAF5C,oBAQF,OACE,eAACoB,EAAD,CACEG,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MACtD0B,eAAgBG,EAAYiB,sBAAwB,EAAI,EAF1D,UAIE,sBAAKR,UAAU,OAAf,UACE,cAAC,IAAD,CAAMF,GAAG,aAAT,SACE,cAAC,IAAD,CAAYE,UAAU,cAExB,cAAC,IAAD,CAAMF,GAAG,aAAT,SACE,sBAAME,UAAU,WAAhB,2BAGJ,sBAAKA,UAAU,QAAf,UACGR,EAAiBK,EAAoBQ,EACtC,qBACEL,UAAU,uBACVM,QAAS,SAAAG,GACPA,EAAEC,kBACFf,EAAe,CAAEhC,KAAM,2BAJ3B,SAOE,cAAC,IAAD,a,QClEGgD,EAAgB,SAACC,EAAYC,GACxC,OAAQA,EAAOlD,MACb,IAAK,aACH,OAAO,2BAAKiD,GAAZ,IAAmBL,aAAa,IAClC,IAAK,cACH,OAAO,2BAAKK,GAAZ,IAAmBL,aAAa,IAClC,IAAK,eACH,OAAO,2BAAKK,GAAZ,IAAmBL,aAAcK,EAAML,cACzC,IAAK,wBACH,OAAO,2BAAKK,GAAZ,IAAmBJ,uBAAwBI,EAAMJ,wBACnD,QACE,OAAOI,IAeAE,EAAqB,WAG5B,IAFJF,EAEG,uDAFK,CAAEC,OAAQ,gBAClBA,EACG,uCACH,OAAQA,EAAOlD,MACb,IAAK,SACH,MAAO,CAAEkD,OAAQ,oBACnB,IAAK,UACH,MAAO,CAAEA,OAAQ,qBACnB,IAAK,cACH,MAAO,CAAEA,OAAQ,0BACnB,IAAK,OACH,MAAO,CAAEA,OAAQ,gBACnB,QACE,OAAOD,I,8DCfPG,EAAMC,YAAc,CACxBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAGIC,EAAOC,cAEPC,EAAKC,cAELC,EAAUC,YAAWb,GAErBc,EAAb,2FACE,SACEC,EACAC,EACAC,EACAC,EACAC,GAEA,OAAOC,YAA+BZ,EAAMO,EAAOC,GAChDK,MAAK,SAAAC,GACJC,QAAQC,IAAI,WAAYF,GACxB,IAAMtC,EAAMsC,EAAeG,KAAKzC,IAC1B0C,EAAgB,CACpB1C,IAAKA,EACLK,WAAY4B,EACZU,UAAWT,EACXU,UAAW,SACXC,eAAe,GAGjBC,EAAGC,QAAQ/C,EAAK0C,GAChBZ,EAAOkB,OAAOjB,EAAOC,EAAUG,MAEhCc,OAAM,SAAAC,GACLC,MAAM,kBAAD,OAAmBD,EAAIE,KAAvB,aAAgCF,EAAIG,eAxBjD,oBA2BE,SAActB,EAAeC,EAAkBG,GAC7CmB,YAA2B9B,EAAMO,EAAOC,GACrCK,MAAK,SAAAC,GACJH,IACAI,QAAQC,IAAR,0BACqBF,EAAeG,KAAKV,MADzC,mCAIDkB,OAAM,SAAAC,GAAG,OAAIC,MAAM,kBAAD,OAAmBD,EAAIE,KAAvB,aAAgCF,EAAIG,eAnC7D,qBAqCE,WACEE,YAAQ/B,GACLa,MAAK,WACJE,QAAQC,IAAI,8BAEbS,OAAM,SAAAvC,GACLyC,MAAM,mBAAqBzC,UA3CnC,KAgEaoC,EAAb,4FACE,SAAe9C,EAAawD,GAC1BC,YAAOC,YAAIhC,EAAI,QAAS1B,GAAMwD,KAFlC,4BAIE,SAAsBxD,EAAawD,GACjCG,YAAUD,YAAIhC,EAAI,QAAS1B,GAAMwD,KALrC,iCAOE,SAA2BI,EAAQC,GACjC,OAAOC,YAAWF,GAAG,SAACG,GACpB,IAAMC,EAAgC,GACtCD,EAAME,SAAQ,SAAC/E,GAAD,OACZ8E,EAAcE,KAAd,2BAAwBhF,EAAEiF,QAA1B,IAAkCC,OAAQlF,EAAEmF,SAE9CR,EAAWG,UAbjB,KAyBaM,EAAb,iGACE,SAAoBtE,EAAauE,EAAmBC,GAClD,IAAMC,EAAYC,YAAI9C,EAAD,gBAAmB5B,EAAnB,YACf2E,EAAgBD,YAAI9C,EAAD,gBAAmB5B,EAAnB,iBACzB4E,YAAeH,GACZpC,MAAK,SAAAwC,GACJN,EAAaM,MAEd5B,OAAM,SAAAvC,GAAC,OAAI6B,QAAQC,IAAI9B,MAC1B8D,GACEI,YAAeD,GACZtC,MAAK,SAAAwC,GAAG,OAAIL,EAAiBK,MAC7B5B,OAAM,SAAAvC,GAAC,OAAI6B,QAAQC,IAAI9B,UAZhC,KC5He,SAASoE,IACtB,MAA4CvF,qBAAW/B,GAA/CgC,EAAR,EAAQA,YAAaK,EAArB,EAAqBA,mBACrB,OACE,cAACkF,EAAD,CACEV,GAAG,iBACHlF,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MACtD4C,QAAS,kBAAMV,EAAmB,CAAEjC,KAAM,UAH5C,eAUJ,I,EAAMmH,EAAa9F,IAAO+F,KAAV,8LAML,SAAA9F,GAAC,OAAIA,EAAEC,MAAMnB,QChBT,SAASiH,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOnD,EAAP,KAAcoD,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOlD,EAAP,KAAiBoD,EAAjB,KAEA,EAA4C7F,qBAAW/B,GAA/CgC,EAAR,EAAQA,YAAaK,EAArB,EAAqBA,mBAMrB,OACE,eAACwF,GAAD,CAAWlG,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MAAjE,UACE,cAACmH,EAAD,IACA,sBAAKT,GAAG,MAAR,UACE,gDACA,uBACEzG,KAAK,OACL0H,MAAOvD,EACPwD,SAAU,SAAA7E,GAAC,OAAIyE,EAASzE,EAAE8E,OAAOF,QACjCG,YAAY,0BAEd,uBACE7H,KAAK,WACL0H,MAAOtD,EACPuD,SAAU,SAAA7E,GAAC,OAAI0E,EAAY1E,EAAE8E,OAAOF,QACpCG,YAAY,aAEd,wBAAQxF,UAAU,aAAaM,QArBjB,WAClBuB,EAAOkB,OAAOjB,EAAOC,GAAU,kBAAMnC,EAAmB,CAAEjC,KAAM,aAoB5D,uBAIF,qBAAKqC,UAAU,YACf,sBAAKoE,GAAG,SAAR,UACE,oDACA,wBACEpE,UAAU,qBACVM,QAAS,kBAAMV,EAAmB,CAAEjC,KAAM,aAF5C,sCAWR,I,EAAMyH,GAAYpG,IAAOyG,IAAV,4yBAuBP1I,EAAaO,SAGbP,EAAaK,UAgBbL,EAAaK,WCrFN,SAASsI,KACtB,MAAkCT,mBAAS,IAA3C,mBAAOjD,EAAP,KAAkB2D,EAAlB,KACA,EAAgCV,mBAAS,IAAzC,mBAAOhD,EAAP,KAAiB2D,EAAjB,KACA,EAA0BX,mBAAS,IAAnC,mBAAOnD,EAAP,KAAcoD,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOlD,EAAP,KAAiBoD,EAAjB,KAMA,EAII7F,qBAAW/B,GAHbgC,EADF,EACEA,YACAK,EAFF,EAEEA,mBAQF,OACE,eAAC,GAAD,CAAWV,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MAAjE,UACE,cAACmH,EAAD,IACA,sBAAKT,GAAG,MAAR,UACE,0CACA,yDAEF,qBAAKpE,UAAU,YACf,sBAAKoE,GAAG,SAAR,UACE,sBAAKpE,UAAU,YAAf,UACE,uBACErC,KAAK,OACL6H,YAAY,aACZH,MAAOrD,EACPsD,SAAU,SAAA7E,GAAC,OAAIkF,EAAalF,EAAE8E,OAAOF,UAEvC,uBACE1H,KAAK,OACL6H,YAAY,YACZH,MAAOpD,EACPqD,SAAU,SAAA7E,GAAC,OAAImF,EAAYnF,EAAE8E,OAAOF,aAGxC,uBACE1H,KAAK,QACL6H,YAAY,QACZH,MAAOvD,EACPwD,SAAU,SAAA7E,GAAC,OAAIyE,EAASzE,EAAE8E,OAAOF,UAEnC,uBACE1H,KAAK,WACL6H,YAAY,eACZH,MAAOtD,EACPuD,SAAU,SAAA7E,GAAC,OAAI0E,EAAY1E,EAAE8E,OAAOF,UAEtC,wBAAQrF,UAAU,UAAUM,QAxCb,WACnBuB,EAAOgE,OAAO/D,EAAOC,EAAUC,EAAWC,GAAU,kBAClDrC,EAAmB,CAAEjC,KAAM,aAsCzB,wBAIF,qBAAKqC,UAAU,YACf,sBAAKoE,GAAG,SAAR,UACE,4DACA,wBAAQ9D,QAAS,kBAAMV,EAAmB,CAAEjC,KAAM,YAAlD,0BAQR,I,GAAMyH,GAAYpG,IAAOyG,IAAV,q7BAYP1I,EAAaK,UAkBbL,EAAaO,U,sDC9GN,SAASwI,KACtB,OACE,qBAAK7F,IAAI,ulDAAulDE,IAAI,cCSxmD,I,SA4CMiF,GAAYpG,YAAO,MAAPA,CAAH,m7BAkBO,SAAAC,GAAC,OAAIA,EAAEC,MAAMT,0BAElB,SAAAQ,GAAC,OAAIA,EAAEC,MAAMnB,QA8BfgI,GAzFV,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,KACrB3G,GADuC,EAAZ4G,MACX7G,qBAAW/B,GAA3BgC,aACR,EAA0C0F,mBAAc,MAAxD,mBAAOmB,EAAP,KAAsBC,EAAtB,KACA,EAAgCpB,mBAAc,MAA9C,mBAAOqB,EAAP,KAAiBC,EAAjB,KAQA,OAPAC,qBAAU,WACRnC,EAAQoC,aAAaT,EAAcK,GACnCK,YAAOjD,YAAIhC,EAAI,QAASuE,IAAe5D,MAAK,SAAAuE,GAC1C,IAAML,EAAWK,EAASzC,OAC1BqC,EAAYD,QAEb,IAED,eAAC,GAAD,CAAWpH,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MAAjE,UACE,qBAAKuC,IAAKmG,GAAiBxH,EAAeuB,IAAI,mBAE9C,sBAAKH,UAAU,SAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,WAAf,iBACGsG,QADH,IACGA,OADH,EACGA,EAAUlG,WADb,WAC0BkG,QAD1B,IAC0BA,OAD1B,EAC0BA,EAAU5D,aAEpC,qBAAK1C,UAAU,UAAf,SAA0BiG,OAE5B,qBAAKjG,UAAU,aAAf,SACE,cAAC,KAAD,CAAaA,UAAU,cAG3B,sBAAKA,UAAU,OAAf,iBACO,IADP,UAEM4G,aAAOC,aAAaX,EAAKY,SAAU,eAFzC,eAE8DF,aAC1DC,aAAaX,EAAKY,SAClB,qB,kBCEN1B,GAAYpG,YAAO,MAAPA,CAAH,4sBAOIjC,EAAaI,uBAChB,SAAA8B,GAAC,OAAIA,EAAEC,MAAMrB,cACb,SAAAoB,GAAC,OAAIA,EAAEC,MAAMtB,SAKRb,EAAaI,uBAIrB,SAAA8B,GAAC,OAAIA,EAAEC,MAAMnB,QAGA,SAAAkB,GAAC,OAAIA,EAAEC,MAAMhB,QAGvBnB,EAAaC,uBACdD,EAAaC,wBAGR,SAAAiC,GAAC,OAAIA,EAAEC,MAAMd,uBACnB,SAAAa,GAAC,OAAIA,EAAEC,MAAMf,cAQZ4I,GA5E0D,SAAC,GAGnE,IAFLC,EAEI,EAFJA,mBACA7C,EACI,EADJA,OAEQ5E,EAAgBD,qBAAW/B,GAA3BgC,YAER,OACE,eAAC,GAAD,CACEL,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MACtD4C,QAAS,SAAAG,GAAC,OAAIA,EAAEC,mBAFlB,UAIE,sBACEV,UAAU,OACVM,QAAS,WACP0G,GAAmB,IAHvB,UAME,qBAAKhH,UAAU,eAAf,SACE,cAAC,KAAD,MAPJ,eAYA,sBACEA,UAAU,OACVM,QAAS,WACP0G,GAAmB,GACnBC,YAAUxD,YAAIhC,EAAI,QAAS0C,KAJ/B,UAOE,qBAAKnE,UAAU,eAAf,SACE,cAAC,KAAD,MARJ,qBCqJAkH,GAAgBlI,YAAO,UAAPA,CAAH,wrGAOG,SAAAC,GAAC,OAAIA,EAAEC,MAAMrB,cACxB,SAAAoB,GAAC,OAAIA,EAAEC,MAAMlB,gBAMJ,SAAAiB,GAAC,OAAIA,EAAEO,gBAAkB,YAQnB,SAAAP,GAAC,OAAIA,EAAEC,MAAMd,sBAgB/BO,GAaW,SAAAM,GAAC,OAAIA,EAAEC,MAAMnB,QAmCZ,SAAAkB,GAAC,OAAKA,EAAEsB,YAAc,UAAY,aACjC,SAAAtB,GAAC,OAAIA,EAAEO,gBAAkB,SASvBzC,EAAaI,uBAMV,SAAA8B,GAAC,OAAIA,EAAEC,MAAMrB,cAQxB,SAAAoB,GAAC,OAAIA,EAAEkI,sBAAwB,aAC/B,SAAAlI,GAAC,OAAIA,EAAEO,gBAAkB,eAEtB,SAAAP,GAAC,OAAKA,EAAEO,eAAiB,UAAY,iBAC3B,SAAAP,GAAC,OACnBA,EAAEO,eACEP,EAAEsB,YACA,YACA,YACF,WAIC,SAAAtB,GAAC,OAAIA,EAAEmI,iBAAmB,eAEvB,SAAAnI,GAAC,OAAKA,EAAEmI,gBAAkB,cAAgB,aAChC,SAAAnI,GAAC,OACnBA,EAAEmI,gBACE,QACAnI,EAAEsB,YACF,YACA,eAYU,SAAAtB,GAAC,OAAIA,EAAEC,MAAMrB,cAQjB,SAAAoB,GAAC,OAAIA,EAAEC,MAAMd,sBACzBO,GAIO,SAAAM,GAAC,OAAIA,EAAEC,MAAMnB,QAOR,SAAAkB,GAAC,OAAIA,EAAEC,MAAMT,0BAKJ,SAAAQ,GAAC,OAAKA,EAAEsB,YAAc,MAAQ,UAG1C,SAAAtB,GAAC,OAAIA,EAAEC,MAAMlB,gBAMfqJ,GA5UV,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,UAAWC,EAAqD,EAArDA,OAAQpD,EAA6C,EAA7CA,OAAQ+B,EAAqC,EAArCA,KAAMD,EAA+B,EAA/BA,QAASE,EAAsB,EAAtBA,MAAOqB,EAAe,EAAfA,SACvD,EACElI,qBAAW/B,GADLmC,EAAR,EAAQA,gBAAiBH,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,eAAgBC,EAAtD,EAAsDA,YAEtD,EAA2CwF,oBAAkB,GAA7D,mBAAOkC,EAAP,KAA6BM,EAA7B,KACA,EAAuCxC,mBAAc,MAArD,mBAAOyC,EAAP,KAAsBC,EAAtB,KACAnB,qBAAU,WAEP,sBAAC,sBAAAoB,EAAA,sDACAvD,EAAQoC,aAAac,EAAQI,GAD7B,0CAAD,GAIGnI,GACF2G,EAAM0B,SAAN,OAAenI,QAAf,IAAeA,OAAf,EAAeA,EAAiBK,KAC5B0H,GAAW,GAEVA,GAAW,KACjB,CAACtB,EAAO3G,IAEX,IAWA,EAAkDyF,oBAAS,GAA3D,mBAAO6C,EAAP,KAA0BC,EAA1B,KACA,EAA4C9C,mBAAS,IAArD,mBAAO+C,EAAP,KAAuBC,EAAvB,KAoBMC,EAAiBV,EAASW,KAAI,SAAAC,GAAG,OACrC,cAAC,GAAD,CACEpC,aAAcoC,EAAIpC,aAClBC,QAASmC,EAAInC,QACbC,KAAMkC,EAAIlC,KACVC,MAAOiC,EAAIjC,WAIf,EAA6ClB,oBAAkB,GAA/D,mBAAOoD,EAAP,KAAuBrB,EAAvB,KAEA,OACE,eAACE,GAAD,CACEhI,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MACtD6C,YAAahB,EAAYgB,YAAc,EAAI,EAC3C4G,qBAAsBA,EAAuB,EAAI,EACjDC,gBAAqC,IAApBI,EAASc,OAAe,EAAI,EAC7C9I,eAAgBA,EAAiB,EAAI,EALvC,UAOE,sBAAK4E,GAAG,YAAR,UACE,cAAC,IAAD,CAAMtE,GAAE,oBAAeyH,GAAvB,SACE,qBACEtH,IACEsH,KAAM,OAAK7H,QAAL,IAAKA,OAAL,EAAKA,EAAiBK,KACxBN,GAAeb,EACf8I,GAAiB9I,EAEvBuB,IAAI,aAGR,sBAAKH,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CAAMF,GAAE,oBAAeyH,GAAvB,SAAkCD,MAFtC,UAIMV,aAAOC,aAAaX,EAAKY,SAAU,eAJzC,eAI8DF,aAC1DC,aAAaX,EAAKY,SAClB,iBAIN,sBAAM1C,GAAG,UAAT,SAAoB6B,IACpB,sBAAK7B,GAAG,iBAAR,UACE,qBAAKpE,UAAU,QAAf,SACGmG,EAAMmC,QAAU,GACf,qCACE,cAACxC,GAAD,IACA,+BAAOK,EAAMmC,cAInB,qBAAKtI,UAAU,WAAf,SACGwH,EAASc,OAAS,GACjB,qCACGd,EAASc,OADZ,WAC4Bd,EAASc,OAAS,GAAK,YAMzD,sBAAKlE,GAAG,eAAR,UACE,sBACEpE,UAAU,OACVM,QAAS,kBAAMd,GA9FI,WACzB,IAAM+H,EAAM,OAAG7H,QAAH,IAAGA,OAAH,EAAGA,EAAiBK,IAChC2G,YAAOjD,YAAIhC,EAAI,QAAS0C,IAAS/B,MAAK,SAAAnD,GAAM,IAAD,EACnCkH,EAAK,UAAGlH,EAAEiF,cAAL,aAAG,EAAUiC,MACxBA,EAAM0B,SAASN,GACXpB,EAAMoC,OAAOpC,EAAMqC,QAAQjB,GAAS,GACpCpB,EAAMlC,KAAKsD,GACf7D,YAAUD,YAAIhC,EAAI,QAAS0C,GAAS,CAAEgC,MAAOA,OAuFRsC,IAFnC,UAIE,cAAC,KAAD,CAAYzI,UAAU,SACtB,2CAEF,sBACEA,UAAU,WACVM,QAAS,WACPyH,GAAsBD,IAH1B,UAME,cAAC,KAAD,CAAW9H,UAAU,SACrB,uDAGH8H,GAAqB,qBAAK1D,GAAG,WAAR,SAAoB8D,IACzC1I,GACC,uBAAMQ,UAAU,gBAAgB0I,SAlGlB,SAACjI,GAEnB,GADAA,EAAEkI,iBACqB,KAAnBX,EAAuB,CACzB,IAAMT,EAAM,OAAG7H,QAAH,IAAGA,OAAH,EAAGA,EAAiBK,IAChC2G,YAAOjD,YAAIhC,EAAI,QAAS0C,IAAS/B,MAAK,SAAAnD,GAAM,IAAD,EACnCuI,EAAQ,UAAGvI,EAAEiF,cAAL,aAAG,EAAUsD,SACrBoB,EAA0B,CAC9B5C,aAAcuB,EACdrB,KAAM2C,IAAUC,SAAS,IAAIC,MAC7B9C,QAAS+B,EACT7B,MAAO,IAETzC,YAAUD,YAAIhC,EAAI,QAAS0C,GAAS,CAClCqD,SAAS,GAAD,oBAAMA,GAAN,CAAgBoB,MAE1BX,EAAkB,SAmFlB,UACE,qBAAKhI,IAAKR,GAAeb,EAAeuB,IAAI,WAC5C,uBACEkF,MAAO2C,EACPxC,YAAY,qBACZF,SAAU,SAAA7E,GACRwH,EAAkBxH,EAAE8E,OAAOF,aAKlCkC,KAAM,OAAK7H,QAAL,IAAKA,OAAL,EAAKA,EAAiBK,MAC3B,qBACEC,UAAU,aACVM,QAAS,kBAAM0G,GAAoBqB,IAFrC,SAIE,cAAC,KAAD,CAAarI,UAAU,WAG1BqI,GACC,cAAC,GAAD,CAAWrB,mBAAoBA,EAAoB7C,OAAQA,QC1KpD,SAAS6E,KACtB,MACE1J,qBAAW/B,GADLgC,EAAR,EAAQA,YAAaK,EAArB,EAAqBA,mBAAoBJ,EAAzC,EAAyCA,eAAgBC,EAAzD,EAAyDA,YAEzD,OACE,eAAC,GAAD,CAAeP,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MAArE,UACE,qBACEuC,IAAKT,EAAiBC,GAAeb,OAAgBsB,EACrDC,IAAI,WAEN,qBAAKG,QAAS,kBAAMV,EAAmB,CAAEjC,KAAM,iBAA/C,qCAON,I,GAAMuJ,GAAgBlI,IAAOiK,QAAV,ymBACG,SAAAhK,GAAC,OAAIA,EAAEC,MAAMrB,cAajB,SAAAoB,GAAC,OAAIA,EAAEC,MAAMd,sBACzBO,GAGO,SAAAM,GAAC,OAAIA,EAAEC,MAAMlB,gBAMR,SAAAiB,GAAC,OAAIA,EAAEC,MAAMT,0BAKJ,SAAAQ,GAAC,MAAsB,SAAjBA,EAAEC,MAAMvB,KAAkB,MAAQ,UCP7DyH,GAAYpG,IAAOyG,IAAV,sEACJ,SAAAxG,GAAC,OAAIA,EAAEC,MAAMnB,QAITmL,GAxCiB,WAC9B,MAAwC5J,qBAAW/B,GAA3CgC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAErB,EAAgCyF,mBAAc,MAA9C,mBAAOkE,EAAP,KAAiBC,EAAjB,KAEA5C,qBAAU,WACR,IAAM6C,EAAWC,YAAW7H,EAAI,SAC1BkC,EAAI4F,YAAMF,EAAUG,YAAQ,OAAQ,SACpCC,EAAQ5G,EAAG6G,oBAAoB/F,EAAGyF,GAExC,OADA9G,QAAQC,IAAI,qBACL,WACLkH,OAED,CAACjK,IAEJ,IAAMmK,EAAW,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAUhB,KAAI,SAAClJ,GAAD,OAChC,cAAC,GAAD,CAEEkF,OAAQlF,EAAEkF,OACVoD,OAAQtI,EAAEsI,OACVD,UAAWrI,EAAE2K,SACb1D,KAAMjH,EAAEiH,KACRD,QAAShH,EAAEgH,QACXE,MAAOlH,EAAEkH,MACTqB,SAAUvI,EAAEuI,UAPPvI,EAAEkF,WAUX,OACE,eAAC,GAAD,CAAWjF,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MAAjE,UACG8B,GAAkB,cAACwJ,GAAD,IAClBW,M,+BCsKDvE,GAAYpG,YAAO,MAAPA,CAAH,8mEAIJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMnB,QAGA,SAAAkB,GAAC,OAAIA,EAAEC,MAAMrB,cAGxB,SAAAoB,GAAC,OAAIA,EAAE4K,cACZ,SAAA5K,GAAC,OAAIA,EAAEC,MAAMrB,cAuBO,SAAAoB,GAAC,OAAIA,EAAEC,MAAMrB,aAK7Bc,GAQkB,SAAAM,GAAC,OAAIA,EAAEC,MAAMV,6BAiCtB,SAAAS,GAAC,OAAKA,EAAE6K,qBAAuB,OAAS,WAqB9CC,GAvRoB,WACjC,MAMIzK,qBAAW/B,GALbgC,EADF,EACEA,YACAC,EAFF,EAEEA,eACAE,EAHF,EAGEA,gBACAD,EAJF,EAIEA,YACA6E,EALF,EAKEA,aAEMiD,EAA+ByC,cAA/BzC,OAER,EAAwDtC,oBAAS,GAAjE,mBAAO6E,EAAP,KAA6BG,EAA7B,KAEA,EAAgChF,mBAAc,MAA9C,mBAAOqB,EAAP,KAAiBC,EAAjB,KACAC,qBAAU,WACRE,YAAOjD,YAAIhC,EAAI,QAAS8F,IAASnF,MAAK,SAAAuE,GACpC,IAAML,EAAWK,EAASzC,OAC1BqC,EAAYD,QAEb,IAEH,MAA4CrB,mBAAc,MAA1D,mBAAOiF,EAAP,KAAwB3F,EAAxB,KACA,EAA0CU,mBAAc,MAAxD,mBAAOkF,EAAP,KAAsBC,EAAtB,KACMC,EAAc,SAAC5J,GACnB,IAAM6J,EAAO7J,EAAE8E,OAAOgF,MAAM,GAC5B,GAAID,EAAM,CACR,IAAME,EAA2B,WAAhB/J,EAAE8E,OAAOnB,GACpBqG,EAAWD,EAAW,SAAW,cACjCE,EAAUjG,aAAI9C,EAAD,gBAAmB4F,EAAnB,YAA6BkD,IAChDE,aAAaD,GAAS1H,OAAM,SAAAvC,GAAC,OAAI6B,QAAQC,IAAI9B,MAC7CmK,aAAYF,EAASJ,GAAMlI,MAAK,kBAC9BuC,aAAe+F,GAAStI,MAAK,SAAAwC,GAAG,OAC9B4F,EACIjD,KAAM,OAAK7H,QAAL,IAAKA,OAAL,EAAKA,EAAiBK,KAC1BuE,EAAaM,GACbwF,EAAiBxF,GACnBL,EAAiBK,WAK7B4B,qBAAU,WACP,sBAAC,sBAAAoB,EAAA,sDACAvD,EAAQoC,aAAac,EAAQjD,EAAcC,GAD3C,0CAAD,KAGA,CAACgD,IAGJ,IAAMsD,ECxDO,WAGb,MAAoC5F,mBAAe,CACjD6F,WAAO5K,EACP6K,YAAQ7K,IAFV,mBAAO8K,EAAP,KAAmBC,EAAnB,KAoBA,OAhBAzE,qBAAU,WAER,SAAS0E,IAEPD,EAAc,CACZH,MAAOK,OAAOC,WACdL,OAAQI,OAAOE,cAQnB,OAJAF,OAAOG,iBAAiB,SAAUJ,GAElCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIF,EDiCYQ,GACnBhF,qBAAU,WACR,IAAQsE,EAAUD,EAAVC,MAENb,OADY/J,IAAV4K,GAAuBA,GAAS,OAGnC,CAACD,IAGJ,MAAkC5F,mBAAc,MAAhD,mBAAOwG,EAAP,KAAkBC,EAAlB,KACAlF,qBAAU,WACR,IAAM6C,EAAWC,YAAW7H,EAAI,SAC1BkC,EAAI4F,YACRF,EACAsC,YAAM,SAAU,KAAMpE,GACtBiC,YAAQ,OAAQ,SAEZC,EAAQ5G,EAAG6G,oBAAoB/F,EAAG+H,GAExC,OADApJ,QAAQC,IAAI,mBACL,WACLkH,OAED,CAAClC,IACJ,IAAMoC,EAAW,OAAG8B,QAAH,IAAGA,OAAH,EAAGA,EAAWtD,KAAI,SAAClJ,GAAD,OACjC,cAAC,GAAD,CAEEkF,OAAQlF,EAAEkF,OACVoD,OAAQtI,EAAEsI,OACVD,UAAWrI,EAAE2K,SACb1D,KAAMjH,EAAEiH,KACRD,QAAShH,EAAEgH,QACXE,MAAOlH,EAAEkH,MACTqB,SAAUvI,EAAEuI,SACZoE,iBAAiB,GARZ3M,EAAEkF,WAaX,EAAoCc,mBAAiB,IAArD,mBAAO4E,EAAP,KAAmBgC,EAAnB,KACArF,qBAAU,WACR,IAAMsF,EAAa,IAAIC,KACjBC,EAAWC,SAASC,cAAc,qBACxCF,EAAIG,OAAS,WACX,IAAMC,EAAQN,EAAWO,SAASL,GAAKM,WACvCT,EAAcO,MAEf,CAAC5M,IACJ,IAGM+M,EACJ,qBACEtM,IAJF,6GAMKuM,mBAAmBtC,IAClBsC,mBb9HR,oKagIIC,YAAY,YACZtM,IAAI,aACJiE,GAAG,qBAIP,OACE,eAAC,GAAD,CACElF,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MACtDmM,WAAYA,EACZC,qBAAsBA,EAHxB,UAKE,mCACE,sBAAK1F,GAAG,cAAR,UACGmI,EACD,sBAAKvM,UAAU,SAAf,UACE,qBACEC,IACEsH,KAAM,OAAK7H,QAAL,IAAKA,OAAL,EAAKA,EAAiBK,KACxBN,GAAeb,EACfuL,GAAiBvL,EAEvBuB,IAAI,WAELoH,KAAM,OAAK7H,QAAL,IAAKA,OAAL,EAAKA,EAAiBK,MAC3B,wBAAOC,UAAU,gBAAjB,UACE,uBACEsF,SAAU+E,EACVjG,GAAG,SACHzG,KAAK,OACL+O,OAAO,UACPC,MAAO,CAAEC,QAAS,UAEnBrN,EAAYgB,YACX,cAAC,KAAD,CAAcP,UAAU,OAAO2M,MAAO,CAAEE,KAAM,WAE9C,cAAC,KAAD,CAAiB7M,UAAU,eAKlCuH,KAAM,OAAK7H,QAAL,IAAKA,OAAL,EAAKA,EAAiBK,MAC3B,wBAAOC,UAAU,mBAAjB,UACE,uBACEsF,SAAU+E,EACVjG,GAAG,QACHzG,KAAK,OACL+O,OAAO,UACPC,MAAO,CAAEC,QAAS,UAEpB,cAAC,KAAD,CAAc5M,UAAU,SAR1B,IAQoC,0DAKxC,sBAAKoE,GAAG,QAAR,UACE,qBAAKpE,UAAU,OAAf,SACGsG,EAAQ,UACFA,EAASlG,WADP,YACqBkG,EAAS5D,WACnC,iBAEN,qBAAK1C,UAAU,oBAAf,SACGsG,GAAYA,EAAS3D,kBAI5B,iCACG4E,KAAM,OAAK7H,QAAL,IAAKA,OAAL,EAAKA,EAAiBK,MAAO,cAACiJ,GAAD,IACnCW,SE3GHvE,GAAYpG,YAAO,MAAPA,CAAH,moDAOIjC,EAAaI,uBAChB,SAAA8B,GAAC,OAAIA,EAAEC,MAAMrB,cACb,SAAAoB,GAAC,OAAIA,EAAEC,MAAMtB,SAORb,EAAaI,uBAIR,SAAA8B,GAAC,OAAIA,EAAEC,MAAMhB,SAMjB,SAAAe,GAAC,OAAKA,EAAEO,eAAiB,OAAS,UAEvC,SAAAP,GAAC,OAAKA,EAAEO,eAAiB,OAAS,SAG7B,SAAAP,GAAC,OAAIA,EAAEC,MAAMd,sBACzBO,GASS,SAAAM,GAAC,OAAIA,EAAEC,MAAMnB,QAIb,SAAAkB,GAAC,OAAIA,EAAEC,MAAMlB,gBASd,SAAAiB,GAAC,OAAIA,EAAEC,MAAMjB,eAMlB,SAAAgB,GAAC,OAAIA,EAAEC,MAAMnB,OAGVhB,EAAaC,uBACdD,EAAaC,wBAGR,SAAAiC,GAAC,OAAIA,EAAEC,MAAMd,uBACnB,SAAAa,GAAC,OAAIA,EAAEC,MAAMf,cAeX,SAAAc,GAAC,OAAKA,EAAEO,eAAiB,SAAW,YAMrCsN,GAzKqB,WAClC,MAOIxN,qBAAW/B,GANbmC,EADF,EACEA,gBACAD,EAFF,EAEEA,YACAD,EAHF,EAGEA,eACAD,EAJF,EAIEA,YACAI,EALF,EAKEA,eACAC,EANF,EAMEA,mBAGImN,EAAUC,cAaVC,EAAe,qBAAKhN,IAAKR,GAAeb,EAAeuB,IAAI,WAEjE,OACE,eAAC,GAAD,CACEjB,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MACtD8B,eAAgBA,EAAiB,EAAI,EACrCc,QAAS,SAAAG,GAAC,OAAIA,EAAEC,mBAHlB,UAKE,cAAC,IAAD,CACEZ,GAAG,oBACHQ,QAAS,kBACPd,GAAkBG,EAAe,CAAEhC,KAAM,2BAH7C,SAME,sBAAKqC,UAAU,UAAf,UACGiN,EACD,sBAAKjN,UAAU,OAAf,UACE,+BACGR,GAAkBE,EAAlB,UACMA,EAAgBU,WADtB,YACoCV,EAAgBgD,WACjD,SAEN,+BAAOlD,EAAiB,mBAAqB,0BAKnD,qBAAKQ,UAAU,YAEf,sBAAKA,UAAU,gBAAgBM,QArCT,WACxBX,EAAe,CAAEhC,KAAM,iBACvBkF,EAAGqK,eAAexN,EAAgBK,IAAK,CACrC6C,eAAgBrD,EAAYgB,cAE9BZ,EAAe,CAAEhC,KAAM,2BAgCrB,UACE,qBAAKqC,UAAU,OAAf,SACGT,EAAYgB,YAAc,cAAC,IAAD,IAAY,cAAC,IAAD,MAF3C,aAIahB,EAAYgB,YAAc,QAAU,OAJjD,YAOA,sBACEP,UAAU,aACVM,QAAS,WACPX,EAAe,CAAEhC,KAAM,0BACvB6B,GAEMqC,EAAOyB,UArDnByJ,EAAQ9I,KAAK,eAwDHrE,EAAmB,CAAEjC,KAAM,YATnC,UAYE,qBAAKqC,UAAU,OAAf,SACGR,EAAiB,cAAC,KAAD,IAAgB,cAAC,KAAD,MAbtC,OAeOA,EAAiB,MAAQ,YCnEvB,SAAS2N,KACtB,MAA8BlI,mBAAiB,IAA/C,mBAAOgB,EAAP,KAAgBmH,EAAhB,KACA,EACE9N,qBAAW/B,GADLmC,EAAR,EAAQA,gBAAiBH,EAAzB,EAAyBA,YAAaK,EAAtC,EAAsCA,mBAAoBH,EAA1D,EAA0DA,YAkB1D,OACE,eAAC,GAAD,CACEP,MAAOK,EAAYgB,YAAc9C,EAAOiB,KAAOjB,EAAOC,MACtD6C,YAAahB,EAAYgB,YAAc,EAAI,EAC3C8M,cAAepH,EAAQqC,OAAS,GAAK,EAAI,EACzCgF,oBAAqBrH,EAAQqC,OAAS,EAAI,EAAI,EAJhD,UAME,cAACzD,EAAD,IACA,qBAAKT,GAAG,MAAR,SACE,gDAEF,qBAAKpE,UAAU,YACf,sBAAKoE,GAAG,SAAR,UACE,qBAAKnE,IAAKR,GAAeb,EAAeuB,IAAI,cAC5C,qBAAKH,UAAU,OAAf,SACGN,GAAe,UACXA,EAAgBU,WADL,YACmBV,EAAgBgD,gBAGvD,0BACE8C,YAAY,uBACZF,SAAU,SAAA7E,GAAC,OAAI2M,EAAW3M,EAAE8E,OAAOF,QACnCkI,WAAS,IAEX,qBAAKvN,UAAU,cAAf,SACE,wBAAQwN,SAA6B,IAAnBvH,EAAQqC,OAAchI,QAxC9B,WACd,IAAMmN,EAAiB,CACrBlG,OAAQ7H,EAAgBK,IACxB6J,SAAUlK,EAAgBU,WAAa,IAAMV,EAAgBgD,UAC7DwD,KAAM2C,IAAUC,SAAS,IAAIC,MAC7B9C,UACAE,MAAO,GACPqB,SAAU,IAGZkG,YAAOpE,YAAW7H,EAAI,SAAUgM,GAEhC7N,EAAmB,CAAEjC,KAAM,UA4BvB,uBAQR,I,SAAMyH,GAAYpG,YAAO,MAAPA,CAAH,4iDAOO,SAAAC,GAAC,OAAIA,EAAEC,MAAMrB,cACxB,SAAAoB,GAAC,OAAIA,EAAEC,MAAMnB,OAsBhBY,GAYS,SAAAM,GAAC,OAAKA,EAAEoO,cAAgB,SAAW,YAOvC,SAAApO,GAAC,OAAIA,EAAEC,MAAMnB,OAqBHhB,EAAaI,uBAGrB,SAAA8B,GAAC,OAAKA,EAAEqO,oBAAsB,QAAU,aAC7B,SAAArO,GAAC,OACnBA,EAAEqO,oBACE,UACArO,EAAEsB,YACF,UACA,aAEM,SAAAtB,GAAC,OAAKA,EAAEqO,oBAAsB,UAAY,iBAMpC,SAAArO,GAAC,OAAKA,EAAEsB,YAAc,UAAY,a,SC7CpDoN,GAAStQ,YAAH,4IAUN+H,GAAYpG,YAAO,MAAPA,CAAH,2XAEC,SAAAC,GAAC,OAAIA,EAAEC,MAAMX,QAGvB,SAAAU,GAAC,OACiB,iBAAjBA,EAAE2O,YAAiC3O,EAAEM,YAAYsO,sBAClDF,MACkB,SAAA1O,GAAC,MACF,SAAjBA,EAAEC,MAAMvB,KAAkB,YAAc,eAW5B,SAAAsB,GAAC,OAAIA,EAAEC,MAAMtB,UAIhBkQ,GAlIY,WACzB,MAA4C7I,oBAAkB,GAA9D,mBAAOzF,EAAP,KAAuBuO,EAAvB,KACA,EAA8C9I,mBAAc,MAA5D,mBAAOvF,EAAP,KAAwBsO,EAAxB,KACA,EAAsCC,qBAAWtN,EAAe,CAC9DJ,aAAa,EACbC,uBAAuB,IAFzB,mBAAOjB,EAAP,KAAoBI,EAApB,KAKA6G,qBAAU,WACP,sBAAC,sBAAAoB,EAAA,yFAAD,GACDsG,aAAmB3M,EAAD,uCAAO,WAAMiB,GAAN,SAAAoF,EAAA,sDACnBpF,GAEFuL,GAAkB,GAClBrH,YAAOjD,YAAIhC,EAAI,QAASe,EAAKzC,MAAMqC,MAAK,SAAAuE,GAEtC,IAAMjH,EAAkBiH,EAASzC,OACjC8J,EAAmBtO,IAEJ,OAAfA,QAAe,IAAfA,OAAA,EAAAA,EAAiBkD,eACbjD,EAAe,CAAEhC,KAAM,eACvBgC,EAAe,CAAEhC,KAAM,qBAG7BoQ,GAAkB,GAClBC,EAAmB,MACnBrO,EAAe,CAAEhC,KAAM,iBAhBF,2CAAP,yDAmBjB,IAEH,MAAoCsH,mBAAc,MAAlD,mBAAOxF,EAAP,KAAoB6E,EAApB,KAEAkC,qBAAU,WACJ9G,GACD,sBAAC,4BAAAkI,EAAA,sDACM7H,EADN,OACYL,QADZ,IACYA,OADZ,EACYA,EAAiBK,IAC7BsE,EAAQoC,aAAa1G,EAAKuE,GAF1B,0CAAD,KAKF,CAAC5E,IAEJ,MAAyCuO,qBAAWnN,EAAoB,CACtED,OAAQ,iBADV,mBAAOsN,EAAP,KAAmBvO,EAAnB,KAiBA,OACE,cAAC,EAAQwO,SAAT,CACE/I,MAAO,CACL7F,iBACAE,kBACAH,cACAI,iBACAwO,aACAvO,qBACAH,cACA6E,gBATJ,SAYE,cAAC,IAAD,UACE,eAAC,GAAD,CACEpF,OAAmC,IAA5BK,EAAYgB,YAAuB9C,EAAOiB,KAAOjB,EAAOC,MAC/DkQ,WAAYO,EAAWtN,OACvBtB,YAAaA,EACbe,QAAS,kBACPf,EAAYiB,uBACZb,EAAe,CAAEhC,KAAM,2BAN3B,UASE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0Q,OAAK,EAACC,KAAK,aAAaC,UAAWrF,KAC1C,cAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,oBAAoBC,UAAWxE,QAGnD,qBAAK/J,UAAU,eAAf,SA1CY,SAACa,GACnB,OAAQA,GACN,IAAK,mBACH,OAAO,cAACmE,EAAD,IACT,IAAK,oBACH,OAAO,cAACU,GAAD,IACT,IAAK,yBACH,OAAO,cAACyH,GAAD,IACT,IAAK,eACH,QAiCiCqB,CAAYL,EAAWtN,UACrDtB,EAAYiB,uBAAyB,cAAC,GAAD,YCrG1CiO,I,MAAcC,YAAH,+aAyBjBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACJ,GAAD,IACA,cAAC,GAAD,OAEFxC,SAAS6C,eAAe,W","file":"static/js/main.acad102e.chunk.js","sourcesContent":["import { css } from 'styled-components'\r\n\r\nconst globalValues = {\r\n  navbar_elements_height: '3rem',\r\n  navbar_column_gap: '1rem',\r\n  navbar_height: '4.5rem',\r\n  dropdown_menu_bdr_rds: '10px',\r\n  ButtonCSS: css`\r\n    font-size: inherit;\r\n    border-radius: 0.5rem;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    font-weight: 700;\r\n    border: none;\r\n    color: white;\r\n    background-color: #42b72a;\r\n    width: 100%;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n  InputCSS: css`\r\n    outline: none;\r\n    border: 1px solid #dddfe2;\r\n    border-radius: 0.5rem;\r\n    width: 100%;\r\n    font-size: inherit;\r\n    padding: 1.25rem 1.75rem;\r\n    &::placeholder {\r\n      color: #90949c;\r\n      font-weight: 100;\r\n    }\r\n  `,\r\n}\r\n\r\nexport default globalValues\r\n","import { createContext } from 'react'\r\n\r\n// interface ContextInterface {\r\n//   currentUserEmail: any\r\n//   setCurrentEmail: any\r\n//   currentUserInfoState: any\r\n//   setCurrentUserInfoState: any\r\n//   handleSignIn: any\r\n//   toggleState: any\r\n//   dispatchToggle: any\r\n//   isSignedIn: any\r\n//   dispatchSignInOut: any\r\n//   dimBgModal: any\r\n//   dispatchDimBgModal: any\r\n//   handleSignOut: any\r\n// }\r\n\r\nconst Context = createContext({} as any)\r\n\r\nexport default Context\r\n","import styled, { css } from 'styled-components'\r\n\r\nexport const themes = {\r\n  light: {\r\n    type: 'light',\r\n\r\n    bxShdw:\r\n      'rgba(50, 50, 93, 0.25) 0 0 5px -1px, rgba(0, 0, 0, 0.3) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#fff',\r\n    nav_btm_brdr_clr: '#fff',\r\n    // fb_icon: '#000',\r\n    font: '#050505',\r\n    font_lighter: '#65676b',\r\n    // menu\r\n    divider_clr: '#ced0d4',\r\n    hover: '#d4d4d434',\r\n    icon_color: '#1d1f23',\r\n    theme_toggler_bgclr: '#e6e8ed',\r\n    theme_toggler_bgclr_active: '#E7F3FF',\r\n    theme_toggler_icon_active: '#0571ED',\r\n\r\n    // body\r\n    body: '#f0f2f5',\r\n\r\n    avatar_pic_cam_icon_bgclr: '#e4e6eb',\r\n\r\n    whats_on_ur_mind_bgclr: '#F0F2F5',\r\n  },\r\n  dark: {\r\n    type: 'dark',\r\n\r\n    bxShdw:\r\n      'rgba(255, 255, 255) 0 0 5px -1px, rgba(255, 255, 255) 0 0 3px -1px',\r\n\r\n    main_bgclr: '#242526',\r\n    nav_btm_brdr_clr: '#393a3b',\r\n    // fb_icon: '#fff',\r\n    font: '#e4e6eb',\r\n    font_lighter: '#b0b3b8',\r\n    // menu\r\n    divider_clr: '#3e4042',\r\n    hover: '#ffffff45',\r\n    icon_color: '#e4e6ea',\r\n    theme_toggler_bgclr: '#4e5052',\r\n    theme_toggler_bgclr_active: '#263951',\r\n    theme_toggler_icon_active: '#2D86FF',\r\n    // body\r\n    body: '#18191a',\r\n\r\n    avatar_pic_cam_icon_bgclr: '#3a3b3c',\r\n\r\n    whats_on_ur_mind_bgclr: '#3A3B3C',\r\n  },\r\n}\r\n\r\nexport const imageObjectSettings = css`\r\n  aspect-ratio: 1/1;\r\n  object-fit: cover;\r\n  object-position: 50% 20%;\r\n`\r\n","export const defaultAvatar =\r\n  'https://firebasestorage.googleapis.com/v0/b/faekbook1-aa0f8.appspot.com/o/defaults%2FdefaultAvatar.png?alt=media&token=a153e1b2-261c-4c56-a516-27a85bac7ec6'\r\nexport const defaultCoverImage =\r\n  'https://firebasestorage.googleapis.com/v0/b/faekbook1-aa0f8.appspot.com/o/defaults%2FdefaultCoverImage.gif?alt=media&token=458194b5-739b-4fd8-ae77-13ba5fb5dc13'\r\n","import styled, { keyframes } from 'styled-components'\r\nimport globalValues from '../styles/globalValues'\r\nimport { FaFacebook } from 'react-icons/fa'\r\nimport { MdArrowDropDown } from 'react-icons/md'\r\nimport Context from '../utils/Context'\r\nimport React, { useContext } from 'react'\r\n// import DropDownMenu from './Modals/DropDownMenu'\r\nimport { imageObjectSettings, themes } from '../utils/themes'\r\nimport { Link } from 'react-router-dom'\r\nimport { Authen } from '../firebaseConfig'\r\nimport { useEffect } from 'react'\r\nimport { defaultAvatar } from '../utils/defaults'\r\n\r\nconst Navbar: React.FC<any> = () => {\r\n  const {\r\n    toggleState,\r\n    isUserSignedIn,\r\n    CUAvatarURL,\r\n    currentUserInfo,\r\n    dispatchToggle,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n\r\n  const userProfileButton = (\r\n    <Link to={`/faekbook/${currentUserInfo?.uid}`}>\r\n      <div className='user-profile-button'>\r\n        <img\r\n          src={isUserSignedIn ? CUAvatarURL || defaultAvatar : undefined}\r\n          alt='avatar'\r\n        />\r\n        {isUserSignedIn && currentUserInfo?.first_name}\r\n      </div>\r\n    </Link>\r\n  )\r\n\r\n  const logInButton = (\r\n    <div\r\n      className='log-in-button'\r\n      onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}\r\n    >\r\n      Log In\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <StyledNav\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      menuVisibility={toggleState.dropDownMenuIsVisible ? 1 : 0}\r\n    >\r\n      <div className='left'>\r\n        <Link to='/faekbook/'>\r\n          <FaFacebook className='fb-icon' />\r\n        </Link>\r\n        <Link to='/faekbook/'>\r\n          <span className='faekbook'>faekbook</span>\r\n        </Link>\r\n      </div>\r\n      <div className='right'>\r\n        {isUserSignedIn ? userProfileButton : logInButton}\r\n        <div\r\n          className='toggle-dropdown-menu'\r\n          onClick={e => {\r\n            e.stopPropagation()\r\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          }}\r\n        >\r\n          <MdArrowDropDown />\r\n        </div>\r\n      </div>\r\n      {/* {menuVisibility && <DropDownMenu />} */}\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nconst rotation = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(359deg);\r\n  }\r\n`\r\n\r\nconst StyledNav = styled('nav')<{ menuVisibility: number }>`\r\n  position: sticky;\r\n  top: 0;\r\n  background: ${p => p.theme.main_bgclr};\r\n  height: ${globalValues.navbar_height};\r\n  box-shadow: ${p => p.theme.bxShadw};\r\n  border-bottom: 1px solid ${p => p.theme.nav_btm_brdr_clr};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-inline: 1rem;\r\n  z-index: 100;\r\n  .left {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    a {\r\n      text-decoration: none;\r\n      .fb-icon,\r\n      .faekbook {\r\n        color: ${p => p.theme.font};\r\n        &:hover {\r\n          cursor: pointer;\r\n        }\r\n      }\r\n      .fb-icon {\r\n        height: ${globalValues.navbar_elements_height};\r\n        width: ${globalValues.navbar_elements_height};\r\n        animation: ${rotation} 2s infinite linear;\r\n      }\r\n    }\r\n  }\r\n  .right {\r\n    display: flex;\r\n    column-gap: ${globalValues.navbar_column_gap};\r\n    .toggle-dropdown-menu {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      background: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_bgclr_active\r\n          : p.theme.theme_toggler_bgclr};\r\n      font-size: ${globalValues.navbar_elements_height};\r\n      color: ${p =>\r\n        p.menuVisibility\r\n          ? p.theme.theme_toggler_icon_active\r\n          : p.theme.icon_color};\r\n      &:hover {\r\n        cursor: pointer;\r\n        filter: brightness(${p => (p.theme.type === 'light' ? '0.9' : '1.3')});\r\n      }\r\n    }\r\n    a .user-profile-button,\r\n    .log-in-button {\r\n      height: ${globalValues.navbar_elements_height};\r\n      border-radius: 50px;\r\n      display: flex;\r\n      align-items: center;\r\n      font-weight: 700;\r\n      font-size: 1.25rem;\r\n      color: ${p => p.theme.font};\r\n      &:hover {\r\n        cursor: pointer;\r\n        background: ${p =>\r\n          p.menuVisibility\r\n            ? p.theme.theme_toggler_bgclr_active\r\n            : p.theme.theme_toggler_bgclr};\r\n      }\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      .user-profile-button {\r\n        column-gap: 0.6rem;\r\n        padding-left: 0.35rem;\r\n        padding-right: 0.6rem;\r\n        img {\r\n          height: calc(${globalValues.navbar_elements_height} - 0.5rem);\r\n\r\n          background: ${p => p.theme.theme_toggler_bgclr};\r\n          ${imageObjectSettings}\r\n        }\r\n      }\r\n    }\r\n    .log-in-button {\r\n      padding-inline: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Navbar\r\n","export const toggleReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case 'DARK_THEME':\r\n      return { ...state, isDarkTheme: true }\r\n    case 'LIGHT_THEME':\r\n      return { ...state, isDarkTheme: false }\r\n    case 'TOGGLE_THEME':\r\n      return { ...state, isDarkTheme: !state.isDarkTheme }\r\n    case 'TOGGLE_DROP_DOWN_MENU':\r\n      return { ...state, dropDownMenuIsVisible: !state.dropDownMenuIsVisible }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const isSignedInReducer = (state = false, action: any) => {\r\n  switch (action.type) {\r\n    case 'SIGN_IN':\r\n      return true\r\n    case 'SIGN_OUT':\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const authenModalReducer = (\r\n  state = { action: 'close modals' },\r\n  action: any\r\n) => {\r\n  switch (action.type) {\r\n    case 'LOG_IN':\r\n      return { action: 'show login modal' }\r\n    case 'SIGN_UP':\r\n      return { action: 'show signup modal' }\r\n    case 'CREATE_POST':\r\n      return { action: 'show create-post modal' }\r\n    case 'NONE':\r\n      return { action: 'close modals' }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// export const currentUserEmailReducer = (state: string | null, action: any) => {\r\n//   switch (action.type) {\r\n//     case 'SET_CURRENT_USER_EMAIL':\r\n//       return action.payload\r\n//     case 'LOG_OUT':\r\n//       return null\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export const userReducer = (state: any, action: any) => {\r\n//   switch (action.type) {\r\n//     case 'ADD_POST':\r\n//       const newPost: Post = {\r\n//         date: new Date(),\r\n//         content: action.payload,\r\n//         likes: 0,\r\n//         comments: [],\r\n//       }\r\n//       const updatedPosts = { ...state.posts, newPost }\r\n//       DB.setUser('thanhluannguyenxyz@gmail.com', updatedPosts)\r\n//       return { ...state, posts: updatedPosts }\r\n//   }\r\n// }\r\n","import { DocumentData, onSnapshot } from '@firebase/firestore'\r\nimport { initializeApp } from 'firebase/app'\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  setDoc,\r\n  updateDoc,\r\n} from 'firebase/firestore'\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n} from 'firebase/auth'\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytes,\r\n  getDownloadURL,\r\n  uploadString,\r\n} from 'firebase/storage'\r\nimport { PostType, User } from './types/interface'\r\n\r\nconst app = initializeApp({\r\n  apiKey: 'AIzaSyAowcCuiyILtMdMP96n-RzUh2QVKvrN4OQ',\r\n  authDomain: 'faekbook1-aa0f8.firebaseapp.com',\r\n  projectId: 'faekbook1-aa0f8',\r\n  storageBucket: 'faekbook1-aa0f8.appspot.com',\r\n  messagingSenderId: '989041805197',\r\n  appId: '1:989041805197:web:7661cc2571e3fb3317dfc4',\r\n})\r\n\r\nexport const auth = getAuth()\r\n\r\nexport const db = getFirestore()\r\n\r\nexport const storage = getStorage(app)\r\n\r\nexport class Authen {\r\n  static signUp(\r\n    email: string,\r\n    password: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    callback: any\r\n  ) {\r\n    return createUserWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        console.log('SignUp: ', userCredential)\r\n        const uid = userCredential.user.uid\r\n        const newUser: User = {\r\n          uid: uid,\r\n          first_name: firstName,\r\n          last_name: lastName,\r\n          short_bio: 'my bio',\r\n          is_dark_theme: false,\r\n        }\r\n\r\n        DB.setUser(uid, newUser)\r\n        Authen.signIn(email, password, callback)\r\n      })\r\n      .catch(err => {\r\n        alert(`Sign up Error: ${err.code}. ${err.message}`)\r\n      })\r\n  }\r\n  static signIn(email: string, password: string, callback: any) {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredential => {\r\n        callback()\r\n        console.log(\r\n          `User with email ${userCredential.user.email} has logged in successfully`\r\n        )\r\n      })\r\n      .catch(err => alert(`Sign in Error: ${err.code}. ${err.message}`))\r\n  }\r\n  static signOut() {\r\n    signOut(auth)\r\n      .then(() => {\r\n        console.log('signed out successfully')\r\n      })\r\n      .catch(e => {\r\n        alert('Signout failed: ' + e)\r\n      })\r\n  }\r\n  // static getUserEmail() {\r\n  //   const user = auth.currentUser\r\n  //   if (user !== null) {\r\n  //     const email = user.email\r\n  //     return email\r\n  //   }\r\n  // }\r\n  // static handleSignInOutState(callback1: any, callback2 = () => {}) {\r\n  //   onAuthStateChanged(auth, user => {\r\n  //     if (user) {\r\n  //       callback1()\r\n  //     } else {\r\n  //       callback2()\r\n  //     }\r\n  //   })\r\n  // }\r\n}\r\n\r\nexport class DB {\r\n  static setUser(uid: string, payload: any) {\r\n    setDoc(doc(db, 'users', uid), payload)\r\n  }\r\n  static updateUserInfo(uid: string, payload: any) {\r\n    updateDoc(doc(db, 'users', uid), payload)\r\n  }\r\n  static setSnapshotListener(q: any, setCUPosts: any) {\r\n    return onSnapshot(q, (posts: any) => {\r\n      const postsSnapShot: DocumentData[] = []\r\n      posts.forEach((p: any) =>\r\n        postsSnapShot.push({ ...p.data(), postID: p.id })\r\n      )\r\n      setCUPosts(postsSnapShot)\r\n    })\r\n  }\r\n  // static async getUser(uid: string) {\r\n  //   const userSnap = await getDoc(doc(db, 'users', uid))\r\n  //   return userSnap.data()\r\n  // }\r\n  // static setPost(unixSecond: number, post: Post) {\r\n  //   setDoc(doc(db, 'posts', unixSecond.toString()), post, { merge: false })\r\n  // }\r\n}\r\n\r\nexport class Storage {\r\n  static setPhotosURL(uid: string, setAvatarURL: any, setCoverImageURL?: any) {\r\n    const avatarRef = ref(storage, `users/${uid}/avatar`)\r\n    const coverImageRef = ref(storage, `users/${uid}/cover_image`)\r\n    getDownloadURL(avatarRef)\r\n      .then(url => {\r\n        setAvatarURL(url)\r\n      })\r\n      .catch(e => console.log(e))\r\n    setCoverImageURL &&\r\n      getDownloadURL(coverImageRef)\r\n        .then(url => setCoverImageURL(url))\r\n        .catch(e => console.log(e))\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\n\r\nexport default function TurnOffModalButton() {\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n  return (\r\n    <StyledSpan\r\n      id='turn-off-modal'\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      onClick={() => dispatchDimBgModal({ type: 'NONE' })}\r\n    >\r\n      +\r\n    </StyledSpan>\r\n  )\r\n}\r\n\r\nconst StyledSpan = styled.span`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1.75rem;\r\n  font-size: 3.5rem;\r\n  transform: rotate(45deg);\r\n  color: ${p => p.theme.font};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebaseConfig'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\n\r\nexport default function LogInModal() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const { toggleState, dispatchDimBgModal } = useContext(Context)\r\n\r\n  const handleLogIn = () => {\r\n    Authen.signIn(email, password, () => dispatchDimBgModal({ type: 'NONE' }))\r\n    \r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Welcome Back!</div>\r\n        <input\r\n          type='text'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n          placeholder='Email or Phone Number'\r\n        />\r\n        <input\r\n          type='password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder='Password'\r\n        />\r\n        <button className='log-in-btn' onClick={handleLogIn}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>New to Faekbook?</span>\r\n        <button\r\n          className='create-new-acc-btn'\r\n          onClick={() => dispatchDimBgModal({ type: 'SIGN_UP' })}\r\n        >\r\n          Create New Account\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 40rem;\r\n  max-width: 100vw;\r\n  display: flex;\r\n  flex-flow: column;\r\n  padding: 1.5rem;\r\n  #top,\r\n  #bottom {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-flow: column;\r\n    row-gap: 1.25rem;\r\n    font-size: 1.75rem;\r\n  }\r\n  #top {\r\n    div {\r\n      align-self: flex-start;\r\n      font-weight: 500;\r\n      font-size: 2.25rem;\r\n      color: #1c1e21;\r\n      margin: 0.5rem auto 0.75rem 1rem;\r\n    }\r\n    input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .log-in-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 100%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n    margin-block: 2rem;\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    .create-new-acc-btn {\r\n      ${globalValues.ButtonCSS}\r\n      width: 60%;\r\n    }\r\n  }\r\n`\r\n","import { useState } from 'react'\r\nimport { useContext } from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport styled from 'styled-components'\r\nimport { Authen } from '../../firebaseConfig'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\n\r\nexport default function SignUpModal() {\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  // const history = useHistory()\r\n  // const returnToHomepage = () => {\r\n  //   history.push('/faekbook/')\r\n  // }\r\n  const {\r\n    toggleState,\r\n    dispatchDimBgModal,\r\n    // setCurrentUserInfoState,\r\n  } = useContext(Context)\r\n  const handleSignUp = () => {\r\n    Authen.signUp(email, password, firstName, lastName, () =>\r\n      dispatchDimBgModal({ type: 'NONE' })\r\n    )\r\n  }\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Sign Up</div>\r\n        <div>It's quick and easy</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <div className='full-name'>\r\n          <input\r\n            type='text'\r\n            placeholder='First name'\r\n            value={firstName}\r\n            onChange={e => setFirstName(e.target.value)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Last name'\r\n            value={lastName}\r\n            onChange={e => setLastName(e.target.value)}\r\n          />\r\n        </div>\r\n        <input\r\n          type='email'\r\n          placeholder='Email'\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        ></input>\r\n        <input\r\n          type='password'\r\n          placeholder='New password'\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button className='sign-up' onClick={handleSignUp}>\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='bottom'>\r\n        <span>Already have an account?</span>\r\n        <button onClick={() => dispatchDimBgModal({ type: 'LOG_IN' })}>\r\n          Log In\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  width: 45rem;\r\n  max-width: 100vw;\r\n  #top,\r\n  #middle,\r\n  #bottom {\r\n    padding: 1.5rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 1rem;\r\n    align-items: center;\r\n    & button {\r\n      ${globalValues.ButtonCSS};\r\n    }\r\n  }\r\n  #top {\r\n    align-items: flex-start;\r\n    div:first-of-type {\r\n      font-weight: 600;\r\n      font-size: 3rem;\r\n      color: #1c1e21;\r\n    }\r\n    div:last-of-type {\r\n      color: #6d747c;\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  #middle {\r\n    font-size: 1.5rem;\r\n    & input {\r\n      ${globalValues.InputCSS}\r\n    }\r\n    .full-name {\r\n      width: 100%;\r\n      display: flex;\r\n      column-gap: 0.75rem;\r\n    }\r\n    button {\r\n      margin-top: 1.5rem;\r\n    }\r\n  }\r\n  #bottom {\r\n    span {\r\n      font-size: 1.25rem;\r\n    }\r\n    button {\r\n      font-size: 1.5rem;\r\n      width: 50%;\r\n      background-color: #1877f2;\r\n    }\r\n  }\r\n  .divider {\r\n    background-color: #dddfe2;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","export default function BlueBgLikeIcon() {\r\n  return (\r\n    <img src=\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 16 16'%3e%3cdefs%3e%3clinearGradient id='a' x1='50%25' x2='50%25' y1='0%25' y2='100%25'%3e%3cstop offset='0%25' stop-color='%2318AFFF'/%3e%3cstop offset='100%25' stop-color='%230062DF'/%3e%3c/linearGradient%3e%3cfilter id='c' width='118.8%25' height='118.8%25' x='-9.4%25' y='-9.4%25' filterUnits='objectBoundingBox'%3e%3cfeGaussianBlur in='SourceAlpha' result='shadowBlurInner1' stdDeviation='1'/%3e%3cfeOffset dy='-1' in='shadowBlurInner1' result='shadowOffsetInner1'/%3e%3cfeComposite in='shadowOffsetInner1' in2='SourceAlpha' k2='-1' k3='1' operator='arithmetic' result='shadowInnerInner1'/%3e%3cfeColorMatrix in='shadowInnerInner1' values='0 0 0 0 0 0 0 0 0 0.299356041 0 0 0 0 0.681187726 0 0 0 0.3495684 0'/%3e%3c/filter%3e%3cpath id='b' d='M8 0a8 8 0 00-8 8 8 8 0 1016 0 8 8 0 00-8-8z'/%3e%3c/defs%3e%3cg fill='none'%3e%3cuse fill='url(%23a)' xlink:href='%23b'/%3e%3cuse fill='black' filter='url(%23c)' xlink:href='%23b'/%3e%3cpath fill='white' d='M12.162 7.338c.176.123.338.245.338.674 0 .43-.229.604-.474.725a.73.73 0 01.089.546c-.077.344-.392.611-.672.69.121.194.159.385.015.62-.185.295-.346.407-1.058.407H7.5c-.988 0-1.5-.546-1.5-1V7.665c0-1.23 1.467-2.275 1.467-3.13L7.361 3.47c-.005-.065.008-.224.058-.27.08-.079.301-.2.635-.2.218 0 .363.041.534.123.581.277.732.978.732 1.542 0 .271-.414 1.083-.47 1.364 0 0 .867-.192 1.879-.199 1.061-.006 1.749.19 1.749.842 0 .261-.219.523-.316.666zM3.6 7h.8a.6.6 0 01.6.6v3.8a.6.6 0 01-.6.6h-.8a.6.6 0 01-.6-.6V7.6a.6.6 0 01.6-.6z'/%3e%3c/g%3e%3c/svg%3e\" alt='like-icon'/>\r\n  )\r\n}\r\n","import { BsThreeDots } from 'react-icons/bs'\r\nimport styled from 'styled-components'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport { defaultAvatar } from '../../utils/defaults'\r\nimport { doc, getDoc, Timestamp } from '@firebase/firestore'\r\nimport { format } from 'date-fns'\r\nimport fromUnixTime from 'date-fns/fromUnixTime'\r\nimport { db, Storage } from '../../firebaseConfig'\r\n\r\nconst Comment: React.FC<{\r\n  commenterUID: string\r\n  content: string\r\n  likes: Array<string>\r\n  date: Timestamp\r\n}> = ({ commenterUID, content, date, likes }) => {\r\n  const { toggleState } = useContext(Context)\r\n  const [commentAvatar, setCommentAvatar] = useState<any>(null)\r\n  const [userInfo, setUserInfo] = useState<any>(null)\r\n  useEffect(() => {\r\n    Storage.setPhotosURL(commenterUID, setCommentAvatar)\r\n    getDoc(doc(db, 'users', commenterUID)).then(userSnap => {\r\n      const userInfo = userSnap.data()\r\n      setUserInfo(userInfo)\r\n    })\r\n  }, [])\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <img src={commentAvatar || defaultAvatar} alt='comment_avatar' />\r\n\r\n      <div className='middle'>\r\n        <div className='top'>\r\n          <div className='bubble'>\r\n            <div className='username'>\r\n              {userInfo?.first_name} {userInfo?.last_name}\r\n            </div>\r\n            <div className='content'>{content}</div>\r\n          </div>\r\n          <div className='three-dots'>\r\n            <BsThreeDots className='icon' />\r\n          </div>\r\n        </div>\r\n        <div className='like'>\r\n          Like{' '}\r\n          {`${format(fromUnixTime(date.seconds), 'yyyy, MMM d')} at ${format(\r\n            fromUnixTime(date.seconds),\r\n            'h:mm a'\r\n          )}`}\r\n        </div>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')`\r\n  display: flex;\r\n  column-gap: 1rem;\r\n  &:hover {\r\n    & > .middle > .top > .three-dots > .icon {\r\n      display: block;\r\n    }\r\n  }\r\n  img {\r\n    height: 3.5rem;\r\n    width: 3.5rem;\r\n  }\r\n  .middle {\r\n    .top {\r\n      display: flex;\r\n      .bubble {\r\n        padding: 1rem;\r\n        border-radius: 1rem;\r\n        background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n        font-size: 1.15rem;\r\n        color: ${p => p.theme.font};\r\n        max-width: 95%;\r\n        .username {\r\n          font-weight: 500;\r\n          padding-bottom: 0.25rem;\r\n        }\r\n        .content {\r\n          line-height: 1.4;\r\n        }\r\n      }\r\n      .three-dots {\r\n        display: grid;\r\n        place-items: center;\r\n        width: 1rem;\r\n        margin-left: 1rem;\r\n        .icon {\r\n          display: none;\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .like {\r\n      padding: 0.5rem 0 0 1rem;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Comment\r\n","import { useContext } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { themes } from '../../utils/themes'\r\nimport { RiDeleteBin6Line } from 'react-icons/ri'\r\nimport { FiEdit } from 'react-icons/fi'\r\nimport { deleteDoc, doc } from '@firebase/firestore'\r\nimport { db, DB } from '../../firebaseConfig'\r\n\r\nconst PostModal: React.FC<{ setModalVisibility: any; postID: string }> = ({\r\n  setModalVisibility,\r\n  postID,\r\n}) => {\r\n  const { toggleState } = useContext(Context)\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <div\r\n        className='icon'\r\n        onClick={() => {\r\n          setModalVisibility(false)\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <FiEdit />\r\n        </div>\r\n        Edit Post\r\n      </div>\r\n\r\n      <div\r\n        className='icon'\r\n        onClick={() => {\r\n          setModalVisibility(false)\r\n          deleteDoc(doc(db, 'posts', postID))\r\n        }}\r\n      >\r\n        <div className='icon-wrapper'>\r\n          <RiDeleteBin6Line />\r\n        </div>\r\n        Delete Post\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')`\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 5rem;\r\n  width: 20rem;\r\n  padding: 0.5rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  /* profile, edit and delete */\r\n  .icon {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    &:hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n    .icon-wrapper {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      font-size: 2rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n      font-size: 1.75rem;\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostModal\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BsThreeDots } from 'react-icons/bs'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { AiFillLike } from 'react-icons/ai'\r\nimport { GoComment } from 'react-icons/go'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { format, fromUnixTime } from 'date-fns'\r\nimport BlueBgLikeIcon from '../../utils/BlueBgLikeIcon'\r\nimport { CommentType } from '../../types/interface'\r\nimport { defaultAvatar } from '../../utils/defaults'\r\nimport Comment from './Comment'\r\nimport { doc, getDoc, Timestamp, updateDoc } from '@firebase/firestore'\r\nimport { db, Storage } from '../../firebaseConfig'\r\nimport { Link } from 'react-router-dom'\r\nimport PostModal from '../Modals/PostModal'\r\n\r\nconst Post: React.FC<{\r\n  userID: string\r\n  postID: string\r\n  full_name: string\r\n  date: Timestamp\r\n  content: string\r\n  likes: Array<string>\r\n  comments: Array<CommentType>\r\n  is_profile_page?: boolean\r\n}> = ({ full_name, userID, postID, date, content, likes, comments }) => {\r\n  const { currentUserInfo, toggleState, isUserSignedIn, CUAvatarURL } =\r\n    useContext(Context)\r\n  const [isLikedByCurrentUser, setIsLiked] = useState<boolean>(false)\r\n  const [postAvatarURL, setPostAvatar] = useState<any>(null)\r\n  useEffect(() => {\r\n    //* set post avatar */\r\n    ;(async () => {\r\n      Storage.setPhotosURL(userID, setPostAvatar)\r\n    })()\r\n    //* set like effects */\r\n    if (isUserSignedIn) {\r\n      likes.includes(currentUserInfo?.uid)\r\n        ? setIsLiked(true)\r\n        : setIsLiked(false)\r\n    } else setIsLiked(false)\r\n  }, [likes, isUserSignedIn])\r\n\r\n  const toggleLikeThisPost = () => {\r\n    const userID = currentUserInfo?.uid\r\n    getDoc(doc(db, 'posts', postID)).then(p => {\r\n      const likes = p.data()?.likes\r\n      likes.includes(userID)\r\n        ? likes.splice(likes.indexOf(userID), 1)\r\n        : likes.push(userID)\r\n      updateDoc(doc(db, 'posts', postID), { likes: likes })\r\n    })\r\n  }\r\n\r\n  const [isShowingComments, setIsShowingComments] = useState(false)\r\n  const [commentContent, setCommentContent] = useState('')\r\n  const postComment = (e: any) => {\r\n    e.preventDefault()\r\n    if (commentContent !== '') {\r\n      const userID = currentUserInfo?.uid\r\n      getDoc(doc(db, 'posts', postID)).then(p => {\r\n        const comments = p.data()?.comments\r\n        const newComment: CommentType = {\r\n          commenterUID: userID,\r\n          date: Timestamp.fromDate(new Date()),\r\n          content: commentContent,\r\n          likes: [],\r\n        }\r\n        updateDoc(doc(db, 'posts', postID), {\r\n          comments: [...comments, newComment],\r\n        })\r\n        setCommentContent('')\r\n      })\r\n    }\r\n  }\r\n  const renderComments = comments.map(cmt => (\r\n    <Comment\r\n      commenterUID={cmt.commenterUID}\r\n      content={cmt.content}\r\n      date={cmt.date}\r\n      likes={cmt.likes}\r\n    />\r\n  ))\r\n\r\n  const [isShowingModal, setModalVisibility] = useState<boolean>(false)\r\n\r\n  return (\r\n    <StyledSection\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      isLikedByCurrentUser={isLikedByCurrentUser ? 1 : 0}\r\n      hasZeroComments={comments.length === 0 ? 1 : 0}\r\n      isUserSignedIn={isUserSignedIn ? 1 : 0}\r\n    >\r\n      <div id='user-info'>\r\n        <Link to={`/faekbook/${userID}`}>\r\n          <img\r\n            src={\r\n              userID === currentUserInfo?.uid\r\n                ? CUAvatarURL || defaultAvatar\r\n                : postAvatarURL || defaultAvatar\r\n            }\r\n            alt='avatar'\r\n          />\r\n        </Link>\r\n        <div className='info'>\r\n          <div className='name'>\r\n            <Link to={`/faekbook/${userID}`}>{full_name}</Link>\r\n          </div>\r\n          {`${format(fromUnixTime(date.seconds), 'yyyy, MMM d')} at ${format(\r\n            fromUnixTime(date.seconds),\r\n            'h:mm a'\r\n          )}`}\r\n        </div>\r\n      </div>\r\n      <main id='content'>{content}</main>\r\n      <div id='num-likes-cmts'>\r\n        <div className='likes'>\r\n          {likes.length >= 1 && (\r\n            <>\r\n              <BlueBgLikeIcon />\r\n              <span>{likes.length}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className='comments'>\r\n          {comments.length > 0 && (\r\n            <>\r\n              {comments.length} comment{comments.length > 1 && 's'}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div id='like-comment'>\r\n        <div\r\n          className='like'\r\n          onClick={() => isUserSignedIn && toggleLikeThisPost()}\r\n        >\r\n          <AiFillLike className='icon' />\r\n          <span>Like</span>\r\n        </div>\r\n        <div\r\n          className='comments'\r\n          onClick={() => {\r\n            setIsShowingComments(!isShowingComments)\r\n          }}\r\n        >\r\n          <GoComment className='icon' />\r\n          <span>View Comments</span>\r\n        </div>\r\n      </div>\r\n      {isShowingComments && <div id='comments'>{renderComments}</div>}\r\n      {isUserSignedIn && (\r\n        <form className='comment-input' onSubmit={postComment}>\r\n          <img src={CUAvatarURL || defaultAvatar} alt='avatar' />\r\n          <input\r\n            value={commentContent}\r\n            placeholder='Write a comment...'\r\n            onChange={e => {\r\n              setCommentContent(e.target.value)\r\n            }}\r\n          ></input>\r\n        </form>\r\n      )}\r\n      {userID === currentUserInfo?.uid && (\r\n        <div\r\n          className='three-dots'\r\n          onClick={() => setModalVisibility(!isShowingModal)}\r\n        >\r\n          <BsThreeDots className='icon' />\r\n        </div>\r\n      )}\r\n      {isShowingModal && (\r\n        <PostModal setModalVisibility={setModalVisibility} postID={postID} />\r\n      )}\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled('section')<{\r\n  isDarkTheme: number\r\n  isLikedByCurrentUser: number\r\n  hasZeroComments: number\r\n  isUserSignedIn: number\r\n}>`\r\n  position: relative;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font_lighter};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  padding-bottom: ${p => p.isUserSignedIn && '1.5rem'};\r\n  & > .three-dots {\r\n    position: absolute;\r\n    right: 1.75rem;\r\n    top: 1.5rem;\r\n    padding: 0.75rem;\r\n    border-radius: 50%;\r\n    &:hover {\r\n      background-color: ${p => p.theme.theme_toggler_bgclr};\r\n      cursor: pointer;\r\n    }\r\n    .icon {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  #user-info {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .info {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-flow: column;\r\n      justify-content: space-around;\r\n      height: 3.5rem;\r\n      .name {\r\n        a {\r\n          text-decoration: none;\r\n          font-size: 1.5rem;\r\n          font-weight: 700;\r\n          color: ${p => p.theme.font};\r\n          &:hover {\r\n            text-decoration: underline;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  #content {\r\n    font-size: 1.5rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    word-wrap: break-word;\r\n  }\r\n  #num-likes-cmts {\r\n    padding: 1.5rem 1.5rem 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    .likes {\r\n      display: flex;\r\n      align-items: center;\r\n      column-gap: 0.5rem;\r\n      img {\r\n        height: 1.75rem;\r\n        width: 1.75rem;\r\n      }\r\n      span {\r\n        font-size: 1.25rem;\r\n      }\r\n    }\r\n    .comments {\r\n      line-height: 1.75rem;\r\n      font-size: 1.25rem;\r\n    }\r\n  }\r\n  #like-comment {\r\n    border-block: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')} 1px solid;\r\n    border-bottom: ${p => p.isUserSignedIn || 'none'};\r\n    margin-top: 1.5rem;\r\n    padding: 0.5rem 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    column-gap: 0.5rem;\r\n    .like,\r\n    .comments {\r\n      height: 3.25rem;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      width: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      column-gap: 0.75rem;\r\n      background-color: ${p => p.theme.main_bgclr};\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n      .icon {\r\n        font-size: 1.75rem;\r\n      }\r\n    }\r\n    .like {\r\n      color: ${p => p.isLikedByCurrentUser && '#036ee2'};\r\n      color: ${p => p.isUserSignedIn || '#ebebebae'};\r\n      &:hover {\r\n        cursor: ${p => (p.isUserSignedIn ? 'pointer' : 'not-allowed')};\r\n        background-color: ${p =>\r\n          p.isUserSignedIn\r\n            ? p.isDarkTheme\r\n              ? '#64646471'\r\n              : '#ebebebae'\r\n            : 'unset'};\r\n      }\r\n    }\r\n    .comments {\r\n      color: ${p => p.hasZeroComments && '#ebebebae'};\r\n      &:hover {\r\n        cursor: ${p => (p.hasZeroComments ? 'not-allowed' : 'pointer')};\r\n        background-color: ${p =>\r\n          p.hasZeroComments\r\n            ? 'unset'\r\n            : p.isDarkTheme\r\n            ? '#64646471'\r\n            : '#ebebebae'};\r\n      }\r\n    }\r\n  }\r\n  #comments {\r\n    padding: 1.5rem 1.5rem 0;\r\n    margin-bottom: -0.75rem;\r\n    display: flex;\r\n    flex-flow: column;\r\n    row-gap: 0.75rem;\r\n  }\r\n  form.comment-input {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    padding: 1.5rem 1.5rem 0;\r\n    img {\r\n      height: 3.5rem;\r\n      width: 3.5rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      ${imageObjectSettings}\r\n    }\r\n    input {\r\n      height: 3.5rem;\r\n      color: ${p => p.theme.font};\r\n      border: none;\r\n      outline: none;\r\n      flex-grow: 1;\r\n      padding-left: 1.25rem;\r\n      font-size: 1.5rem;\r\n      border-radius: 2rem;\r\n      background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n      display: flex;\r\n      align-items: center;\r\n      &:hover {\r\n        cursor: text;\r\n        filter: brightness(${p => (p.isDarkTheme ? '1.1' : '0.95')});\r\n      }\r\n      &::placeholder {\r\n        color: ${p => p.theme.font_lighter};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Post\r\n","import { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { defaultAvatar } from '../../utils/defaults'\r\n\r\nexport default function WhatsOnYourMind() {\r\n  const { toggleState, dispatchDimBgModal, isUserSignedIn, CUAvatarURL } =\r\n    useContext(Context)\r\n  return (\r\n    <StyledSection theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      <img\r\n        src={isUserSignedIn ? CUAvatarURL || defaultAvatar : undefined}\r\n        alt='avatar'\r\n      />\r\n      <div onClick={() => dispatchDimBgModal({ type: 'CREATE_POST' })}>\r\n        What's on your mind?\r\n      </div>\r\n    </StyledSection>\r\n  )\r\n}\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  width: 50rem;\r\n  max-width: 100%;\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  align-items: center;\r\n  column-gap: 1rem;\r\n  margin-inline: auto;\r\n  border-radius: 1rem;\r\n  margin-top: 2rem;\r\n  img {\r\n    height: 4rem;\r\n    width: 4rem;\r\n    background: ${p => p.theme.theme_toggler_bgclr};\r\n    ${imageObjectSettings}\r\n  }\r\n  div {\r\n    color: ${p => p.theme.font_lighter};\r\n    flex-grow: 1;\r\n    padding-left: 2rem;\r\n    font-size: 1.5rem;\r\n    height: 4rem;\r\n    border-radius: 2rem;\r\n    background: ${p => p.theme.whats_on_ur_mind_bgclr};\r\n    display: flex;\r\n    align-items: center;\r\n    &:hover {\r\n      cursor: pointer;\r\n      filter: brightness(${p => (p.theme.type === 'dark' ? '1.1' : '0.95')});\r\n    }\r\n  }\r\n`\r\n","import { collection, orderBy, query } from '@firebase/firestore'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { db, DB } from '../../firebaseConfig'\r\nimport Context from '../../utils/Context'\r\nimport { themes } from '../../utils/themes'\r\nimport Post from './Post'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\n\r\nconst MainPage: React.FC<any> = () => {\r\n  const { toggleState, isUserSignedIn } = useContext(Context)\r\n\r\n  const [allPosts, setAllPosts] = useState<any>(null)\r\n\r\n  useEffect(() => {\r\n    const postsRef = collection(db, 'posts')\r\n    const q = query(postsRef, orderBy('date', 'desc'))\r\n    const unsub = DB.setSnapshotListener(q, setAllPosts)\r\n    console.log('main page renders')\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [isUserSignedIn])\r\n\r\n  const renderPosts = allPosts?.map((p: any) => (\r\n    <Post\r\n      key={p.postID}\r\n      postID={p.postID}\r\n      userID={p.userID}\r\n      full_name={p.fullname}\r\n      date={p.date}\r\n      content={p.content}\r\n      likes={p.likes}\r\n      comments={p.comments}\r\n    />\r\n  ))\r\n  return (\r\n    <StyledDiv theme={toggleState.isDarkTheme ? themes.dark : themes.light}>\r\n      {isUserSignedIn && <WhatsOnYourMind />}\r\n      {renderPosts}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  color: ${p => p.theme.font};\r\n  padding-bottom: 2rem;\r\n`\r\n\r\nexport default MainPage\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { defaultAvatar, defaultCoverImage } from '../../utils/defaults'\r\nimport styled from 'styled-components'\r\nimport Context from '../../utils/Context'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { AiOutlineCamera, AiFillCamera } from 'react-icons/ai'\r\nimport ColorThief from 'colorthief'\r\nimport useWindowSize, { Size } from '../../hooks/useWindowSize'\r\nimport WhatsOnYourMind from './WhatsOnYourMind'\r\nimport { DB, db, Storage, storage } from '../../firebaseConfig'\r\nimport Post from './Post'\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from '@firebase/firestore'\r\nimport {\r\n  deleteObject,\r\n  getDownloadURL,\r\n  ref,\r\n  uploadBytes,\r\n} from '@firebase/storage'\r\nimport { useParams } from 'react-router'\r\n\r\nconst ProfilePage: React.FC<any> = () => {\r\n  const {\r\n    toggleState,\r\n    isUserSignedIn,\r\n    currentUserInfo,\r\n    CUAvatarURL,\r\n    setAvatarURL,\r\n  } = useContext(Context)\r\n  const { userID }: { userID: string } = useParams()\r\n\r\n  const [editCoverPhotoHidden, setEditCoverPhotoHidden] = useState(false)\r\n\r\n  const [userInfo, setUserInfo] = useState<any>(null)\r\n  useEffect(() => {\r\n    getDoc(doc(db, 'users', userID)).then(userSnap => {\r\n      const userInfo = userSnap.data()\r\n      setUserInfo(userInfo)\r\n    })\r\n  }, [])\r\n\r\n  const [userCoverImgURL, setCoverImageURL] = useState<any>(null)\r\n  const [userAvatarURL, setUserAvatarURL] = useState<any>(null)\r\n  const updatePhoto = (e: any) => {\r\n    const file = e.target.files[0]\r\n    if (file) {\r\n      const isAvatar = e.target.id === 'avatar'\r\n      const fileName = isAvatar ? 'avatar' : 'cover_image'\r\n      const fileRef = ref(storage, `users/${userID}/${fileName}`)\r\n      deleteObject(fileRef).catch(e => console.log(e))\r\n      uploadBytes(fileRef, file).then(() =>\r\n        getDownloadURL(fileRef).then(url =>\r\n          isAvatar\r\n            ? userID === currentUserInfo?.uid\r\n              ? setAvatarURL(url)\r\n              : setUserAvatarURL(url)\r\n            : setCoverImageURL(url)\r\n        )\r\n      )\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      Storage.setPhotosURL(userID, setAvatarURL, setCoverImageURL)\r\n    })()\r\n  }, [userID])\r\n\r\n  //* width size query for the edit cover photo button */\r\n  const size: Size = useWindowSize()\r\n  useEffect(() => {\r\n    const { width } = size\r\n    if (width !== undefined && width <= 900) {\r\n      setEditCoverPhotoHidden(true)\r\n    } else setEditCoverPhotoHidden(false)\r\n  }, [size])\r\n\r\n  //* render posts */\r\n  const [userPosts, setUserPosts] = useState<any>(null)\r\n  useEffect(() => {\r\n    const postsRef = collection(db, 'posts')\r\n    const q = query(\r\n      postsRef,\r\n      where('userID', '==', userID),\r\n      orderBy('date', 'desc')\r\n    )\r\n    const unsub = DB.setSnapshotListener(q, setUserPosts)\r\n    console.log('profile renders')\r\n    return () => {\r\n      unsub()\r\n    }\r\n  }, [userID])\r\n  const renderPosts = userPosts?.map((p: any) => (\r\n    <Post\r\n      key={p.postID}\r\n      postID={p.postID}\r\n      userID={p.userID}\r\n      full_name={p.fullname}\r\n      date={p.date}\r\n      content={p.content}\r\n      likes={p.likes}\r\n      comments={p.comments}\r\n      is_profile_page={true}\r\n    />\r\n  ))\r\n\r\n  //* get dorminant color of cover photo */\r\n  const [bgGradient, setBgGradient] = useState<string>('')\r\n  useEffect(() => {\r\n    const colorThief = new ColorThief()\r\n    const img: any = document.querySelector('#get-dominant-clr')\r\n    img.onload = () => {\r\n      const color = colorThief.getColor(img).toString()\r\n      setBgGradient(color)\r\n    }\r\n  }, [isUserSignedIn])\r\n  const googleProxyURL =\r\n    'https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&refresh=2592000&url='\r\n  //? proxy server produces a more liberal CORS policy */\r\n  const renderColorThief = (\r\n    <img\r\n      src={\r\n        googleProxyURL +\r\n        (encodeURIComponent(userCoverImgURL) ||\r\n          encodeURIComponent(defaultCoverImage))\r\n      }\r\n      crossOrigin='anonymous'\r\n      alt='colorthief'\r\n      id='get-dominant-clr'\r\n    />\r\n  )\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      bgGradient={bgGradient}\r\n      editCoverPhotoHidden={editCoverPhotoHidden}\r\n    >\r\n      <header>\r\n        <div id='cover-image'>\r\n          {renderColorThief}\r\n          <div className='avatar'>\r\n            <img\r\n              src={\r\n                userID === currentUserInfo?.uid\r\n                  ? CUAvatarURL || defaultAvatar\r\n                  : userAvatarURL || defaultAvatar\r\n              }\r\n              alt='avatar'\r\n            />\r\n            {userID === currentUserInfo?.uid && (\r\n              <label className='update-avatar'>\r\n                <input\r\n                  onChange={updatePhoto}\r\n                  id='avatar'\r\n                  type='file'\r\n                  accept='image/*'\r\n                  style={{ display: 'none' }}\r\n                />\r\n                {toggleState.isDarkTheme ? (\r\n                  <AiFillCamera className='icon' style={{ fill: 'white' }} />\r\n                ) : (\r\n                  <AiOutlineCamera className='icon' />\r\n                )}\r\n              </label>\r\n            )}\r\n          </div>\r\n          {userID === currentUserInfo?.uid && (\r\n            <label className='edit-cover-photo'>\r\n              <input\r\n                onChange={updatePhoto}\r\n                id='cover'\r\n                type='file'\r\n                accept='image/*'\r\n                style={{ display: 'none' }}\r\n              />\r\n              <AiFillCamera className='icon' /> <span>Edit Cover Photo</span>\r\n            </label>\r\n          )}\r\n        </div>\r\n\r\n        <div id='intro'>\r\n          <div className='name'>\r\n            {userInfo\r\n              ? `${userInfo.first_name} ${userInfo.last_name}`\r\n              : 'default name'}\r\n          </div>\r\n          <div className='short-description'>\r\n            {userInfo && userInfo.short_bio}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        {userID === currentUserInfo?.uid && <WhatsOnYourMind />}\r\n        {renderPosts}\r\n      </main>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  bgGradient: string\r\n  editCoverPhotoHidden: boolean\r\n}>`\r\n  color: ${p => p.theme.font};\r\n  padding-bottom: 2rem;\r\n  header {\r\n    background-color: ${p => p.theme.main_bgclr};\r\n    background: linear-gradient(\r\n      180deg,\r\n      rgba(${p => p.bgGradient}) 0%,\r\n      ${p => p.theme.main_bgclr} 50%\r\n    );\r\n    #cover-image {\r\n      position: relative;\r\n      width: 65rem;\r\n      max-width: 100%;\r\n      aspect-ratio: 5/2;\r\n      margin-inline: auto;\r\n      & > img {\r\n        border-radius: 0 0 10px 10px;\r\n        height: 100%;\r\n        width: 100%;\r\n        object-fit: cover;\r\n        object-position: 50% 50%;\r\n      }\r\n      .avatar {\r\n        position: absolute;\r\n        bottom: -2rem;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        width: 13rem;\r\n        height: 13rem;\r\n        padding: 0.5rem;\r\n        background-color: ${p => p.theme.main_bgclr};\r\n        border-radius: 50%;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          ${imageObjectSettings};\r\n        }\r\n        .update-avatar {\r\n          position: absolute;\r\n          right: 1.1rem;\r\n          bottom: 1.1rem;\r\n          padding: 0.5rem;\r\n          border-radius: 50%;\r\n          background-color: ${p => p.theme.avatar_pic_cam_icon_bgclr};\r\n          &:hover {\r\n            cursor: pointer;\r\n            filter: brightness(1.1);\r\n          }\r\n          .icon {\r\n            height: 2rem;\r\n            width: 2rem;\r\n          }\r\n        }\r\n      }\r\n      .edit-cover-photo {\r\n        color: black;\r\n        position: absolute;\r\n        right: 2rem;\r\n        bottom: 3rem;\r\n        background-color: white;\r\n        padding: 0.5rem 1rem;\r\n        display: flex;\r\n        align-items: center;\r\n        column-gap: 1rem;\r\n        border-radius: 7px;\r\n        &:hover {\r\n          cursor: pointer;\r\n          filter: brightness(0.95);\r\n        }\r\n        .icon {\r\n          height: 1.5rem;\r\n          width: 1.5rem;\r\n        }\r\n        span {\r\n          font-size: 1rem;\r\n          font-weight: 700;\r\n          display: ${p => (p.editCoverPhotoHidden ? 'none' : 'block')};\r\n        }\r\n      }\r\n    }\r\n    #intro {\r\n      padding: 3rem 2rem 2rem;\r\n      text-align: center;\r\n      .name {\r\n        font-size: 2.75rem;\r\n        font-weight: 800;\r\n      }\r\n      .short-description {\r\n        padding-top: 1rem;\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n  main {\r\n  }\r\n`\r\n\r\nexport default ProfilePage\r\n","import { useState, useEffect } from 'react'\r\n// Define general type for useWindowSize hook, which includes width and height\r\nexport interface Size {\r\n  width: number | undefined\r\n  height: number | undefined\r\n}\r\n\r\n// Usage\r\n// function App() {\r\n//   const size: Size = useWindowSize()\r\n//   return (\r\n//     <div>\r\n//       {size.width}px / {size.height}px\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// Hook\r\nexport default function useWindowSize(): Size {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<Size>({\r\n    width: undefined,\r\n    height: undefined,\r\n  })\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      })\r\n    }\r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize)\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize()\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, []) // Empty array ensures that effect is only run on mount\r\n  return windowSize\r\n}\r\n","import { useContext } from 'react'\r\nimport Context from '../../utils/Context'\r\nimport { FaMoon, FaSun } from 'react-icons/fa'\r\nimport { GoSignOut, GoSignIn } from 'react-icons/go'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport { Link } from 'react-router-dom'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { Authen, DB } from '../../firebaseConfig'\r\nimport { useHistory } from 'react-router'\r\nimport { defaultAvatar } from '../../utils/defaults'\r\n\r\nconst DropDownMenu: React.FC<any> = () => {\r\n  const {\r\n    currentUserInfo,\r\n    CUAvatarURL,\r\n    isUserSignedIn,\r\n    toggleState,\r\n    dispatchToggle,\r\n    dispatchDimBgModal,\r\n  } = useContext(Context)\r\n\r\n  const history = useHistory()\r\n  const returnToHomepage = () => {\r\n    history.push('/faekbook/')\r\n  }\r\n\r\n  const handleToggleTheme = () => {\r\n    dispatchToggle({ type: 'TOGGLE_THEME' })\r\n    DB.updateUserInfo(currentUserInfo.uid, {\r\n      is_dark_theme: !toggleState.isDarkTheme,\r\n    })\r\n    dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n  }\r\n\r\n  const renderAvatar = <img src={CUAvatarURL || defaultAvatar} alt='avatar' />\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isUserSignedIn={isUserSignedIn ? 1 : 0}\r\n      onClick={e => e.stopPropagation()}\r\n    >\r\n      <Link\r\n        to='/faekbook/profile'\r\n        onClick={() =>\r\n          isUserSignedIn && dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n        }\r\n      >\r\n        <div className='profile'>\r\n          {renderAvatar}\r\n          <div className='name'>\r\n            <span>\r\n              {isUserSignedIn && currentUserInfo\r\n                ? `${currentUserInfo.first_name} ${currentUserInfo.last_name}`\r\n                : 'User'}\r\n            </span>\r\n            <span>{isUserSignedIn ? 'See your profile' : 'Please log in'}</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className='divider' />\r\n\r\n      <div className='theme-toggler' onClick={handleToggleTheme}>\r\n        <div className='icon'>\r\n          {toggleState.isDarkTheme ? <FaSun /> : <FaMoon />}\r\n        </div>\r\n        Change to {toggleState.isDarkTheme ? 'Light' : 'Dark'} theme\r\n      </div>\r\n\r\n      <div\r\n        className='log-in-out'\r\n        onClick={() => {\r\n          dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          isUserSignedIn\r\n            ? (() => {\r\n                Authen.signOut()\r\n                returnToHomepage()\r\n              })()\r\n            : dispatchDimBgModal({ type: 'LOG_IN' })\r\n        }}\r\n      >\r\n        <div className='icon'>\r\n          {isUserSignedIn ? <GoSignOut /> : <GoSignIn />}\r\n        </div>\r\n        Log {isUserSignedIn ? 'Out' : 'In'}\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{ isUserSignedIn: number }>`\r\n  position: fixed;\r\n  right: 1rem;\r\n  top: 5rem;\r\n  width: 30rem;\r\n  padding: 1rem;\r\n  z-index: 100;\r\n  border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n  background: ${p => p.theme.main_bgclr};\r\n  box-shadow: ${p => p.theme.bxShdw};\r\n  /* profile, theme-toggler and log-in-out */\r\n  a > .profile,\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    display: flex;\r\n    cursor: pointer;\r\n    border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n    padding: 0.5rem;\r\n    column-gap: 1rem;\r\n    &:hover {\r\n      background-color: ${p => p.theme.hover};\r\n    }\r\n  }\r\n  /* profile */\r\n  a {\r\n    text-decoration: none;\r\n    pointer-events: ${p => (p.isUserSignedIn ? 'auto' : 'none')};\r\n    .profile {\r\n      opacity: ${p => (p.isUserSignedIn ? '100%' : '30%')};\r\n      img {\r\n        height: 5rem;\r\n        background: ${p => p.theme.theme_toggler_bgclr};\r\n        ${imageObjectSettings}\r\n      }\r\n      .name {\r\n        display: flex;\r\n        flex-flow: column;\r\n        justify-content: space-evenly;\r\n        span:first-of-type {\r\n          font-size: 1.3rem;\r\n          font-weight: 600;\r\n          color: ${p => p.theme.font};\r\n        }\r\n        span:last-of-type {\r\n          font-size: 1.1375rem;\r\n          color: ${p => p.theme.font_lighter};\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .divider {\r\n    margin-block: 0.5rem;\r\n    height: 2px;\r\n    width: 100%;\r\n    background: ${p => p.theme.divider_clr};\r\n  }\r\n  /* theme-toggler and log-in-out */\r\n  .theme-toggler,\r\n  .log-in-out {\r\n    align-items: center;\r\n    color: ${p => p.theme.font};\r\n    font-weight: 700;\r\n    .icon {\r\n      height: ${globalValues.navbar_elements_height};\r\n      width: ${globalValues.navbar_elements_height};\r\n      border-radius: 50%;\r\n      font-size: 2rem;\r\n      background: ${p => p.theme.theme_toggler_bgclr};\r\n      fill: ${p => p.theme.icon_color};\r\n    }\r\n  }\r\n  .theme-toggler {\r\n    .icon {\r\n      display: grid;\r\n      place-items: center;\r\n    }\r\n  }\r\n  .log-in-out {\r\n    .icon {\r\n      position: relative;\r\n      svg {\r\n        position: absolute;\r\n        top: 0.7rem;\r\n        left: ${p => (p.isUserSignedIn ? '0.7rem' : '0.5rem')};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default DropDownMenu\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport globalValues from '../../styles/globalValues'\r\nimport Context from '../../utils/Context'\r\nimport TurnOffModalButton from './TurnOffModalButton'\r\nimport { imageObjectSettings, themes } from '../../utils/themes'\r\nimport { format, getUnixTime } from 'date-fns'\r\nimport { PostType } from '../../types/interface'\r\nimport { db, DB } from '../../firebaseConfig'\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  serverTimestamp,\r\n  setDoc,\r\n  Timestamp,\r\n} from '@firebase/firestore'\r\nimport { defaultAvatar } from '../../utils/defaults'\r\n\r\nexport default function CreatePost() {\r\n  const [content, setContent] = useState<string>('')\r\n  const { currentUserInfo, toggleState, dispatchDimBgModal, CUAvatarURL } =\r\n    useContext(Context)\r\n\r\n  const addPost = () => {\r\n    const post: PostType = {\r\n      userID: currentUserInfo.uid,\r\n      fullname: currentUserInfo.first_name + ' ' + currentUserInfo.last_name,\r\n      date: Timestamp.fromDate(new Date()),\r\n      content,\r\n      likes: [],\r\n      comments: [],\r\n    }\r\n\r\n    addDoc(collection(db, 'posts'), post)\r\n\r\n    dispatchDimBgModal({ type: 'NONE' })\r\n  }\r\n\r\n  return (\r\n    <StyledDiv\r\n      theme={toggleState.isDarkTheme ? themes.dark : themes.light}\r\n      isDarkTheme={toggleState.isDarkTheme ? 1 : 0}\r\n      textSmallSize={content.length > 40 ? 1 : 0}\r\n      postButtonActivated={content.length > 0 ? 1 : 0}\r\n    >\r\n      <TurnOffModalButton />\r\n      <div id='top'>\r\n        <div>Create Post</div>\r\n      </div>\r\n      <div className='divider'></div>\r\n      <div id='middle'>\r\n        <img src={CUAvatarURL || defaultAvatar} alt='my_avatar' />\r\n        <div className='name'>\r\n          {currentUserInfo &&\r\n            `${currentUserInfo.first_name} ${currentUserInfo.last_name}`}\r\n        </div>\r\n      </div>\r\n      <textarea\r\n        placeholder=\"What's on your mind?\"\r\n        onChange={e => setContent(e.target.value)}\r\n        autoFocus\r\n      />\r\n      <div className='post-button'>\r\n        <button disabled={content.length === 0} onClick={addPost}>\r\n          Post\r\n        </button>\r\n      </div>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled('div')<{\r\n  isDarkTheme: number\r\n  textSmallSize: number\r\n  postButtonActivated: number\r\n}>`\r\n  width: 50rem;\r\n  max-width: 100vw;\r\n  background-color: ${p => p.theme.main_bgclr};\r\n  color: ${p => p.theme.font};\r\n  border-radius: 10px;\r\n  #middle,\r\n  textarea,\r\n  .post-button {\r\n    padding: 1.5rem 1.5rem;\r\n  }\r\n\r\n  #top {\r\n    line-height: 5.5rem;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    font-weight: 700;\r\n    height: 5.5rem;\r\n  }\r\n  #middle {\r\n    display: flex;\r\n    align-items: center;\r\n    column-gap: 1rem;\r\n    img {\r\n      height: 4rem;\r\n      width: 4rem;\r\n      ${imageObjectSettings}\r\n    }\r\n    .name {\r\n      font-size: 1.5rem;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    padding-top: 0;\r\n    background-color: inherit;\r\n    font-family: inherit;\r\n    font-size: ${p => (p.textSmallSize ? '1.5rem' : '2.5rem')};\r\n    display: block;\r\n    border: none;\r\n    outline: none;\r\n    width: 100%;\r\n    min-height: 15rem;\r\n    resize: none;\r\n    color: ${p => p.theme.font};\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.75rem;\r\n      border-radius: 3px;\r\n      background-color: rgba(195, 195, 195, 0.3);\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background: rgba(114, 114, 114, 0.5);\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .post-button {\r\n    button {\r\n      width: 100%;\r\n      height: 3.5rem;\r\n      font-size: 1.5rem;\r\n      font-weight: 700;\r\n      border-radius: ${globalValues.dropdown_menu_bdr_rds};\r\n      margin-inline: auto;\r\n      border: none;\r\n      color: ${p => (p.postButtonActivated ? 'white' : '#858686')};\r\n      background-color: ${p =>\r\n        p.postButtonActivated\r\n          ? '#2D88FF'\r\n          : p.isDarkTheme\r\n          ? '#505151'\r\n          : '#e4e6eb'};\r\n      &:hover {\r\n        cursor: ${p => (p.postButtonActivated ? 'pointer' : 'not-allowed')};\r\n      }\r\n    }\r\n  }\r\n\r\n  .divider {\r\n    background-color: ${p => (p.isDarkTheme ? '#2f3031' : '#dddfe2')};\r\n    margin-inline: auto;\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n`\r\n","import styled, { css } from 'styled-components'\r\n// import Body from './components/Body/Body'\r\nimport Navbar from './components/Navbar'\r\nimport { useEffect, useReducer, useState } from 'react'\r\nimport { toggleReducer, authenModalReducer } from './reducers/reducers'\r\nimport Context from './utils/Context'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport LogInModal from './components/Modals/LogInModal'\r\nimport SignUpModal from './components/Modals/SignUpModal'\r\nimport { themes } from './utils/themes'\r\nimport MainPage from './components/Body/MainPage'\r\nimport ProfilePage from './components/Body/ProfilePage'\r\nimport DropDownMenu from './components/Modals/DropDownMenu'\r\nimport CreatePost from './components/Modals/CreatePost'\r\nimport { auth, db, Storage } from './firebaseConfig'\r\nimport { onAuthStateChanged } from '@firebase/auth'\r\nimport { doc, getDoc } from '@firebase/firestore'\r\n\r\nconst App: React.FC<any> = () => {\r\n  const [isUserSignedIn, setIsUserSignedIn] = useState<boolean>(false)\r\n  const [currentUserInfo, setCurrentUserInfo] = useState<any>(null)\r\n  const [toggleState, dispatchToggle] = useReducer(toggleReducer, {\r\n    isDarkTheme: false,\r\n    dropDownMenuIsVisible: false,\r\n  })\r\n\r\n  useEffect(() => {\r\n    ;(async () => {})()\r\n    onAuthStateChanged(auth, async user => {\r\n      if (user) {\r\n        // set sign-in state\r\n        setIsUserSignedIn(true)\r\n        getDoc(doc(db, 'users', user.uid)).then(userSnap => {\r\n          // get current user specific info\r\n          const currentUserInfo = userSnap.data()\r\n          setCurrentUserInfo(currentUserInfo)\r\n          // set theme\r\n          currentUserInfo?.is_dark_theme\r\n            ? dispatchToggle({ type: 'DARK_THEME' })\r\n            : dispatchToggle({ type: 'LIGHT_THEME' })\r\n        })\r\n      } else {\r\n        setIsUserSignedIn(false)\r\n        setCurrentUserInfo(null)\r\n        dispatchToggle({ type: 'LIGHT_THEME' })\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const [CUAvatarURL, setAvatarURL] = useState<any>(null)\r\n\r\n  useEffect(() => {\r\n    if (currentUserInfo) {\r\n      ;(async () => {\r\n        const uid = currentUserInfo?.uid\r\n        Storage.setPhotosURL(uid, setAvatarURL)\r\n      })()\r\n    }\r\n  }, [currentUserInfo])\r\n\r\n  const [dimBgModal, dispatchDimBgModal] = useReducer(authenModalReducer, {\r\n    action: 'close modals',\r\n  })\r\n\r\n  const renderModal = (action: string) => {\r\n    switch (action) {\r\n      case 'show login modal':\r\n        return <LogInModal />\r\n      case 'show signup modal':\r\n        return <SignUpModal />\r\n      case 'show create-post modal':\r\n        return <CreatePost />\r\n      case 'close modals':\r\n        return\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        isUserSignedIn,\r\n        currentUserInfo,\r\n        toggleState,\r\n        dispatchToggle,\r\n        dimBgModal,\r\n        dispatchDimBgModal,\r\n        CUAvatarURL,\r\n        setAvatarURL,\r\n      }}\r\n    >\r\n      <Router>\r\n        <StyledDiv\r\n          theme={toggleState.isDarkTheme === true ? themes.dark : themes.light}\r\n          authenType={dimBgModal.action}\r\n          toggleState={toggleState}\r\n          onClick={() =>\r\n            toggleState.dropDownMenuIsVisible &&\r\n            dispatchToggle({ type: 'TOGGLE_DROP_DOWN_MENU' })\r\n          }\r\n        >\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/faekbook/' component={MainPage} />\r\n            <Route exact path='/faekbook/:userID' component={ProfilePage} />\r\n          </Switch>\r\n          {/* modals */}\r\n          <div className='dim-bg-modal'>{renderModal(dimBgModal.action)}</div>\r\n          {toggleState.dropDownMenuIsVisible && <DropDownMenu />}\r\n        </StyledDiv>\r\n      </Router>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nconst Screen = css`\r\n  content: '';\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100%;\r\n  z-index: 100;\r\n`\r\n\r\nconst StyledDiv = styled('div')<{ authenType: string; toggleState: any }>`\r\n  position: relative;\r\n  background: ${p => p.theme.body};\r\n  min-height: 100vh;\r\n  &::after {\r\n    ${p =>\r\n      (p.authenType !== 'close modals' || p.toggleState.createPostIsVisible) &&\r\n      Screen}\r\n    background-color: ${p =>\r\n      p.theme.type === 'dark' ? '#00000063' : '#ffffff92'};\r\n  }\r\n  .dim-bg-modal {\r\n    position: fixed;\r\n    background: white;\r\n    border-radius: 10px;\r\n    top: 12%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    z-index: 200;\r\n    border-radius: 10px;\r\n    box-shadow: ${p => p.theme.bxShdw};\r\n  }\r\n`\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './styles/reset.css'\r\nimport { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n       box-sizing: border-box;\r\n    }\r\n    html {\r\n      font-size: 70%;\r\n      @media (min-width: 768px) {\r\n        font-size: 80%;\r\n      }\r\n      @media (min-width: 1024px) {\r\n        font-size: 90%;\r\n      }\r\n    }\r\n    \r\n    body {\r\n      font-size: 1em;\r\n      font-family: 'Roboto', sans-serif;\r\n      /* user-select: none; */\r\n    }\r\n\r\n    img {\r\n      border-radius: 50%;\r\n    }\r\n  `\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}